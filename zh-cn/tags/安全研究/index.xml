<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>安全研究 on chestnut's blog</title><link>https://www.ch35tnut.site/zh-cn/tags/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/</link><description>Recent content in 安全研究 on chestnut's blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Fri, 08 Dec 2023 10:30:07 +0800</lastBuildDate><atom:link href="https://www.ch35tnut.site/zh-cn/tags/%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6/index.xml" rel="self" type="application/rss+xml"/><item><title>Suid</title><link>https://www.ch35tnut.site/zh-cn/research/linux/suid/</link><pubDate>Fri, 08 Dec 2023 10:30:07 +0800</pubDate><guid>https://www.ch35tnut.site/zh-cn/research/linux/suid/</guid><description>简介 SUID全称Set owner User ID up on execution，是Linux给可执行文件的一个属性，设置了s位的程序在运行时其Effective UID将会设置为这个程序的所有者。比如，/bin/ping这个程序的所有者是0（root），它设置了s位，那么普通用户在运行ping时其Effective UID就是0，等同于拥有了root权限。
➜ c ls -ldb $(which pkexec) -rwsr-xr-x 1 root root 30872 2023年 2月13日 /usr/bin/pkexec SUID文件的出现是为了解决一些操作只能由root权限进行，但普通权限用户也需要能通过某种方式进行调用，比如passwd，/etc/shadow只有root可写，但用户自己显然需要可以修改密码，所以passwd被设置为SUID程序，使得普通用户能通过passwd临时获取到修改shadow文件的能力。
-rw-r----- 1 root shadow 1411 2023年 5月10日 /etc/shadow -rwsr-xr-x 1 root root 68248 2022年11月11日 /usr/bin/passwd Linux中每个用户都有独一无二的ID，称为UserID。 为进程定义了三个ID：
Real UserID Effective UserID Saved UserID Real UserID：对于一个进程，这个ID是启动这个进程的用户的用户ID，这个ID定义了这个进程有权访问那些文件。 Effective UserID：通常这个ID和Real UserID相同，但有时会不一样，来允许非特权用户访问只能由特权用户访问的文件。 当非特权的用户运行此文件时，euid是文件所属的用户id，ruid才是当前用户的id -rwsr-xr-x 1 root root 68248 2022年11月11日 /usr/bin/passwd ┌──(chestnut㉿chestnut)-[/root/code/c] └─$ passwd 为 chestnut 更改 STRESS 密码。 ➜ c ps -eo pid,euid,ruid | grep 1692693 1692693 0 1000 Saved UserID，当进程以提升权限运行时，需要做一些非特权的操作，可以通过临时切换到非特权账户来实现。 在执行低权限工作时，将Effective UID 更改为某个较低的权限值，并将 euid 保存到Saved userID（suid），以便在任务完成时用于切换回特权帐户。 https://www.</description></item></channel></rss>