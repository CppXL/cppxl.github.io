<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>反序列化 on chestnut's blog</title><link>https://www.ch35tnut.site/zh-cn/tags/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</link><description>Recent content in 反序列化 on chestnut's blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Mon, 08 Jan 2024 16:57:37 +0800</lastBuildDate><atom:link href="https://www.ch35tnut.site/zh-cn/tags/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/index.xml" rel="self" type="application/rss+xml"/><item><title>JAVA URL DNS 研究</title><link>https://www.ch35tnut.site/zh-cn/research/web/java-deserialization/urldns/</link><pubDate>Mon, 08 Jan 2024 16:57:37 +0800</pubDate><guid>https://www.ch35tnut.site/zh-cn/research/web/java-deserialization/urldns/</guid><description>URL类DNS请求 使用URL.equals会发起DNS请求
public class urltest { public static void main(String[] args) throws MalformedURLException { System.out.println(&amp;#34;hello &amp;#34;); URL u = new URL(&amp;#34;http://www.baidu.com&amp;#34;); URL u1 = new URL(&amp;#34;http://www.baidu.com&amp;#34;); System.out.println(u.equals(u1)); } } 跟进代码，equals代码如下，
protected boolean equals(URL u1, URL u2) { String ref1 = u1.getRef(); String ref2 = u2.getRef(); return (ref1 == ref2 || (ref1 != null &amp;amp;&amp;amp; ref1.equals(ref2))) &amp;amp;&amp;amp; sameFile(u1, u2); } 判断reference是否相同，而后使用sameFile函数，sameFile函数会查看其协议、uri、端口、主机是否相等。
protected boolean sameFile(URL u1, URL u2) { // Compare the protocols.</description></item></channel></rss>