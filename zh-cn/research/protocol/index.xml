<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>协议 on chestnut's blog</title><link>https://www.ch35tnut.site/zh-cn/research/protocol/</link><description>Recent content in 协议 on chestnut's blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Wed, 31 Jan 2024 08:22:24 +0000</lastBuildDate><atom:link href="https://www.ch35tnut.site/zh-cn/research/protocol/index.xml" rel="self" type="application/rss+xml"/><item><title>Netlogon</title><link>https://www.ch35tnut.site/zh-cn/research/protocol/netlogon/</link><pubDate>Thu, 10 Aug 2023 03:30:09 +0800</pubDate><guid>https://www.ch35tnut.site/zh-cn/research/protocol/netlogon/</guid><description>Overview Netlogon 远程协议客户端和服务器只能在加入域的系统上运行。
netlogon协议的交互过程可以详细解释如下:
客户端发起连接,发送包含8字节的ClientChallenge的NetrServerReqChallenge RPC调用给服务器 服务器收到调用后,生成8字节的ServerChallenge发回客户端 客户端和服务端使用Key Derivation Function基于ClientChallenge、ServerChallenge和密码的hash生成会话密钥 客户端使用会话密钥加密ClientChallenge计算ClientCredential,发送给服务器 服务器端会话密钥和ClientChallenge计算ClientCredential，和客户端发送的ClientCredential比较是否相等 服务器端使用会话密钥和ServerCallenge计算ServerCredential，发给客户端 客户端使用会话密钥加密ServerCallenge计算ServerCredential并和服务端发送的ServerCredential作比较，相同则服务端和客户端都完成了身份校验 MS-NRPC
Created at 2023-08-10T03:30:09+08:00</description></item></channel></rss>